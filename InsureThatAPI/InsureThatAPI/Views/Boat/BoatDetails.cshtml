@model InsureThatAPI.Models.BoatDetails
@{
    ViewBag.Title = "Boat Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var urlIdSuccess = new string[] { };
    var urlId_Success = Session["completionTrackB"].ToString();
    if (urlId_Success != null)
    {
        urlIdSuccess = urlId_Success.Split('-');
    }
}
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-indiv-head">
    <h4><span>RURAL LIFESTYLE POLICY</span> / BOAT</h4>
</div>
<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12 endorsmentview">
    <div class="mt-40 mb-40 row"></div>
    <div id="processTabs">
        <ul class="process-steps clearfix col-sm-12">
            <li>
                <a href="javascript:void(0)" class="active">Boat Details</a>
            </li>
            <li>
                <a href="@Url.Action("MotorDetails", "Boat")" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[1] == "1"){ <text>class = "success"</text>}>Motor Details</a>
            </li>
            <li>
                <a href="@Url.Action("BoatOperator", "Boat")" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[2] == "1"){ <text>class = "success"</text>}>Boat Operator</a>
            </li>
            <li>
                <a href="@Url.Action("CoverDetails", "Boat")" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[3] == "1"){ <text>class = "success"</text>}>Cover Details</a>
            </li>
            <li>
                <a href="@Url.Action("Options", "Boat")" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[4] == "1"){ <text>class = "success"</text>}>Options</a>
            </li>
            <li>
                <a href="@Url.Action("InterestedPartiesBoat", "Boat")" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[5] == "1"){ <text>class = "success"</text>}>Interested Parties</a>
            </li>
        </ul>
        <div>
            <div id="errorContainer"></div>
            @using (Ajax.BeginForm("BoatDetails", "Boat", new { cid = 1 }, new AjaxOptions()
            {
                HttpMethod = "POST"
            }, new { @id = "boatDetails", @name = "boatDetails" }))
            {
                @Html.AntiForgeryToken()
                <div id="ptab1">
                    @Html.HiddenFor(p => p.CompletionTrackB, new { @id = "completiontrack" })
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-full-head"><h2>BOAT DETAILS</h2></div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>What is the name of your Boat?</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.BoatnameObj.Name, new { @class = "form-control form-border-bottom", @id = "name" })
                            @Html.HiddenFor(p => p.BoatnameObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Registration details</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.RegistrationdetailObj.Registration, new { @class = "form-control form-border-bottom", @id = "registration" })
                            @Html.HiddenFor(p => p.RegistrationdetailObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Make</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.MakeObj.Make, new { @class = "form-control form-border-bottom", @id = "make" })
                            @Html.HiddenFor(p => p.MakeObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Model</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.ModelbObj.Modelb, new { @class = "form-control form-border-bottom", @id = "model" })
                            @Html.HiddenFor(p => p.ModelbObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Year of manufacture</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.YearmanufactureObj.Year, new { @class = "form-control form-border-bottom", @id = "year",@readonly = "readonly" })
                            @Html.HiddenFor(p => p.YearmanufactureObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Length in metres</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.LengthmetreObj.Metres, new { @class = "form-control form-border-bottom", @id = "metres" })
                            @Html.HiddenFor(p => p.LengthmetreObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Type of Boat </p></div>
                        <div class="col-md-6">
                            @Html.DropDownListFor(p => p.TypeboatObj.Type,@Model.TypeboatObj.TypeList,new { @class = "form-control form-border-bottom", @id = "type"})
                            @Html.HiddenFor(p => p.TypeboatObj.EiId)                            
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Hull meterial</p></div>
                        <div class="col-md-6">
                            @Html.DropDownListFor(p => p.HullmeterialObj.Meterials, @Model.HullmeterialObj.MeterialList, new { @class = "form-control form-border-bottom", @id = "meterials" })
                            @Html.HiddenFor(p => p.HullmeterialObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>What is the top speed</p></div>
                        <div class="col-md-6">
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.SpeedObj.Speed, '0',new { @checked= "checked", @id = "below20" })<label for="radio1"><span><span></span></span>Under 20 knots </label></div>
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.SpeedObj.Speed, '1', new { @id = "20to30" })<label for="radio1"><span><span></span></span>20 to 30 knots</label></div>
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.SpeedObj.Speed, '2', new { @id = "30to50" })<label for="radio1"><span><span></span></span>31 to 50 knots</label></div>
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.SpeedObj.Speed, '3', new { @id = "50" })<label for="radio1"><span><span></span></span>Over 50 knots</label></div>
                            @Html.HiddenFor(p => p.SpeedObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12 ">
                        <p class="col-md-6 col-sm-12 col-xs-12 policy-loc-row">Does your Boat have a bilge blower or gas detector?</p>
                        <div class="col-md-6 col-sm-12 col-xs-12">
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.DetectorObj.Detector, '0', new { @checked = "checked", @id = "no" })<label for="radio1"><span><span></span></span>Yes</label></div>
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.DetectorObj.Detector, '1', new {@id = "yes" })<label for="radio1"><span><span></span></span>No</label></div>
                            @Html.HiddenFor(p => p.DetectorObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Type of mooring or storage </p></div>
                        <div class="col-md-6">
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.MooringstorageObj.Mooringorstorage, '0', new { @checked = "checked", @id = "garage" })<label for="radio1"><span><span></span></span>Garage</label></div>
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.MooringstorageObj.Mooringorstorage, '1', new { @id = "home" })<label for="radio1"><span><span></span></span>Your Home</label></div>
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.MooringstorageObj.Mooringorstorage, '2', new { @id = "31to50" })<label for="radio1"><span><span></span></span>Street</label></div>
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.MooringstorageObj.Mooringorstorage, '3', new { @id = "boatshed" })<label for="radio1"><span><span></span></span>Boat shed</label></div>
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.MooringstorageObj.Mooringorstorage, '4', new { @id = "marina" })<label for="radio1"><span><span></span></span>Marina</label></div>
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.MooringstorageObj.Mooringorstorage, '5', new { @id = "Other-mooring" })<label for="radio1"><span><span></span></span>Other mooring</label></div>
                            @Html.HiddenFor(p => p.MooringstorageObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>If other please detail Here:</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.otherpleasedetailObj.Other, new { @class = "form-control form-border-bottom", @id = "other" })
                            @Html.HiddenFor(p => p.otherpleasedetailObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Address:</p></div>
                        <div class="col-md-6">
                            @Html.DropDownListFor(p => p.AddressObj.Address, @Model.AddressObj.AddressList, "--Select--", new { @class = "form-control form-border-bottom", @id = "meterials" })
                            @Html.HiddenFor(p => p.AddressObj.EiId)
                        </div>
                    </div>
                    <div class="col-md-6 pull-right text-right">
                        <button type="submit" class="button-3d nomargin tab-linker quot-next-btn">Next</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 policy-side-wrap">
    <h3>Policy Sections</h3>
    <div class="well">
        <div class="policy-loc-row">
            <input type="radio" name="location1" id="location1" /><label for="radio1"><span><span></span></span>Home Building Location 1</label>
            <script type="text/javascript">
					$(document).ready(function() {
						$('#location1').click(function () {
						        $("#policy-ed-del-wrap1").fadeIn('slow');
						        $("#policy-ed-del-wrap2").fadeOut('slow');
						});
					});
            </script>
            <div id="policy-ed-del-wrap1" class="policy-ed-del-wrapper" style="display: none;">
                <a class="btn color-bk-btn policy-edit-wrap" href="#">Edit</a>&nbsp; <a class="btn color-bk-btn policy-delet-wrap" href="#">Delete</a>
            </div>
        </div>
        <div class="policy-loc-row">
            <input type="radio" name="location1" id="location2" /><label for="radio1"><span><span></span></span>Valuables</label>
            <script type="text/javascript">
					$(document).ready(function() {
						$('#location2').click(function () {
						        $("#policy-ed-del-wrap2").fadeIn('slow');
						        $("#policy-ed-del-wrap1").fadeOut('slow');
						});
					});
            </script>
            <div id="policy-ed-del-wrap2" class="policy-ed-del-wrapper" style="display: none;">
                <a class="btn color-bk-btn policy-edit-wrap" href="#">Edit</a>&nbsp; <a class="btn color-bk-btn policy-delet-wrap" href="#">Delete</a>
            </div>
        </div>
        <div class="clearfix"></div>
        <input type="submit" name="newcover" value="New Cover">
    </div>
</div>
<script src="~/js/datepicker.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("#year").datepicker({
            minViewMode: 2,
            format: 'yyyy'
        });
    });
</script>
<script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
<script type="text/javascript" src="~/Scripts/additional-methods.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $.validator.addMethod("regex", function (value, element, regexp) {
            if (regexp.constructor != RegExp)
                regexp = new RegExp(regexp);
            else if (regexp.global)
                regexp.lastIndex = 0;
            return this.optional(element) || regexp.test(value);
        }, "Please check your input.");
        $("form[name='boatDetails']").validate({
            errorContainer: "#errorContainer",
            errorLabelContainer: "#errorContainer",
            errorElement: "li",
            rules: {
                "BoatnameObj.Name": {
                    required: true,
                    regex: /^[a-zA-Z ]*$/,
                },
                "RegistrationdetailObj.Registration": {
                    required: true,
                    regex: /^[a-zA-Z ]*$/,
                },
                "MakeObj.Make": {
                    required: true,
                    regex: /^[a-zA-Z ]*$/,
                },
                "ModelbObj.Modelb": {
                    required: true,
                    regex: /^[a-zA-Z ]*$/,
                },
                "YearmanufactureObj.Year": {
                    required: true,
                    regex: /^[0-9]*$/,
                },
                "LengthmetreObj.Metres": {
                    required: true,
                    regex: /^[0-9]*$/,
                },
                "TypeboatObj.Type": "required",
                "HullmeterialObj.Meterials": "required",
                "SpeedObj.Speed": "required",
                "MooringstorageObj.Mooringorstorage": "required",
                "otherpleasedetailObj.Other": {
                    required: true,
                    regex: /^[a-zA-z ]*$/,
                },
                "AddressObj.Address": "required",
            },
            messages: {
                "BoatnameObj.Name": {
                    required: "Please enter name",
                    regex: "Special character & numeric not allowed in name"
                },
                "RegistrationdetailObj.Registration": {
                    required: "Please enter registration",
                    regex: "Special character & numeric not allowed in registration"
                },
                "MakeObj.Make": {
                    required: "Please enter make",
                    regex: "Special character & numeric not allowed in make"
                },
                "ModelbObj.Modelb": {
                    required: "Please enter model",
                    regex: "Special character & numeric not allowed in model"
                },
                "YearmanufactureObj.Year": {
                    required: "Please enter year",
                    regex: "Only numeric allowed in year"
                },
                "LengthmetreObj.Metres": {
                    required: "Please enter metres",
                    regex: "Only numeric allowed in metres"
                },
                "TypeboatObj.Type": "Please select type of boat",
                "HullmeterialObj.Meterials": "Please select meterials",
                "SpeedObj.Speed": "Please select speed",
                "MooringstorageObj.Mooringorstorage": "Please select type of mooring or storage ",
                "otherpleasedetailObj.Other": {
                    regex: "Special character & numeric not allowed in other please detail"
                },
                "AddressObj.Address": "Please enter address",
            },
            onfocusout: function (element) {
                this.element(element);
            },
            submitHandler: function (form) {
                form.submit();
            }
        });
    });
</script>
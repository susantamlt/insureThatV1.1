@model InsureThatAPI.Models.MotorDetails
@{
    ViewBag.Title = "Motor Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var urlIdSuccess = new string[] { };
    var urlId_Success = Session["completionTrackB"].ToString();
    if (urlId_Success != null)
    {
        urlIdSuccess = urlId_Success.Split('-');
    }
}
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-indiv-head">
    <h4><span>RURAL LIFESTYLE POLICY</span> / BOAT</h4>
</div>
<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12 endorsmentview">
    <div class="mt-40 mb-40 row"></div>
    <div id="processTabs">
        <ul class="process-steps clearfix col-sm-12">
            <li>
                <a href="@Url.Action("BoatDetails", "Boat",new {cid=@Model.CustomerId })" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[0] == "1"){ <text>class = "success"</text>}>Boat Details</a>
            </li>
            <li>
                <a href="javascript:void(0)" class="active">Motor Details</a>
            </li>
            <li>
                <a href="@Url.Action("BoatOperator", "Boat",new {cid=@Model.CustomerId })" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[2] == "1"){ <text>class = "success"</text>}>Boat Operator</a>
            </li>
            <li>
                <a href="@Url.Action("CoverDetails", "Boat",new {cid=@Model.CustomerId })" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[3] == "1"){ <text>class = "success"</text>}>Cover Details</a>
            </li>
            <li>
                <a href="@Url.Action("Options", "Boat",new {cid=@Model.CustomerId })" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[4] == "1"){ <text>class = "success"</text>}>Options</a>
            </li>
            <li>
                <a href="@Url.Action("InterestedPartiesBoat", "Boat",new {cid=@Model.CustomerId })" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[5] == "1"){ <text>class = "success"</text>}>Interested Parties</a>
            </li>
        </ul>
        <div>
           <div id="errorContainer"></div>
            @using (Ajax.BeginForm("MotorDetails", "Boat", new { cid =  @ViewBag.cid }, new AjaxOptions()
            {
                HttpMethod = "POST"
            }, new { @id = "motorDetails", @name = "motorDetails" }))
            {
                @Html.AntiForgeryToken()
                <div id="ptab1">
                    @Html.HiddenFor(p => p.CompletionTrackB, new { @id = "completiontrack" })
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-full-head"><h2>MOTOR DETAILS</h2></div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Year Manufactured</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.YearmanufactureObj.Year, new { @class = "form-control form-border-bottom", @id = "year" })
                            @Html.HiddenFor(p => p.YearmanufactureObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Make and Model</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.MakemodelObj.Makemodel, new { @class = "form-control form-border-bottom", @id = "makemodel" })
                            @Html.HiddenFor(p => p.MakemodelObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Serial Number</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.SerialnumberObj.Serialnumber, new { @class = "form-control form-border-bottom", @id = "serialnumber" })
                            @Html.HiddenFor(p => p.SerialnumberObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Fuel Type</p></div>
                        <div class="col-md-6">
                            @Html.DropDownListFor(p => p.FueltypeObj.Type, @Model.FueltypeObj.FualList, new { @class = "form-control form-border-bottom", @id = "fueltype" })
                            @Html.HiddenFor(p => p.FueltypeObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Motor Position</p></div>
                        <div class="col-md-6">
                            @Html.DropDownListFor(p => p.MotorpositionObj.Position, @Model.MotorpositionObj.MotorList, new { @class = "form-control form-border-bottom", @id = "meterials" })
                            @Html.HiddenFor(p => p.MotorpositionObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12 ">
                        <p class="col-md-6 col-sm-12 col-xs-12 policy-loc-row">If Inboard does Your Boat have a bilge blower or gas detector?</p>
                        <div class="col-md-6 col-sm-12 col-xs-12">
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.DetectorObj.Detector, '0', new { @checked = "checked", @id = "no" })<label for="radio1"><span><span></span></span>Yes</label></div>
                            <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(p => p.DetectorObj.Detector, '0', new { @id = "yes" })<label for="radio1"><span><span></span></span>No</label></div>
                            @Html.HiddenFor(p => p.DetectorObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Drive Type</p></div>
                        <div class="col-md-6">
                            @Html.DropDownListFor(p => p.DrivetypeObj.Drivetype, @Model.DrivetypeObj.DriveList, new { @class = "form-control form-border-bottom", @id = "drivetype" })
                            @Html.HiddenFor(p => p.DrivetypeObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>Power (HP)</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.PowerObj.Power, new { @class = "form-control form-border-bottom", @id = "power" })
                            @Html.HiddenFor(p => p.PowerObj.EiId)
                        </div>
                    </div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-6"><p>What is the current <a href="#ShearingDelaysModal2" role="button" data-target="#ShearingDelaysModal2" data-toggle="modal">market value</a> of your Motor</p></div>
                        <div class="col-md-6">
                            @Html.TextBoxFor(p => p.MarketvalueObj.Marketvalue, new { @class = "form-control form-border-bottom", @id = "marketvalue" })
                            @Html.HiddenFor(p => p.MarketvalueObj.EiId)
                        </div>
                    </div>
                    <div id="ShearingDelaysModal2" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="ShearingDelaysModal2" aria-hidden="false">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h3 class="pull-left">Market Value</h3>
                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                        <img src="~/images/close-icon.png" />
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <p>
                                        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                                    </p>
                                    <p> Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
                                </div>
                                <div class="modal-footer">
                                    <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 pull-right text-right">
                        <a href="@Url.Action("BoatDetails", "Boat")" class="button-3d nomargin tab-linker quot-prev-btn">Prev</a>
                        <img src="~/images/button-devider.png">
                        <button class="button-3d nomargin tab-linker quot-next-btn">Next</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 policy-side-wrap">
    <h3>Policy Sections</h3>
    <div class="well">
        <div class="policy-loc-row">
            <input type="radio" name="location1" id="location1" /><label for="radio1"><span><span></span></span>Home Building Location 1</label>
            <script type="text/javascript">
				$(document).ready(function() {
					$('#location1').click(function () {
						    $("#policy-ed-del-wrap1").fadeIn('slow');
						    $("#policy-ed-del-wrap2").fadeOut('slow');
					});
				});
            </script>
            <div id="policy-ed-del-wrap1" class="policy-ed-del-wrapper" style="display: none;">
                <a class="btn color-bk-btn policy-edit-wrap" href="#">Edit</a>&nbsp; <a class="btn color-bk-btn policy-delet-wrap" href="#">Delete</a>
            </div>
        </div>
        <div class="policy-loc-row">
            <input type="radio" name="location1" id="location2" /><label for="radio1"><span><span></span></span>Valuables</label>
            <script type="text/javascript">
				$(document).ready(function() {
					$('#location2').click(function () {
						    $("#policy-ed-del-wrap2").fadeIn('slow');
						    $("#policy-ed-del-wrap1").fadeOut('slow');
					});
				});
            </script>
            <div id="policy-ed-del-wrap2" class="policy-ed-del-wrapper" style="display: none;">
                <a class="btn color-bk-btn policy-edit-wrap" href="#">Edit</a>&nbsp; <a class="btn color-bk-btn policy-delet-wrap" href="#">Delete</a>
            </div>
        </div>
        <div class="clearfix"></div>
        <input type="submit" name="newcover" value="New Cover">
    </div>
</div>
<script src="~/js/datepicker.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("#year").datepicker({
            minViewMode: 2,
            format: 'yyyy'
        });
    });
</script>
<script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
<script type="text/javascript" src="~/Scripts/additional-methods.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $.validator.addMethod("regex", function (value, element, regexp) {
            if (regexp.constructor != RegExp)
                regexp = new RegExp(regexp);
            else if (regexp.global)
                regexp.lastIndex = 0;
            return this.optional(element) || regexp.test(value);
        }, "Please check your input.");
        $("form[name='motorDetails']").validate({
            errorContainer: "#errorContainer",
            errorLabelContainer: "#errorContainer",
            errorElement: "li",
            rules: {
                "YearmanufactureObj.Year": {
                    required: true,
                    regex: /^[0-9]*$/,
                },
                "MakemodelObj.Makemodel": {
                    required: true,
                    regex: /^[a-zA-Z ]*$/,
                },
                "SerialnumberObj.Serialnumber": {
                    required: true,
                    regex: /^[0-9]*$/,
                },
                "FueltypeObj.Type": "required",
                "MotorpositionObj.Position": "required",
                "DrivetypeObj.Drivetype": "required",
                "PowerObj.Power": {
                    required: true,
                    regex: /^[a-zA-Z ]*$/,
                },
                "MarketvalueObj.Marketvalue": {
                    required: true,
                    regex: /^[0-9]*$/,
                },
            },
            messages: {
                "YearmanufactureObj.Year": {
                    required: "Please enter year",
                    regex: "Only numeric allowed in year"
                },
                "MakemodelObj.Makemodel": {
                    required: "Please enter Make & model",
                    regex: "Special character & numeric not allowed in Make & model"
                },
                "SerialnumberObj.Serialnumber": {
                    required: "Please enter metres",
                    regex: "Only numeric allowed in metres"
                },
                "FueltypeObj.Type": "Please select fuel type",
                "MotorpositionObj.Position": "Please select motor position",
                "DrivetypeObj.Drivetype": "Please select drive type",
                "PowerObj.Power": {
                    required: "Please enter power(HP)",
                    regex: "Special character & numeric not allowed in power(HP)"
                },
                "MarketvalueObj.Marketvalue": {
                    required: "Please enter market value",
                    regex: "Only numeric allowedin market value"
                },
            },
            onfocusout: function (element) {
                this.element(element);
            },
            submitHandler: function (form) {
                form.submit();
            }
        });
    });
</script>
@model InsureThatAPI.Models.BoatOperator
@{
    ViewBag.Title = "Boat Operator";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var urlIdSuccess = new string[] { };
    var urlId_Success = Session["completionTrackB"].ToString();
    if (urlId_Success != null)
    {
        urlIdSuccess = urlId_Success.Split('-');
    }
}
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-indiv-head">
    <h4><span>RURAL LIFESTYLE POLICY</span> / BOAT</h4>
</div>
<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12 endorsmentview">
    <div class="mt-40 mb-40 row"></div>
    <div id="processTabs">
        <ul class="process-steps clearfix col-sm-12">
            <li>
                <a href="@Url.Action("BoatDetails", "Boat")" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[0] == "1"){ <text>class = "success"</text>}>Boat Details</a>
            </li>
            <li>
                <a href="@Url.Action("MotorDetails", "Boat")" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[1] == "1"){ <text>class = "success"</text>}>Motor Details</a>
            </li>
            <li>
                <a href="javascript:void(0)" class="active">Boat Operator</a>
            </li>
            <li>
                <a href="@Url.Action("CoverDetails", "Boat")" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[3] == "1"){ <text>class = "success"</text>}>Cover Details</a>
            </li>
            <li>
                <a href="@Url.Action("Options", "Boat")" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[4] == "1"){ <text>class = "success"</text>}>Options</a>
            </li>
            <li>
                <a href="@Url.Action("InterestedPartiesBoat", "Boat")" @if(urlIdSuccess!= null && urlIdSuccess.Length > 0 && urlIdSuccess[5] == "1"){ <text>class = "success"</text>}>Interested Parties</a>
            </li>
        </ul>
        <div>
            <div id="errorContainer"></div>
            @using (Ajax.BeginForm("BoatOperator", "Boat", new { cid = 1 }, new AjaxOptions()
            {
                HttpMethod = "POST"
            }, new { @id = "boatOperator", @name = "boatOperator" }))
            {
                @Html.AntiForgeryToken()
                <div id="ptab3">
                    @Html.HiddenFor(p => p.CompletionTrackB, new { @id = "completiontrack" })
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-full-head"><h2>BOAT OPERATOR</h2></div>
                    <div class="mt-10 mb-10 col-md-12">
                        <div class="col-md-12 table-8">
                            <table class="table" style=" width: 100%; ">
                                <thead>
                                    <tr>
                                        <th class="space_left">Name</th>
                                        <th class="space_left">Years Experienced</th>
                                        <th class="space_left">Types of Boat</th>
                                        <th class="space_right">&nbsp;</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr id="tname-tr-1">
                                        <td class="no-border">
                                            @Html.DropDownListFor(p => p.NameboObj.Name, @Model.NameboObj.NameBOList, new { @class = "form-control form-border-bottom", @id = "meterials" })
                                            @Html.HiddenFor(p => p.NameboObj.EiId)
                                        </td>
                                        <td class="no-border">
                                            @Html.TextBoxFor(p => p.YearsexperienceObj.Year, new { @class = "form-control form-border-bottom year", @id = "year", @readonly = "readonly" })
                                            @Html.HiddenFor(p => p.YearsexperienceObj.EiId)
                                        </td>
                                        <td class="no-border">
                                            @Html.TextBoxFor(p => p.TypesboatObj.Type, new { @class = "form-control form-border-bottom", @id = "type" })
                                            @Html.HiddenFor(p => p.TypesboatObj.EiId)
                                        </td>
                                        <td class="no-border" id="tname-1"><a href="javascript:void(0)" onclick="tnameAdd(1)" class="button-3d">+</a></td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-6 pull-right text-right">
                        <a href="@Url.Action("MotorDetails", "Boat")" class="button-3d nomargin tab-linker quot-prev-btn">Prev</a>
                        <img src="~/images/button-devider.png">
                        <button class="button-3d nomargin tab-linker quot-next-btn">Next</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 policy-side-wrap">
    <h3>Policy Sections</h3>
    <div class="well">
        <div class="policy-loc-row">
            <input type="radio" name="location1" id="location1" /><label for="radio1"><span><span></span></span>Home Building Location 1</label>
            <script type="text/javascript">
					$(document).ready(function() {
						$('#location1').click(function () {
						        $("#policy-ed-del-wrap1").fadeIn('slow');
						        $("#policy-ed-del-wrap2").fadeOut('slow');
						});
					});
            </script>
            <div id="policy-ed-del-wrap1" class="policy-ed-del-wrapper" style="display: none;">
                <a class="btn color-bk-btn policy-edit-wrap" href="#">Edit</a>&nbsp; <a class="btn color-bk-btn policy-delet-wrap" href="#">Delete</a>
            </div>
        </div>
        <div class="policy-loc-row">
            <input type="radio" name="location1" id="location2" /><label for="radio1"><span><span></span></span>Valuables</label>
            <script type="text/javascript">
					$(document).ready(function() {
						$('#location2').click(function () {
						        $("#policy-ed-del-wrap2").fadeIn('slow');
						        $("#policy-ed-del-wrap1").fadeOut('slow');
						});
					});
            </script>
            <div id="policy-ed-del-wrap2" class="policy-ed-del-wrapper" style="display: none;">
                <a class="btn color-bk-btn policy-edit-wrap" href="#">Edit</a>&nbsp; <a class="btn color-bk-btn policy-delet-wrap" href="#">Delete</a>
            </div>
        </div>
        <div class="clearfix"></div>
        <input type="submit" name="newcover" value="New Cover">
    </div>
</div>
<script src="~/js/datepicker.min.js"></script>
<script type="text/javascript">
    $(function () {
        $("#year").datepicker({
            minViewMode: 2,
            format: 'yyyy'
        });
    });
</script>
<script type="text/javascript">
    function tnameAdd(id) {
        var countId = id + 1;
        var replaceA = '<a href="javascript:void(0)" onclick="tnameRemove(' + id + ')" class="button-3d">-</a>';
        var html = '<tr id="tname-tr-'+countId+'"><td class="no-border"><select class="form-control form-border-bottom" name="NameboObj.Name" id="name"><option value="">--Select--</option><option value="1">Peter</option><option value="2">Merlinm</option></select>@Html.HiddenFor(p => p.NameboObj.EiId)</td><td class="no-border">@Html.TextBoxFor(p => p.YearsexperienceObj.Year, new { @class = "form-control form-border-bottom year", @id = "year" })@Html.HiddenFor(p => p.YearsexperienceObj.EiId)</td><td class="no-border">@Html.TextBoxFor(p => p.TypesboatObj.Type, new { @class = "form-control form-border-bottom", @id = "type" })@Html.HiddenFor(p => p.TypesboatObj.EiId)</td><td class="no-border" id="tname-'+countId+'"><a href="javascript:void(0)" onclick="tnameAdd('+countId+')" class="button-3d">+</a></td></tr>';
        $("#tname-" + id).html(replaceA);
        $("#tname-tr-" + id).after(html);
        $(".year").datepicker({
            minViewMode: 2,
            format: 'yyyy'
        });
    }
    function tnameRemove(id) {
        $("#tname-tr-" + id).remove();
    }
</script>
<script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
<script type="text/javascript" src="~/Scripts/additional-methods.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $.validator.addMethod("regex", function (value, element, regexp) {
            if (regexp.constructor != RegExp)
                regexp = new RegExp(regexp);
            else if (regexp.global)
                regexp.lastIndex = 0;
            return this.optional(element) || regexp.test(value);
        }, "Please check your input.");
        $("form[name='boatOperator']").validate({
            errorContainer: "#errorContainer",
            errorLabelContainer: "#errorContainer",
            errorElement: "li",
            rules: {
                "NameboObj.Name": "required",
                "YearsexperienceObj.Year": {
                    required: true,
                    regex: /^[0-9]*$/,
                },
                "TypesboatObj.Type": {
                    required: true,
                    regex: /^[a-zA-Z ]*$/,
                },
            },
            messages: {
                "NameboObj.Name": "Please select name",
                "YearsexperienceObj.Year": {
                    required: "Please enter year",
                    regex: "Only numeric allowed in year"
                },
                "TypesboatObj.Type": {
                    required: "Please enter type",
                    regex: "Special character & numeric not allowed in type"
                },
            },
            onfocusout: function (element) {
                this.element(element);
            },
            submitHandler: function (form) {
                form.submit();
            }
        });
    });
</script>
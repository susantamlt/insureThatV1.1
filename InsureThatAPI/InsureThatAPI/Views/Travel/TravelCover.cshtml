@model InsureThatAPI.Models.TravelCover
@{
    ViewBag.Title = "TravelCover";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<SelectListItem> listsExcessTR = new List<SelectListItem>();
    listsExcessTR.Add(new SelectListItem { Value = "100", Text = "$100" });
    var CountTotal = 0;
    var jCount = 0;
}
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-indiv-head">
    <h4><span>RURAL LIFESTYLE POLICY</span> / TRAVEL</h4>
</div>
<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12 endorsmentview">
    <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 policy-full-head">
        <h2>TRAVEL</h2>
        @if (Session["PolicyNo"] != null)
        {
            <h5>Policy Number: @Session["PolicyNo"].ToString()</h5>
        }
    </div>
    <div class="col-md-5 col-sm-5 col-xs-12 pull-right">
        <div class="pull-right">
            <button type="button" href="#savepolicy" role="button" data-target="#savepolicy" data-toggle="modal" class="button-3d nomargin tab-linker" id="savepolicyP" style="width:auto;border:none;background-color:#000000;color:#FFFFFF;margin-top:10px;line-height:22px;">Save Policy</button>
            <button type="button" href="#referralListModel" role="button" data-target="#referralListModel" data-toggle="modal" class="button-3d nomargin tab-linker" id="referralList" style="width:auto;border:none;background-color:#000000;color:#FFFFFF;margin-top:10px;line-height:22px;">Referral List</button>
            <button type="button" href="#premiumModel" role="button" data-target="#premiumModel" data-toggle="modal" class="button-3d nomargin tab-linker" id="premium" style="width:auto;border:none;background-color:#000000;color:#FFFFFF;margin-top:10px;line-height:22px;">Premium</button>
            <a type="button" href="/Disclosure/DisclosureDetails" role="button" class="button-3d nomargin tab-linker" style="width:auto;border:none;background-color:#000000;color:#FFFFFF;margin-top:10px;line-height:22px;">Disclouser</a>
        </div>
    </div>
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 success" id="savepolicyresult"></div>
    <div id="errorContainer"></div>
    <div class="clearfix"></div>
    <p>
        The travel section provides a multi trip travel insurance cover over the period of the policy.
        It covers you, your children and grandchildren if they are under 25 and not working full time.  They must be listed on the insurance certificate.
    </p> 
    <div class="clearfix"></div>
    <br />
    <div id="referralListModel" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="referralListModel" aria-hidden="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="pull-left">Referral List</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        <img src="~/images/close-icon.png" />
                    </button>
                </div>
                <div class="modal-body">
                    @if (Model.Referels != null && Model.Referels.Count() > 0)
                    {
                        for (int j = 0; j < Model.Referels.Count(); j++)
                        {
                            @Model.Referels[j]<br />
                        }
                    }
                    else
                    {
                        <p>No Referral List</p>
                    }
                    <p id="referralList-p"></p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                </div>
            </div>
        </div>
    </div>
    <div id="savepolicy" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="savepolicy" aria-hidden="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header" style="padding: 15px 26px 0px;">
                    <h3 class="pull-left">Save Policy</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        <img src="~/images/close-icon.png" />
                    </button>
                </div>
                <div class="modal-body">
                    <p>Do you wish to save the answers you have completed and continue later?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                    <button class="btn btn-default no-border savepolicyP" data-dismiss="modal" aria-hidden="true"> Save </button>
                </div>
            </div>
        </div>
    </div>
    <div id="premiumModel" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="premiumModel" aria-hidden="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header" style="padding: 15px 26px 0px;">
                    <h3 class="pull-left">Premium Details</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        <img src="~/images/close-icon.png" />
                    </button>
                </div>
                <div class="modal-body">
                    <table class="table" style=" width: 100%; ">
                        <thead>
                            <tr>
                                <th class="space_left">Section Name</th>
                                <th class="space_left">Base</th>
                                <th class="space_left">FSL</th>
                                <th class="space_left">GST</th>
                                <th class="space_left">Stamp Duty</th>
                                <th class="space_right">Gross</th>
                            </tr>
                        </thead>
                        <tbody id="premiumModel-p-b">
                            <tr>
                                <td colspan="6">No Premium Details</td>
                            </tr>
                        </tbody>
                        <tfoot id="premiumModel-p-f">
                            <tr>
                                <td colspan="6">No Premium Details</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
 
    @using (Ajax.BeginForm("TravelCover", "Travel", new { cid = @ViewBag.cid }, new AjaxOptions()
    {
        HttpMethod = "POST"

    }, new { @id = "travelCover", @name = "travelCover" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(p => p.CustomerId, new { @id = "ciid" })
        @Html.HiddenFor(p => p.PcId, new { id = "pcidd" })
        <div class="error"></div>
        <div class="row feild-table">
            <div class="col-md-12 table-8">
                <table class="table">
                    <thead>
                        <tr>
                            <th class="space_left">Travellers to be covered </th>
                            <th class="space_left">Date of birth</th>
                            <th class="space_right" style="border-right:none;">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.TravellerscoveredObjList != null && Model.TravellerscoveredObjList.Count() > 0)
                        {
                            CountTotal = Model.TravellerscoveredObjList.Count();
                            for (int i = 0; i < Model.TravellerscoveredObjList.Count(); i++)
                            {
                                jCount = i + 1;
                                <tr id="tname-tr-@jCount">
                                    @if (jCount == CountTotal)
                                    {
                                        <td class="no-border">
                                            @Html.TextBoxFor(p => p.TravellerscoveredObj.Travellerscovered, Model.TravellerscoveredObjList[i].Value, new { @autocomplete = "off", @class = "form-control form-border-bottom travelName vlidationInsure commondatatest", @data_eiid = @Model.TravellerscoveredObj.EiId, @data_itid = jCount, @id = "travellerscovered", @placeholder = "Name", @data_regex = "AN" })
                                            @Html.HiddenFor(p => p.TravellerscoveredObj.EiId)
                                        </td>
                                        <td class="no-border">
                                            @Html.TextBoxFor(p => p.DataofbirthObj.Dataofbirth, Model.DataofbirthObjList[i].Value, new { @autocomplete = "off", @class = "form-control form-border-bottom format datePicker vlidationInsure commondataDDMMYYY", @data_eiid = @Model.DataofbirthObj.EiId, @data_itid = jCount, @id = "dataofbirth", @data_regex = "NS", @data_inputmask_alias = "date", @data_inputmask_inputformat = "dd/mm/yyyy" })
                                            @Html.HiddenFor(p => p.DataofbirthObj.EiId)
                                        </td>
                                        <td class="no-border" id="tname-@jCount"><a href="javascript:void(0)" onclick="tnameAdd(@jCount)" class="button-3d">+</a></td>
                                    }
                                    else
                                    {
                                        <td class="no-border">
                                            @Html.TextBoxFor(p => p.TravellerscoveredObj.Travellerscovered, Model.TravellerscoveredObjList[i].Value, new { @autocomplete = "off", @class = "form-control form-border-bottom travelName vlidationInsure commondatatest", @data_eiid = @Model.TravellerscoveredObj.EiId, @data_itid = jCount, @id = "travellerscovered", @placeholder = "Name", @data_regex = "AN" })
                                            @Html.HiddenFor(p => p.TravellerscoveredObj.EiId)
                                        </td>
                                        <td class="no-border">
                                            @Html.TextBoxFor(p => p.DataofbirthObj.Dataofbirth, Model.DataofbirthObjList[i].Value, new { @autocomplete = "off", @class = "form-control form-border-bottom format datePicker vlidationInsure commondataDDMMYYY", @data_eiid = @Model.DataofbirthObj.EiId, @data_itid = jCount, @id = "dataofbirth", @data_regex = "NS", @data_inputmask_alias = "date", @data_inputmask_inputformat = "dd/mm/yyyy" })
                                            @Html.HiddenFor(p => p.DataofbirthObj.EiId)
                                        </td>
                                        <td class="no-border" id="tname-@jCount"><a href="javascript:void(0)" onclick="tnameRemove(@jCount)" class="button-3d">-</a></td>
                                    }
                                </tr>
                            }
                        }
                        else
                        {
                            <tr id="tname-tr-1">
                                <td class="no-border">
                                    @Html.TextBoxFor(p => p.TravellerscoveredObj.Travellerscovered, new { @autocomplete = "off", @class = "form-control form-border-bottom travelName vlidationInsure commondatatest", @data_eiid = @Model.TravellerscoveredObj.EiId, @data_itid = "0", @id = "travellerscovered", @placeholder = "Name", @data_regex = "AN" })
                                    @Html.HiddenFor(p => p.TravellerscoveredObj.EiId)
                                </td>
                                <td class="no-border">
                                    @Html.TextBoxFor(p => p.DataofbirthObj.Dataofbirth, new { @autocomplete = "off", @class = "form-control form-border-bottom format datePicker vlidationInsure commondataDDMMYYY", @data_eiid = @Model.DataofbirthObj.EiId, @data_itid = "0", @id = "dataofbirth", @data_regex = "NS", @data_inputmask_alias = "date", @data_inputmask_inputformat = "dd/mm/yyyy" })
                                    @Html.HiddenFor(p => p.DataofbirthObj.EiId)
                                </td>
                                <td class="no-border" id="tname-1"><a href="javascript:void(0)" onclick="tnameAdd(1)" class="button-3d">+</a></td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td class="no-border"><label id="TravellerscoveredObj.Travellerscovered-error" class="error" for="TravellerscoveredObj.Travellerscovered"></label></td>
                            <td class="no-border"><label id="DataofbirthObj.Dataofbirth-error" class="error" for="DataofbirthObj.Dataofbirth"></label></td>
                            <td class="no-border"><input name="DataofbirthObj.Dataofbirth.error" id="DataofbirthObjDataofbirtherror" type="hidden" value="" /></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="mt-10 mb-10 clearfix">
            <div class="col-md-4"><p>Number of Travellers</p></div>
            <div class="col-md-8">
                @Html.TextBoxFor(p => p.NumbertravelersObj.Numbertravelers, new { @autocomplete = "off", @class = "form-control form-border-bottom vlidationInsure commondatatest", @data_eiid = @Model.NumbertravelersObj.EiId, @id = "Numbertravelers", @data_regex = "N", @readonly = "readonly", @style = "width:80%;" })
                @Html.HiddenFor(p => p.NumbertravelersObj.EiId)
                <label id="NumbertravelersObj.Numbertravelers-error" class="error" for="NumbertravelersObj.Numbertravelers"></label>
            </div>
        </div>
        <div class="mt-10 mb-10 clearfix">
            <p class="col-md-6 col-sm-6 col-xs-12">What is the maximum length of your trips? </p>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YourtripObj.Yourtrip, 30, new { @class = "yourtrip commondataradio vlidationInsure", @id = "radio1", @data_eiid = @Model.YourtripObj.EiId })<label for="radio1"><span><span></span></span>30 Days</label></div>
                <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YourtripObj.Yourtrip, 45, new { @class = "yourtrip commondataradio vlidationInsure", @id = "radio2", @data_eiid = @Model.YourtripObj.EiId })<label for="radio2"><span><span></span></span>45 Days</label></div>
                @Html.HiddenFor(p => p.YourtripObj.EiId)
                <label id="YourtripObj.Yourtrip-error" class="error" for="YourtripObj.Yourtrip"></label>
            </div>
        </div>
        <div class="mt-10 mb-10 clearfix">
            <p class="col-md-6 col-sm-6 col-xs-12">Do you wish to take the <a href="#ExcesshomeSkiMode" role="button" data-target="#ExcesshomeSkiMode" data-toggle="modal">Ski and Winter Sports</a> option?</p>
            <div class="col-md-6 col-sm-6 col-xs-12">
                <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.WintersportObj.Wintersport, '1', new { @class = "wintersport commondataradio vlidationInsure", @id = "radio3", @data_eiid = @Model.WintersportObj.EiId })<label for="radio3"><span><span></span></span>Yes</label></div>
                <div class="col-md-6 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.WintersportObj.Wintersport, '0', new { @class = "wintersport commondataradio vlidationInsure", @id = "radio4", @data_eiid = @Model.WintersportObj.EiId })<label for="radio4"><span><span></span></span>No</label></div>
                @Html.HiddenFor(p => p.WintersportObj.EiId)
                <label id="WintersportObj.Wintersport-error" class="error" for="WintersportObj.Wintersport"></label>
            </div>
        </div>
        <div id="ExcesshomeSkiMode" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="ExcesshomeSkiMode" aria-hidden="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="pull-left">Ski and Winter Sports</h3>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                            <img src="~/images/close-icon.png" />
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Ski means: The act of Skiing.</p>
                        <p>Skiing means: Skiing and snowboarding.</p>
                        <p>Winter Sports means:</p>
                        <p>Leisure bigfoot Skiing, cat Skiing, cross country Skiing (along a designated cross country ski route only), glacier Skiing, ice hockey, ice skating, luging (on ice only), mono Skiing, off-piste Skiing (with a professional guide only), recreational Ski racing (not training for, or participating in, a competition), recreational Skiing, snowmobiling and tobogganing. In all cases Skiing also means snowboarding. It does not mean any of the above activities when they are undertaken for competition, including training or practising purposes</p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="mt-10 mb-10 clearfix">
            <p class="col-md-6 col-sm-6 col-xs-12">Please select the <a href="#ExcesshomeBuildingMode" role="button" data-target="#ExcesshomeBuildingMode" data-toggle="modal">Excess</a></p>
            <div class="col-md-3">
                @Html.DropDownListFor(model => model.ExcessObj.Excess, listsExcessTR, new { @class = "gray-bg-underline form-control form-border-bottom field-length-sm commondataselection vlidationInsure", @id = "excess", @data_eiid = @Model.ExcessObj.EiId })
                @Html.HiddenFor(p => p.ExcessObj.EiId)
                <label id="ExcessObj.Excess-error" class="error" for="ExcessObj.Excess"></label>
            </div>
        </div>
        <div id="ExcesshomeBuildingMode" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="ExcesshomeBuildingModel" aria-hidden="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="pull-left">Excess</h3>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                            <img src="~/images/close-icon.png" />
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>The amount that We will deduct from a claims settlement. This amount is shown in the Certificate.</p>
                        <p>Please Note</p>
                        <ul style="list-style:none">
                            <li>(A) If more than one claim arises out of the same event We will only apply the largest Excess.</li>
                            <li>(B) We will not deduct a young driver's Excess if the event that caused the claim happened when Your Vehicle was with a business for service, repair or parking.</li>
                        </ul>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6 pull-right text-right">
            <button type="submit" class="button-3d nomargin tab-linker quot-next-btn" id="ptabbtnFHC">Save & Continue</button>
        </div>
    }
</div>
<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 policy-side-wrap">
    <h3>Policy Sections</h3>
    <div class="well">
        <h3 style="font-size: 11px;margin-bottom: 2px;">Edit or delete previous sections here</h3>
        @if (Model.PolicyInclusion != null && Model.PolicyInclusion.Count() > 0)
        {
            for (int i = 0; i < Model.PolicyInclusion.Count(); i++)
            {
                <div class="policy-loc-row" id="rightPannel-@i">
                    @Html.RadioButtonFor(m => m.SelectedInclusion, @Model.PolicyInclusion[i].Name, new { @class = "inclusions", @data_name = @Model.PolicyInclusion[i].Name, @data_nid = @i })<label for="radio1"><span><span></span></span>@Model.PolicyInclusion[i].Name</label>
                    <script type="text/javascript">
                        $(document).ready(function () {
                            $('.inclusions').click(function () {
                                var name = $(this).attr('data-name');
                                var nid = $(this).attr('data-nid');
                                $('.policy-ed-del-wrapper').hide();
                                $("#policy-ed-del-wrap-" + nid).show();
                            });
                        });
                    </script>
                    <div id="policy-ed-del-wrap-@i" class="policy-ed-del-wrapper" data style="display: none;">
                        <a id="RPEdit-@i" class="btn color-bk-btn policy-edit-wrap" data-pcid="@Model.PcId" data-policystatus="@Model.PolicyStatus" data-name="@Model.PolicyInclusion[i].Name" data-cid="@Model.CustomerId" data-unid="@Model.PolicyInclusion[i].UnId" data-profileid="@Model.PolicyInclusion[i].ProfileUnId" href="javascript:void(0);">Edit</a>&nbsp;
                        <a id="RPDelete-@i" class="btn color-bk-btn policy-delet-wrap" data-pcid="@Model.PcId" data-policystatus="@Model.PolicyStatus" data-name="@Model.PolicyInclusion[i].Name" data-cid="@Model.CustomerId" data-unid="@Model.PolicyInclusion[i].UnId" data-profileid="@Model.PolicyInclusion[i].ProfileUnId" href="javascript:void(0);">Delete</a>
                    </div>
                </div>
            }
            <script>
                $(".policy-edit-wrap").click(function () {
                    var selectedname = $(this).data('name');
                    var selectedunid = $(this).data('unid');
                    var selectedprofileid = $(this).data('profileid');
                    var selectedcid = $(this).data('cid');
                    var selectedTrId = $(this).data('trid');
                    var PcId = $(this).data('pcid');
                    var policyStatus = $(this).data('policystatus');
                    // var prId = $(this).data('prId');
                    var prId = 1029;
                    $.ajax({
                        type: "POST",
                        url: "/Customer/EndorsePolicy",
                        data: {
                            "name": selectedname, "PcId": PcId, "cid": selectedcid, "trId": selectedTrId, "unid": selectedunid, "Profileid": selectedprofileid, "prId": prId, "policyStatus": policyStatus, "effcdate": null
                        },
                        success: function (responce) {
                            if (responce.Status == false) {
                                $(".error").css("color", "red").html("Failed to edit section, there is a problem in core system.").show().delay(100000).fadeOut();
                                $("html, body").animate({ scrollTop: 0 }, "slow");
                            } else {
                                window.location.href = responce;
                            }
                        }
                    });
                });
                $(".policy-delet-wrap").click(function () {
                    var r = confirm("Are you sure you want to delete this section?");
                    if (r == true) {
                        var PcId = $("#pcidd").val();
                        var selectedunid = $(this).data('unid');
                        var selectedcid = $(this).data('cid');
                        var PcId = $(this).data('pcid');
                        var selectedname = $(this).data('name');
                        var selectedprofileid = $(this).data('profileid');
                        var selectedTrId = $(this).data('trid');
                        var policyStatus = $(this).data('policystatus');
                        var currId = $(this).attr("id");
                        $.ajax({
                            type: "POST",
                            url: "/Customer/DeleteUnit",
                            data: { "unid": selectedunid, "cid": selectedcid, "pcid": PcId, "unit": selectedname, "profileid": selectedprofileid, "trid": selectedTrId, "policystatus": policyStatus },
                            success: function (responce) {
                                if (responce.Status == true) {
                                    var prentId = $('#' + currId).parent().parent().attr("id");
                                    $('#' + prentId).remove();
                                }
                            }
                        });
                    }
                });
                $("#bindcover").click(function () {
                    $.ajax({
                        type: "POST",
                        url: "/Customer/BindCover",
                        data: {},
                        success: function (responce) {
                        }
                    });
                });
            </script>
        }
        else
        {
            if (Model.PolicyInclusions != null && Model.PolicyInclusions.Count() > 0)
            {
                for (int i = 0; i < Model.PolicyInclusions.Count(); i++)
                {
                    <div class="policy-loc-row">
                        @Html.RadioButtonFor(m => m.SelectedInclusion, @i, new { @class = "inclusions", @data_name = @i, @data_nid = @i, @title = "Home Building should be filled first." })<label for="radio1"><span><span></span></span>@Model.PolicyInclusions[i].name</label>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('.inclusions').click(function () {
                                    var name = $(this).attr('data-name');
                                    var nid = $(this).attr('data-nid');
                                    $('.policy-ed-del-wrapper').hide();
                                    $("#policy-ed-del-wrap-" + nid).show();

                                });
                            });
                        </script>
                        <div id="policy-ed-del-wrap-@i" class="policy-ed-del-wrapper" data style="display: none;">
                            <a class="btn color-bk-btn policy-edit-wrap" data-pcid="@Model.PcId" data-policystatus="@Model.PolicyStatus" data-name="@Model.PolicyInclusions[i].name" data-cid="@Model.CustomerId" data-unid="@Model.PolicyInclusions[i].UnitId" data-profileid="@Model.PolicyInclusions[i].ProfileId" href="javascript:void(0);">Edit</a>&nbsp;
                            <a class="btn color-bk-btn policy-delet-wrap" data-pcid="@Model.PcId" data-policystatus="@Model.PolicyStatus" data-name="@Model.PolicyInclusions[i].name" data-cid="@Model.CustomerId" data-unid="@Model.PolicyInclusions[i].UnitId" data-profileid="@Model.PolicyInclusions[i].ProfileId" href="javascript:void(0);">Delete</a>
                        </div>
                    </div>
                    <script>
                        $(".policy-edit-wrap").click(function () {
                            var selectedname = $(this).data('name');
                            var selectedunid = $(this).data('unid');
                            var selectedprofileid = $(this).data('profileid');
                            var selectedcid = $(this).data('cid');
                            var selectedTrId = $(this).data('trid');
                            var PcId = $(this).data('pcid');
                            var policyStatus = $(this).data('policystatus');
                            // var prId = $(this).data('prId');
                            var prId = 1029;
                            $.ajax({
                                type: "POST",
                                url: "/Customer/EndorsePolicy",
                                data: {
                                    "name": selectedname, "PcId": PcId, "cid": selectedcid, "trId": selectedTrId, "unid": selectedunid, "Profileid": selectedprofileid, "prId": prId, "policyStatus": policyStatus, "calltype": 1, "effcdate": null
                                },
                                success: function (responce) {
                                    if (responce.Status == false) {
                                        $(".error").css("color", "red").html("Failed to edit section, there is a problem in core system.").show().delay(100000).fadeOut();
                                        $("html, body").animate({ scrollTop: 0 }, "slow");
                                    } else {
                                        window.location.href = responce;
                                    }
                                }
                            });
                        });
                        $(".policy-delet-wrap").click(function () {
                            var r = confirm("Are you sure you want to delete this section?");
                            if (r == true) {
                                var PcId = $("#pcidd").val();
                                var selectedunid = $(this).data('unid');
                                var selectedcid = $(this).data('cid');
                                var PcId = $(this).data('pcid');
                                var selectedname = $(this).data('name');
                                var selectedprofileid = $(this).data('profileid');
                                var selectedTrId = $(this).data('trid');
                                var policyStatus = $(this).data('policystatus');
                                var currId = $(this).attr("id");
                                $.ajax({
                                    type: "POST",
                                    url: "/Customer/DeleteUnit",
                                    data: { "unid": selectedunid, "cid": selectedcid, "pcid": PcId, "unit": selectedname, "profileid": selectedprofileid, "trid": selectedTrId, "policystatus": policyStatus },
                                    success: function (responce) {
                                        if (responce.Status == true) {
                                            var prentId = $('#' + currId).parent().parent().attr("id");
                                            $('#' + prentId).remove();
                                        }
                                    }
                                });
                            }
                        });
                    </script>
                }
            }

        }
        <div class="clearfix"></div>
        <div class="dropdown pc pc-in">
            <a class="new-cover-policy" href="javascript:void(0);">New Section</a>
            <ul class="dropdown-menu col-md-12 unit">
                @if (Model.NewSections != null && Model.NewSections.Count() > 0)
                {
                    for (int i = 0; i < Model.NewSections.Count(); i++)
                    {
                        if (Model.NewSections[i] == "HomeBuildings")
                        {
                            <li>
                                <a href="javascript:void(0);" class=@Model.NewSections[i]>
                                    + Home Buildings
                                </a>
                            </li>
                        }
                        else if (Model.NewSections[i] == "HomeContents")
                        {
                            <li>
                                <a href="javascript:void(0);" class=@Model.NewSections[i]>
                                    + Home Contents
                                </a>
                            </li>

                        }
                        else if (Model.NewSections[i] == "FarmProperty")
                        {
                            <li>
                                <a href="javascript:void(0);" class=@Model.NewSections[i]>
                                    + Farm Property
                                </a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a href="javascript:void(0);" class=@Model.NewSections[i]>
                                    + @Model.NewSections[i]
                                </a>
                            </li>
                        }
                    }
                }
            </ul>
            <script type="text/javascript">
                        $(document).on('click', 'ul.unit > li', function () {
                            var unitname = $(this).children("a").attr("class");
                            var cid = $("#ciid").val();
                            var pcid = $("#pcidd").val();
                            var prid = 1029;
                            $.ajax({
                                type: "POST",
                                url: "/Customer/AddUnit",
                                data: { "unit": unitname, cid: cid, PcId: pcid, Prid: prid },
                                success: function (responce) {
                                    if (responce.Status == false) {
                                        $(".error").css("color", "red").html("Failed to add section, there is a problem in core system.").show().delay(100000).fadeOut();
                                        $("html, body").animate({ scrollTop: 0 }, "slow");
                                    } else {
                                        window.location.href = responce;
                                    }
                                }
                            });
                        });
            </script>
        </div>
    </div>
</div>
<script src="~/js/jquery.inputmask.bundle.js"></script>
<script src="~/js/inputmask.date.extensions.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".datePicker").inputmask("99/99/9999", { "placeholder": "dd/mm/yyyy" });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("tr td .vlidationInsure").each(function () {
            var id = $(this).attr('id');
            var itid = $(this).data('itid');
            var nItid = itid + 1;
            $(this).attr('id', id + '' + nItid);;
        });
    });
</script>
<script type="text/javascript">
    function tnameAdd(id) {
        var countId = id + 1;
        //var i = 0;
        //$(".table tbody tr").each(function () {
        //    var RowId = $(this).attr('id');
        //    $("#" + RowId + " .form-control").removeAttr("data-itid");
        //    $("#" + RowId + " .form-control").attr("data-itid", i);
        //    i++;
        //});
        $('#tname-' + id + ' > a').css({ 'pointer-events': 'none', 'cursor': 'default' });
        var replaceA = '<a href="javascript:void(0)" onclick="tnameRemove(' + id + ')" class="button-3d">-</a>';
        var html = '<tr id="tname-tr-' + countId + '"><td class="no-border">@Html.TextBoxFor(p => p.TravellerscoveredObj.Travellerscovered, new { @autocomplete = "off", @class = "form-control form-border-bottom travelName commondatatest", @data_eiid = @Model.TravellerscoveredObj.EiId, @data_itid = "", @id = "travellerscovered", @placeholder = "Name",@data_regex= "AN" })@Html.HiddenFor(p => p.TravellerscoveredObj.EiId)</td><td class="no-border">@Html.TextBoxFor(p => p.DataofbirthObj.Dataofbirth, new { @autocomplete = "off", @class = "form-control form-border-bottom format datePicker vlidationInsure commondataDDMMYYY", @data_eiid = @Model.DataofbirthObj.EiId, @data_itid = "", @id = "dataofbirth",@data_regex="NS", @data_inputmask_alias = "date", @data_inputmask_inputformat = "dd/mm/yyyy" })@Html.HiddenFor(p => p.DataofbirthObj.EiId)</td><td class="no-border" id="tname-' + countId + '"><a href="javascript:void(0)" onclick="tnameAdd(' + countId + ')" class="button-3d">+</a></td></tr>';
        $("#tname-" + id).html(replaceA);
        $("#tname-tr-" + id).after(html);
        $("#tname-tr-" + countId + " .form-control").attr("data-itid", 0);
        $("#tname-tr-" + countId + ' #travellerscovered').attr('id', "travellerscovered" + countId).val('');
        $("#tname-tr-" + countId + ' #dataofbirth').attr('id', "dataofbirth" + countId).val('');
        $("tr > td > .datePicker").inputmask("99/99/9999", { "placeholder": "dd/mm/yyyy" });
    }
    function tnameRemove(id) {
        if (confirm('Are you sure? You want to delete this row?')) {
            var elidAll = new Array();
            var itid = '';
            $("#tname-tr-" + id + " td .vlidationInsure").each(function () {
                elidAll.push($(this).attr('data-eiid'));
                itid = $(this).attr('data-itid');
            });
            $.ajax({
                url: '/Customer/DeleteRow',
                type: "POST",
                crossOrigin: true,
                data: { "profileid": "1029", "ElId": elidAll, "unid": '@Session["UnitId"]', "ItId": itid },
                success: function (response) {
                    if (response.status == true) {
                        $("#tname-tr-" + id).remove();
                        var rowCount = $('.table tbody tr').length;
                        var i = 1;                      
                            if (response.identifiers != '') {
                                $.each(response.identifiers, function (j, v) {
                                    $(".table tbody tr").each(function () {
                                        var itt = $(this).attr('id');
                                        var search = itt;
                                        var value = "tname-tr-" + v.Text;
                                        if (search == value) {
                                            $(this).attr('id', "tname-tr-" + v.Value);
                                            $("#tname-tr-" + v.Value + " .form-control").attr("data-itid", v.Value);
                                            j++;
                                            return false;
                                        }
                                    });
                                });
                            }                           
                    }
                }
            });
        }
        var sum = 0;
        $(".travelName").each(function () {
                if ($(this).val() != '') {
                    sum = sum + 1;
                }
            });
        $("#Numbertravelers").val(sum);
    }
    $(document).on('focusout', '.travelName', function () {
        var sum = 0;
        $(".travelName").each(function () {
                if ($(this).val()!=''){
                    sum = sum + 1;
                }
            });
        $("#Numbertravelers").val(sum);
        });
    $(document).ready(function () {
        var sum = 0;
        $(".travelName").each(function () {
            if ($(this).val() != '') {
                sum += +1;
        }
    });
        $("#Numbertravelers").val(sum);
        });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#ptabbtnFHC").click(function (e) {
            e.preventDefault();
            var valid = 1;
            $(".vlidationInsure").each(function () {
                var id = $(this).attr('id');
                var nameAttr = $(this).attr('name');
                var lastChar = id.substr(id.length - 1);
                var newval = $(this).val();
                if (nameAttr == "TravellerscoveredObj.Travellerscovered") {
                    var regex = /^[a-zA-Z0-9 ]*$/;
                    if ($('#dataofbirth' + lastChar).val() != '' && newval == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please enter travellers to be covered').css({ "display": "block" });
                        valid = 0;
                    } else if (!regex.test(newval)) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Special character are not allowed').css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
                if (nameAttr == "DataofbirthObj.Dataofbirth") {
                    var regex = /^(0?[1-9]|[12][0-9]|3[01])[\/](0?[1-9]|1[012])[\/]\d{4}$/;
                    var rVal = newval.split('/');
                    var uptoYears = 0;
                    var Wholives = $("input[name='" + nameAttr + ".error']").val();
                    var diffDateCalculatePets = true;
                    if (regex.test(newval)) {
                        uptoYears = CalculateDiff(newval);
                        var newDatePets = rVal[1] + '/' + rVal[0] + '/' + rVal[2];
                        diffDateCalculatePets = diffDateCalculateER(newDatePets);
                    }
                    if ($("#travellerscovered" + lastChar).val() != '' && newval == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please enter Date of Birth').css({ "display": "block" });
                        valid = 0;
                    } else if (newval != '' && !regex.test(newval)) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please enter an appropriate year').css({ "display": "block" });
                        valid = 0;
                    } else if (newval != '' && rVal[2] != '' && rVal[2].length != 4) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please enter an appropriate year').css({ "display": "block" });
                        valid = 0;
                    } else if (diffDateCalculatePets == false) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('You cannot provide a date in the future').css({ "display": "block" });
                        valid = 0;
                    } else if (Wholives == 'Decline') {
                        $("input[name='" + nameAttr + "']").css({ "border": "1px solid #ff0000" });
                        valid = 0;
                    } else{
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text('').css({ "display": "none" });
                    }
                }
                if (nameAttr == "YourtripObj.Yourtrip") {
                    if ($("input[name='" + nameAttr + "']:checked").val() == undefined) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please select length of your trips').css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
                if (nameAttr == "WintersportObj.Wintersport") {
                    if ($("input[name='" + nameAttr + "']:checked").val() == undefined) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please select Ski and Winter Sports option').css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
                if (nameAttr == "ExcesstcObj.Excess") {
                    if (newval == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please select excess').css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
            });
            if (valid == 1) {
                $("form[name='travelCover']").submit();
            }
        });
    });
    $(document).on('focusout', ".commondatatest", function () {
        var Value = $(this).val();
        var EIId = $(this).data('eiid');
        var ItIdN = $(this).attr('data-itid');
        var Nregex = $(this).data('regex');
        var name = $(this).attr('name');
        var id = $(this).attr('id');
        var strID = id.replace(/\D/g, '');
        if (ItIdN == undefined || ItIdN == "") {
            var ItId = "0";
        } else {
            var ItId = ItIdN;
        }
        var regex = "";
        var text = "";
        if (Nregex == 'N') {
            regex = /^[0-9]*$/;
            text = "Only numeric are allowed";
        } else if (Nregex == 'A') {
            regex = /^[a-zA-Z ]*$/;
            text = "Special character & numeric are not allowed";
        } else if (Nregex == 'AN') {
            regex = /^[a-zA-Z0-9 ]*$/;
            text = "Special character are not allowed";
        } else if (Nregex == 'AS') {
            regex = /^[a-zA-Z/ ]*$/;
            text = "Numericare not allowed";
        } else if (Nregex == 'NS') {
            regex = /^[0-9/ ]*$/;
            text = "Numeric & '/' are allowed";
        }
        if (!regex.test(Value)) {
            $('#' + id).css({ "border": "1px solid #ff0000" });
            $("label[for='" + name + "']").text(text).css({ "display": "block" });
        } else if (Value != "") {
            $('#' + id).css({ "border": "" });
            $("label[for='" + name + "']").text('').css({ "display": "none" });
            elementAjaxCall(Value, EIId, ItId, strID);
        }
    });
    function elementAjaxCall(Value, EIId, ItId) {
        if (Value != '' && EIId != '') {
            $.ajax({
                url: '/Customer/ElementDetails',
                type: "POST",
                crossOrigin: true,
                data: { "PrId": "1029", "ElId": EIId, "Value": Value, "ItId": ItId },
                success: function (data) {
                    if (!$.isEmptyObject(data.valuedata) && data.valuedata.length > 0) {
                        var valuedata = data.valuedata;
                        if (valuedata != '' && valuedata != null) {
                            $.each(valuedata, function (index, value) {
                                var StateIdNewOne = $("[data-eiid=" + value.Element.ElId + "]").attr('id');
                                //$('#' + StateIdNewOne).val(value.Value);
                                if ((value.Element.ElId == 61429 || value.Element.ElId == 61431) && strID != '') {
                                    $("#tname-tr-" + strID + " .form-control").attr("data-itid", value.Element.ItId);
                                }
                                if (!$.isEmptyObject(data.stateData) && data.stateData.length > 0) {
                                    var statedata = data.stateData;
                                    if (statedata != '' && statedata != null) {
                                        $.each(statedata, function (index1, value1) {
                                            var StateIdNew = $("[data-eiid=" + value1.Element.ElId + "]").attr('id');
                                            if (value1.Value == 'Invisible') {
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'none' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Disabled') {
                                                $('#' + StateIdNew).attr('disabled', 'disabled');
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'none' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Read Only') {
                                                $('#' + StateIdNew).attr('readonly', 'readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Strike Through') {
                                                $('#' + StateIdNew).css({ 'text-decoration': 'line-through' });
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Required') {
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).attr('required', 'required');
                                            } else if (value1.Value == '"Not Rendered') {
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            }
                                        });
                                    }
                                }
                            });
                        }
                    }
                    if (!$.isEmptyObject(data.rowsorcedata) && data.rowsorcedata.length > 0) {
                        var rowsorcedata = data.rowsorcedata;
                        if (rowsorcedata != '' && rowsorcedata != null) {
                            $.each(rowsorcedata, function (index, value) {
                                var rowsorcedataIdNewOne = $("[data-eiid=" + value.Element.ElId + "]").attr('id');
                                var rowsorcedataType = $("[data-eiid=" + value.Element.ElId + "]").attr('type');
                                var rowsorcedataName = $("[data-eiid=" + value.Element.ElId + "]").attr('name');
                                var rowsorcedataEIID = $("[data-eiid=" + value.Element.ElId + "]").data('eiid');
                                var rowsorcedataOption = value.Options;
                                if (!$.isEmptyObject(rowsorcedataOption) && rowsorcedataOption.length > 0) {
                                    var html = '<option value="">--Select--</option>';
                                    $.each(rowsorcedataOption, function (index1, value1) {
                                        if (value1.DataValue == 0) {
                                        } else {
                                            html += '<option value="' + value1.DataValue + '">' + value1.DataText + '</option>';
                                        }
                                    });
                                    if (rowsorcedataType == undefined) {
                                        $('#' + rowsorcedataIdNewOne).html(html);
                                    } else {
                                        var NewHtml = '<select class="form-control vlidationInsure form-border-bottom commondataselection" data-eiid="' + rowsorcedataEIID + '" id="' + rowsorcedataIdNewOne + '" name="' + rowsorcedataName + '"></select>';
                                        $('#' + rowsorcedataIdNewOne).replaceWith(NewHtml);
                                        $('#' + rowsorcedataIdNewOne).html(html);
                                    }
                                }
                            });
                        }
                    }
                    if (data.status == "Decline") {
                        var StateNameNewOne = $("[data-eiid=" + EIId + "]").attr('name');
                        var StateNameNewOne1 = StateNameNewOne.split('.').join("");
                        $("#" + StateNameNewOne1 + "error").val('Decline');
                    } else {
                        var StateNameNewOne = $("[data-eiid=" + EIId + "]").attr('name');
                        var StateNameNewOne1 = StateNameNewOne.split('.').join("");
                        $("#" + StateNameNewOne1 + "error").val('');
                    }
                    if (data.referrallists == "") {
                        $('#referralList-p').html('No Referral List');
                    } else {
                        $('#referralList-p').html(data.referrallists);
                    }
                    if (data.usermessage == "" || typeof (data.usermessage) == "undefined") {
                        var newIDforCurrentElement = $("[data-eiid=" + EIId + "]").attr('id');
                        var newNameforCurrentElement = $("[data-eiid=" + EIId + "]").attr('name');
                        var newIDforCurrentElementTypes = $("[data-eiid=" + EIId + "]").attr('type');
                        if (newIDforCurrentElementTypes == 'radio') {
                            var labelid = $('#' + newIDforCurrentElement).parent().parent().siblings('.error').attr("for");
                        } else if (newIDforCurrentElementTypes == 'checkbox') {
                            var labelid = $('#' + newIDforCurrentElement).parent().parent().siblings('.error').attr("for");
                        } else {
                            var labelid = $('#' + newIDforCurrentElement).siblings('.error').attr("for");
                        }
                        if (labelid == undefined) {
                            $("label[for='" + newNameforCurrentElement + "']").html('');
                            $("label[for='" + newNameforCurrentElement + "']").css({ "display": "none" });
                        } else {
                            $("label[for='" + labelid + "']").html('');
                            $("label[for='" + labelid + "']").css({ "display": "none" });
                        }
                    } else {
                        var newIDforCurrentElement = $("[data-eiid=" + EIId + "]").attr('id');
                        var newNameforCurrentElement = $("[data-eiid=" + EIId + "]").attr('name');
                        var newIDforCurrentElementTypes = $("[data-eiid=" + EIId + "]").attr('type');
                        if (newIDforCurrentElementTypes == 'radio') {
                            var labelid = $('#' + newIDforCurrentElement).parent().parent().siblings('.error').attr("for");
                        } else if (newIDforCurrentElementTypes == 'checkbox') {
                            var labelid = $('#' + newIDforCurrentElement).parent().parent().siblings('.error').attr("for");
                        } else {
                            var labelid = $('#' + newIDforCurrentElement).siblings('.error').attr("for");
                        }
                        if (labelid == undefined) {
                            $("label[for='" + newNameforCurrentElement + "']").html(data.usermessage);
                            $("label[for='" + newNameforCurrentElement + "']").css({ "display": "block" });
                        } else {
                            $("label[for='" + labelid + "']").html(data.usermessage);
                            $("label[for='" + labelid + "']").css({ "display": "block" });
                        }
                    }
                }
            });
        }
    }
    $(document).on('click', '.savepolicyP', function () {
        $.ajax({
            type: "POST",
            url: "/Customer/SavePolicy",
            data: { "PrId": 1029 },
            success: function (res) {
                if (res.status == true) {
                    var html = '<div class="alert alert-success"><strong>' + res.result + '</strong></div>';
                    $('#savepolicyresult').html(html).delay(10000).fadeOut();
                } else {
                    var html = '<div class="alert alert-danger"><strong>' + res.result + '</strong></div>';
                    $('#savepolicyresult').html('html').delay(10000).fadeOut();
                }
            }
        });
    });
</script>
@model InsureThatAPI.Models.ClaimsDetails
@{
    ViewBag.Title = "Claims Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-indiv-head">
    <h4><span>RURAL LIFESTYLE POLICY</span> / CLAIMS</h4>
</div>
<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12 endorsmentview">
    <div class="col-lg-9 col-md-9 col-sm-9 col-xs-12 policy-full-head">
        <h2>CLAIMS DETAILS</h2>
    </div>
    @using (Ajax.BeginForm("ClaimsDetails", "Claims", new AjaxOptions()
    {
        HttpMethod = "POST"

    }, new { @id = "claimsDetails", @name = "claimsDetails" }))
    {
        @Html.HiddenFor(p => p.CustomerId, new { @id = "ciid" })
        @Html.HiddenFor(p => p.PcId, new { id = "pcidd" })
        @Html.AntiForgeryToken()
        <div class="clearfix mb-md-30 mt-10 mb-10">
            <p class="col-md-4 col-sm-4 col-xs-12">Claim Type</p>
            <div class="col-md-8 col-sm-8 col-xs-12">
                @Html.DropDownListFor(p => p.ClaimtypeObj.Type, @Model.ClaimtypeObj.ClaimTypeList, new { @class = "form-control form-border-bottom vlidationInsure commondataselection", @data_eiid = @Model.ClaimtypeObj.EiId, @id = "type" })
                @Html.HiddenFor(p => p.ClaimtypeObj.EiId)
                <label id="ClaimtypeObj.Type-error" class="error" for="ClaimtypeObj.Type"></label>
            </div>
        </div>
        <div class="clearfix mb-md-30 mt-10 mb-10">
            <p class="col-md-4 col-sm-4 col-xs-12">Details of Claim</p>
            <div class="col-md-8 col-sm-8 col-xs-12">
                @Html.TextBoxFor(p => p.DetailsclaimObj.Details, new { @class = "form-control form-border-bottom vlidationInsure commondatatest", @data_eiid = @Model.DetailsclaimObj.EiId, @id = "details" })
                @Html.HiddenFor(p => p.DetailsclaimObj.EiId)
                <label id="DetailsclaimObj.Details-error" class="error" for="DetailsclaimObj.Details"></label>
            </div>
        </div>
        <div class="clearfix mb-md-30 mt-10 mb-10">
            <p class="col-md-4 col-sm-4 col-xs-12">Claim Value</p>
            <div class="col-md-8 col-sm-8 col-xs-12">
                $@Html.TextBoxFor(p => p.ClaimvalueObj.Cvalue, new { @maxlength = "13", @class = "form-control form-border-bottom vlidationInsure commondatatest", @style = "width: 94%;display:inline-block;float: none;", @data_eiid = @Model.ClaimvalueObj.EiId, @id = "cvalue" })
                @Html.HiddenFor(p => p.ClaimvalueObj.EiId)
                <label id="ClaimvalueObj.Cvalue-error" class="error" for="ClaimvalueObj.Cvalue"></label>
            </div>
        </div>
        <div class="clearfix mb-md-30 mt-10 mb-10">
            <p class="col-md-4 col-sm-4 col-xs-12">Claim Year</p>
            <div class="col-md-8 col-sm-8 col-xs-12">
                @Html.TextBoxFor(p => p.YearObj.Year, new { @class = "form-control form-border-bottom vlidationInsure commondatatestYearHome", @data_eiid = @Model.YearObj.EiId, @id = "year", @style = "background:none;" })
                @Html.HiddenFor(p => p.YearObj.EiId)
                <label id="YearObj.Year-error" class="error" for="YearObj.Year"></label>
            </div>
        </div>
        <div class="clearfix mb-md-30 mt-10 mb-10">
            <p class="col-md-4 col-sm-4 col-xs-12">Insurer</p>
            <div class="col-md-8 col-sm-8 col-xs-12">
                @Html.TextBoxFor(p => p.InsurerObj.Insurer, new { @class = "form-control form-border-bottom vlidationInsure commondatatest", @data_eiid = @Model.InsurerObj.EiId, @id = "insurer" })
                @Html.HiddenFor(p => p.InsurerObj.EiId)
                <label id="InsurerObj.Insurer-error" class="error" for="InsurerObj.Insurer"></label>
            </div>
        </div>
        <div class="clearfix mb-md-30 mt-10 mb-10">
            <p class="col-md-4 col-sm-4 col-xs-12">Driver</p>
            <div class="col-md-8 col-sm-8 col-xs-12">
                @Html.TextBoxFor(p => p.DriverObj.Driver, new { @class = "form-control form-border-bottom vlidationInsure commondatatest", @data_eiid = @Model.DriverObj.EiId, @id = "driver" })
                @Html.HiddenFor(p => p.DriverObj.EiId)
                <label id="DriverObj.Driver-error" class="error" for="DriverObj.Driver"></label>
            </div>
        </div>        
        <div class="col-md-6 pull-right text-right mt-30">
            <button type="submit" class="button-3d nomargin tab-linker quot-next-btn" id="ptabbtnFHC">Submit</button>
        </div>
    }
</div>
<script src="~/js/jquery.inputmask.bundle.js"></script>
<script src="~/js/inputmask.date.extensions.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".datePicker").inputmask("99/99/9999", { "placeholder": "dd/mm/yyyy" });
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {
        var currentYearNew = new Date().getFullYear();
        $("#ptabbtnFHC").click(function (e) {
            e.preventDefault();
            var valid = 1;
            $(".vlidationInsure").each(function () {
                var id = $(this).attr('id');
                var nameAttr = $(this).attr('name');
                var lastChar = id.substr(id.length - 1);
                var newval = $(this).val();
                var NewValidValue = $("input[name='LscategoryObj.Category']:checked").val();
                if (nameAttr == "ClaimtypeObj.Type") {
                    if (newval == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Please select claim type").css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
                if (nameAttr == "DetailsclaimObj.Details") {
                    var regex = /^[a-zA-Z ]*$/;
                    if (newval == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Please enter details of claim").css({ "display": "block" });
                        valid = 0;
                    } else if (!regex.test(newval)) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Special character & numeric not allowed").css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
                if (nameAttr == "ClaimvalueObj.Cvalue") {
                    var regex = /^[0-9]*$/;
                    if (newval == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Please enter claim value").css({ "display": "block" });
                        valid = 0;
                    } else if (!regex.test(newval)) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Only numeric are allowed").css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
                if (nameAttr == "YearObj.Year") {
                    var regex = /^[0-9]*$/;
                    if (newval == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Please select year").css({ "display": "block" });
                        valid = 0;
                    } else if (!regex.test(newval) && newval != '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Only numeric are allowed").css({ "display": "block" });
                        valid = 0;
                    } else if (newval.length != 4 && newval != '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Year is not proper. Please check").css({ "display": "block" });
                        valid = 0;
                    } else if (newval > currentYearNew && newval != '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("You can not provide future year").css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='#" + nameAttr + "']").text("");
                    }
                }
                if (nameAttr == "InsurerObj.Insurer") {
                    var regex = /^[a-zA-Z ]*$/;
                    if (newval == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Please enter insurer").css({ "display": "block" });
                        valid = 0;
                    } else if (!regex.test(newval)) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Special character & numeric not allowed").css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
                if (nameAttr == "DriverObj.Driver") {
                    var regex = /^[a-zA-Z ]*$/;
                    if (newval == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Please enter driver").css({ "display": "block" });
                        valid = 0;
                    } else if (!regex.test(newval)) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text("Special character & numeric not allowed").css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
            });
            if (valid == 1) {
                $("form[name='claimsDetails']").submit();
            }
        });
    });
    $(document).on('focusout', ".commondatatest", function () {
        var Value = $(this).val();
        var EIId = $(this).data('eiid');
        var ItIdN = $(this).data('itid');
        if (ItIdN == undefined || ItIdN == "") {
            var ItId = "0";
        } else {
            var ItId = ItIdN;
        }
        if (Value != "") {
            elementAjaxCall(Value, EIId, ItId);
        }
    });
    function elementAjaxCall(Value, EIId, ItId) {
        if (Value != '' && EIId != '') {
            $.ajax({
                url: '/Customer/ElementDetails',
                type: "POST",
                crossOrigin: true,
                data: { "PrId": "1029", "ElId": EIId, "Value": Value, "ItId": ItId },
                success: function (data) {
                    if (!$.isEmptyObject(data.valuedata) && data.valuedata.length > 0) {
                        var valuedata = data.valuedata;
                        if (valuedata != '' && valuedata != null) {
                            $.each(valuedata, function (index, value) {
                                var StateIdNewOne = $("[data-eiid=" + value.Element.ElId + "]").attr('id');
                                //$('#' + StateIdNewOne).val(value.Value);
                                if (!$.isEmptyObject(data.stateData) && data.stateData.length > 0) {
                                    var statedata = data.stateData;
                                    if (statedata != '' && statedata != null) {
                                        $.each(statedata, function (index1, value1) {
                                            var StateIdNew = $("[data-eiid=" + value1.Element.ElId + "]").attr('id');
                                            if (value1.Value == 'Invisible') {
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'none' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Disabled') {
                                                $('#' + StateIdNew).attr('disabled', 'disabled');
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Read Only') {
                                                $('#' + StateIdNew).attr('readonly', 'readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Strike Through') {
                                                $('#' + StateIdNew).css({ 'text-decoration': 'line-through' });
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Required') {
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).attr('required', 'required');
                                            } else if (value1.Value == '"Not Rendered') {
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            }

                                        });
                                    }
                                }
                            });
                        }
                    }
                    if (data.referrallist != null || data.referrallist != "") {
                        $('#referralList-p').html('No Referral List');
                    } else {
                        $('#referralList-p').html(data.referrallist);
                    }
                }
            });
        }
    }
</script>
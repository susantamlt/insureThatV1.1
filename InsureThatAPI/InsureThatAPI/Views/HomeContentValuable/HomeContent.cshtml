@model InsureThatAPI.Models.HomeContent
@{
    ViewBag.Title = "Home Content";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-indiv-head">
    <h4><span>RURAL LIFESTYLE POLICY</span> / HOME CONTENT</h4>
</div>
<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12 endorsmentview">
    <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12 policy-full-head">
        <h2>HOME CONTENT</h2>
    </div>
    <div class="clearfix"></div>
    <div id="errorContainer"></div>
    @using (Ajax.BeginForm("HomeContent", "HomeContentValuable", new { cid = @ViewBag.cid }, new AjaxOptions()
    {
        HttpMethod = "POST"

    }, new { @id = "homeContent", @name = "homeContent" }))
    {
        @Html.AntiForgeryToken()
        <div class="col-md-12 mt-10 mb-10">
            @Html.HiddenFor(m=>m.CustomerId)
            <div class="col-md-4"><p>Location</p></div>
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.SubUrb, @Model.SubUrb, "-- Suburb --", new { @class = "form-control form-inline select2hd select2hdc", @id = "suburb", @name = "suburb" })
                <select name="state" id="state" class="form-control form-inline select2hd">
                    <option value="">State</option>
                    <option value="1">Melborne</option>
                    <option value="2">Sydney</option>
                </select>,
            
                Postcode <input type="text" placeholder="Post Code" name="postcode" id="postCode" class="form-control form-inline field-length-xs" />.            
            </div>
        </div>
        <div class="col-md-12 mt-10 mb-10">
            <div class="col-md-4"><p>How much would it cost to replace your unspecified contents</p></div>
            <div class="col-md-8">
                @Html.TextBoxFor(p => p.CosttoreplaceObj.Costtoreplaces, new { @class = "form-control form-border-bottom", @id = "costtoreplaces"})<br />
                <p class="mini-text">(The minimum is $150,000)</p>
                @Html.HiddenFor(p => p.CosttoreplaceObj.EiId)
            </div>
        </div>
        <div class="col-md-12 mt-10 mb-10">
            <div class="col-md-12">
                <p class="mini-text">If any of the items for example( pairs, Collections or Sets are valued at more than $10,000 they need to be listed separately:</p>
                <p class="mini-text">a watch, a curio, a work of art, a fur, a coin or collection of coins, a medal or collection of medals, a stamp or collection of stamps, a document or set of documents, an item or set of jewellery or a gold, silver or platinum object.)</p>
            </div>
        </div>
        <div class="col-md-12 mt-10 mb-10">
            <div class="col-md-12 table-8">
                <table class="table" style="width:100%;">
                    <thead>
                        <tr>
                            <th class="space_left">Description</th>
                            <th class="space_left">Sum Insured</th>
                            <th class="space_right">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr id="tname-tr-1">
                            <td>
                                @Html.TextBoxFor(p => p.DescriptionObj.Description, new { @class = "form-control form-inline field-length-lg no-border", @id = "description", @placeholder = "Engagement Ring",@style="width:100%;" })
                                @Html.HiddenFor(p => p.DescriptionObj.EiId)
                            </td>
                            <td class="price stotal">
                                $ &nbsp;@Html.TextBoxFor(p => p.SuminsuredObj.Suminsured, new { @class = "form-control form-inline field-length-xs no-border sumoftotalcover", @id = "suminsured", @placeholder = "15000" })/-
                                @Html.HiddenFor(p => p.SuminsuredObj.EiId)
                            </td>
                            <td class="no-border" id="tname-1"><a href="javascript:void(0)" onclick="tnameAdd(1)" class="button-3d">+</a></td>
                        </tr>
                        <tr>
                            <td>&nbsp;</td>
                            <td>&nbsp;</td>
                            <td>&nbsp;</td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td class="data_right text-right">Total Sum Insured</td>                            
                            <td class="price" id="tPrice">$ <span id="totalcoves">0</span>/-</td>
                            @Html.HiddenFor(p => p.TotalcoverObj.Totalcover,new {@id= "totalcover" })
                            @Html.HiddenFor(p => p.TotalcoverObj.EiId)
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div class="col-md-12 mt-10 mb-10 ">
            <p class="col-md-12 col-sm-12 col-xs-12 policy-loc-row">How many years is it since you last made an insurance claim on your home contents?</p>
            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim,'0',new {@id = "yearclaim0", @class = "yearclaim" })<label for="yearclaim0"><span><span></span></span>0 years</label></div>
                <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim,'1',new { @id = "yearclaim0", @class = "yearclaim" })<label for="yearclaim1"><span><span></span></span>1 years</label></div>
                <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim,'2', new { @id = "yearclaim0", @class = "yearclaim" })<label for="yearclaim2"><span><span></span></span>2 or more years</label></div>
            </div>
            @Html.HiddenFor(p => p.YearclaimObj.EiId)
        </div>
        <div class="mt-10 mb-10 col-md-12 ">
            <div class="col-md-6"><p>Please select the excess you wish to pay</p></div>
            <div class="col-md-3">
                @Html.DropDownListFor(Model => Model.ExcesspayObj.Excess, @Model.ExcesspayObj.ExcessList, "-- Select --", new { @class = "gray-bg-underline form-control form-border-bottom field-length-sm", @id = "excess" })
                @Html.HiddenFor(p => p.ExcesspayObj.EiId)
            </div>
            <div class="col-md-3">
                <div class="policy-loc-row"><input type="checkbox" name="ImposedObj.Imposed" id="imposed" value="false"><label for="checkbox1"><span><span></span></span>Imposed</label></div>
            </div>
        </div>
        <div class="mt-40">
            <div class="col-md-8"></div>
            <div class="col-md-4 pull-right">
                <input type="submit" value="SUBMIT" />
            </div>
        </div>
    }
</div>
<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 policy-side-wrap">
    <h3>Policy Sections</h3>
    <div class="well">
        <div class="policy-loc-row">
            <input type="radio" name="location1" id="location1" /><label for="radio1"><span><span></span></span>Home Building Location 1</label>
            <script type="text/javascript">
				$(document).ready(function() {
					$('#location1').click(function () {
						$("#policy-ed-del-wrap1").fadeIn('slow');
						$("#policy-ed-del-wrap2").fadeOut('slow');
					});
				});
            </script>
            <div id="policy-ed-del-wrap1" class="policy-ed-del-wrapper" style="display: none;">
                <a class="btn color-bk-btn policy-edit-wrap" href="#">Edit</a>&nbsp; <a class="btn color-bk-btn policy-delet-wrap" href="#">Delete</a>
            </div>
        </div>
        <div class="policy-loc-row">
            <input type="radio" name="location1" id="location2" /><label for="radio1"><span><span></span></span>Valuables</label>
            <script type="text/javascript">
				$(document).ready(function() {
					$('#location2').click(function () {
						$("#policy-ed-del-wrap2").fadeIn('slow');
						$("#policy-ed-del-wrap1").fadeOut('slow');
					});
				});
            </script>
            <div id="policy-ed-del-wrap2" class="policy-ed-del-wrapper" style="display: none;">
                <a class="btn color-bk-btn policy-edit-wrap" href="#">Edit</a>&nbsp; <a class="btn color-bk-btn policy-delet-wrap" href="#">Delete</a>
            </div>
        </div>
        <div class="clearfix"></div>
        <input type="submit" name="newcover" value="New Cover">
    </div>
</div>
<script type="text/javascript">
    $(document).on('keyup','.sumoftotalcover',function () {
        var sum = 0;
        $(".sumoftotalcover").each(function () {
            sum += +$(this).val();
        });
        $("#totalcoves").text(sum);
        $("#totalcover").val(sum);
    });
    function tnameAdd(id) {
        var countId = id + 1;
        var replaceA = '<a href="javascript:void(0)" onclick="tnameRemove(' + id + ')" class="button-3d">-</a>';
        var html = '<tr id="tname-tr-' + countId + '"><td>@Html.TextBoxFor(p => p.DescriptionObj.Description, new { @class = "form-control form-inline field-length-lg no-border", @id = "description", @placeholder = "Engagement Ring",@style="width:100%;" })@Html.HiddenFor(p => p.DescriptionObj.EiId)</td><td class="price stotal">$ &nbsp;@Html.TextBoxFor(p => p.SuminsuredObj.Suminsured, new { @class = "form-control form-inline field-length-xs no-border sumoftotalcover", @id = "suminsured", @placeholder = "15000" })/-@Html.HiddenFor(p => p.SuminsuredObj.EiId)</td><td class="no-border" id="tname-' + countId + '"><a href="javascript:void(0)" onclick="tnameAdd(' + countId + ')" class="button-3d">+</a></td></tr>';
        $("#tname-" + id).html(replaceA);
        $("#tname-tr-" + id).after(html);
    }
    function tnameRemove(id) {
        $("#tname-tr-" + id).remove();
        var sum = 0;
        $(".sumoftotalcover").each(function () {
            sum += +$(this).val();
        });
        $("#totalcoves").text(sum);
        $("#totalcover").val(sum);
    }
</script>
<script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
<script type="text/javascript" src="~/Scripts/additional-methods.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $.validator.addMethod("regex", function (value, element, regexp) {
            if (regexp.constructor != RegExp)
                regexp = new RegExp(regexp);
            else if (regexp.global)
                regexp.lastIndex = 0;
            return this.optional(element) || regexp.test(value);
        }, "Please check your input.");
        //$("form[name='homeContent']").validate({
        //    errorContainer: "#errorContainer",
        //    errorLabelContainer: "#errorContainer",
        //    errorElement: "li",
        //    rules: {
        //        "LocationObj.Location": {
        //            regex: /^[a-zA-Z ]*$/,
        //        },
        //        "suburb": "required",
        //        "state": "required",
        //        "postcode": {
        //            regex: /^[0-9]*$/,
        //        },
        //        "CosttoreplaceObj.Costtoreplaces": {
        //            regex: /^[0-9]*$/,
        //            min: 150000
        //        },
        //        "DescriptionObj.Description": {
        //            required:true,
        //            regex: /^[a-zA-Z ]*$/,
        //        },
        //        "SuminsuredObj.Suminsured": {
        //            required: true,
        //            regex: /^[0-9]*$/,
        //        },
        //        "YearclaimObj.Yearclaim": "required",
        //        "ExcessObj.Excess": {
        //            required: function (el) {
        //                if ($(".yearclaim").val() != '') {
        //                    return true;
        //                }
        //            },
        //        },
        //        "ImposedObj.Imposed": {
        //            required: function (el) {
        //                if ($("#excess").val() != '') {
        //                    return true;
        //                }
        //            },
        //        },
        //    },
        //    messages: {
        //        "LocationObj.Location": "Special character and Number not allowed in location ",
        //        "postcode": {
        //            regex: "Only numeric allowed home building"
        //        },
        //        "CosttoreplaceObj.Costtoreplaces": {
        //            regex: "Special character not allowed home building",
        //            min: "Please enter a value greater than or equal to $150,000."
        //        },
        //        "DescriptionObj.Description": {
        //            required: "Please enter description",
        //            regex: "Special character and Number not allowed",
        //        },
        //        "SuminsuredObj.Suminsured": {
        //            required: "Please enter sum insured",
        //            regex: "Only numeric allowed",
        //        },
        //        "YearclaimObj.Yearclaim": "Please select year for insurance claim",
        //        "ExcessObj.Excess": "Please select excess",
        //        "ImposedObj.Imposed": "Please checked imposed",
        //    },
        //    onfocusout: function (element) {
        //        this.element(element);
        //    },
        //    submitHandler: function (form) {
        //        form.submit();
        //    }
        //});
    });
</script>
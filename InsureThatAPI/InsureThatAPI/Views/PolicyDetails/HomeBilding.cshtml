@model InsureThatAPI.Models.ViewEditPolicyDetails
@{
    ViewBag.Title = "Home Bilding";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@if (Model.PolicyData != null)
{
    <div class="row content">
        <div class="col-lg-6 col-md-6 col-sm-4 col-xs-12 policy-full-head">
            <h2> POLICY DETAILS
                <span>
                    @if (Model.PolicyData.InsuredName != null)
                    {
                        <span>@Model.PolicyData.InsuredName /</span>
                    }
                    @if (Model.PolicyData.PolicyNumber != null)
                    {
                        @Model.PolicyData.PolicyNumber
                    }
                    @if (Model.PolicyData.PolicyStatus != null)
                    {
                        if (Model.PolicyData.PolicyStatus == "AP")
                        { <span>/ Endorsed Policy</span> }
                        else if (Model.PolicyData.PolicyStatus == "AQ")
                        { <span>/ Endorsement Quotation</span> }
                        else if (Model.PolicyData.PolicyStatus == "CP")
                        { <span>/ Cancelled Policy</span> }
                        else if (Model.PolicyData.PolicyStatus == "CQ")
                        { <span>/ Cancellation Quotation</span> }
                        else if (Model.PolicyData.PolicyStatus == "DQ")
                        { <span>/ Discarded Quotation</span> }
                        else if (Model.PolicyData.PolicyStatus == "NP")
                        { <span>/ New Policy</span> }
                        else if (Model.PolicyData.PolicyStatus == "NQ")
                        { <span>/ Quotation</span> }
                        else if (Model.PolicyData.PolicyStatus == "RP")
                        { <span>/ Renewed Policy</span> }
                        else if (Model.PolicyData.PolicyStatus == "RQ")
                        { <span>/ Renewal Invitation</span> }
                        else if (Model.PolicyData.PolicyStatus == "XP")
                        { <span>/ Cancelled Policy</span> }
                        else if (Model.PolicyData.PolicyStatus == "XQ")
                        { <span>/ Cancellation Quotation</span> }
                    }
                </span>
            </h2>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
            <a class="btn color-bk-btn col-md-4 margin-right-10 leftmargin-sm policyinfo-btn pull-right" href="@Url.Action("PolicyHistory", "RuralLifeStyle", new { cid = @ViewBag.cid, PcId = Model.PolicyData.PolicyNumber })">View Policy History</a>
            <a class="btn color-bk-btn col-md-3 margin-left-5 leftmargin-sm policyinfo-btn pull-right" href="@Url.Action("InsuredList", "Customer", new { cid = @ViewBag.cid, PolicyNumber = Model.PolicyData.PolicyNumber })">View Insured</a>
            <a class="btn color-bk-btn col-sm-3 margin-left-5 policyinfo-btn pull-right" href="@Url.Action("NewPolicy", "Customer", new { cid = @ViewBag.cid})">Add Policy</a>
            <a class="btn color-bk-btn col-sm-3 margin-left-5 policyinfo-btn pull-right" style="margin-top:20px;" href="@Url.Action("InsuredPolicys", "Customer", new { cid = @ViewBag.cid})">Policy List</a>
        </div>
        <div class="mt-50 mb-50"></div>
        <div class="p-10 col-md-12 border-bottom-1 mb-15">
            <div class="col-lg-1 col-md-1 col-sm-2 col-xs-12">
                <img src="~/images/farm-icon.png" class="policy-list-img">
            </div>
            <div class="col-lg-11 col-md-11 col-sm-10 col-xs-12">
                <div class="col-lg-9 col-md-9 col-sm-9 col-xs-12">
                    <div class="row mb-md-30 mt-10 mb-10">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 p-10">
                                Policy Type: @if (Model.PolicyData.PrId == 1029)
                                {
                                    <lable>Rural Lifestyle</lable>
                                }
                                else
                                { <label>Farm</label>
                                }
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 p-10">
                                Policy No: @Model.PolicyData.PolicyNumber
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 p-10">Insured: @Model.PolicyData.InsuredName</div>
                        </div>
                    </div>
                    <div class="row mb-md-30 mt-10 mb-10">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            @Html.TextBoxFor(m => m.PolicyData.InceptionDate, "{0:dd/MM/yyyy}", htmlAttributes: new { @type = "hidden", @class = "startdates" })
                            @Html.HiddenFor(m => m.PolicyData.PolicyStatus, new { @class = "policystus" })
                            @*@Html.HiddenFor(p => p.PolicyData.InceptionDate.Date.ToString("dd/MM/yyyy"), new { @class = "startdate" })*@
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 p-10">Start Date: <span id="pStartDate">@Model.PolicyData.InceptionDate.ToString("dd/MM/yyyy")</span></div>
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 p-10">End Date: <span id="pEndDate">@Model.PolicyData.ExpiryDate.ToString("dd/MM/yyyy")</span></div>
                            <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12 p-10">Duration: @Model.PolicyData.CoverPeriod &nbsp;@Model.PolicyData.CoverPeriodUnit</div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    <div class="pc-list-btn col-sm-offset-0 col-xs-offset-1">
                        <div class="dropdown" style="list-style: none;">
                            <a href="#" class="btn-primary btn col-md-12 mb-5 width-480-100 vwdoc ">View Documents </a>
                            <ul class="dropdown-menu"></ul>
                        </div>
                    </div>
                    @if (Model.PolicyData.PolicyStatus == "NP" || Model.PolicyData.PolicyStatus == "RP" || Model.PolicyData.PolicyStatus == "AP")
                    {
                        <button type="button" href="#cancelpolicymodel" role="button" data-target="#cancelpolicymodel" class="btn-primary btn col-md-12 width-480-100" data-toggle="modal">Cancel Policy</button>
                    }
                </div>
                <div id="cancelpolicymodel" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="cancelpolicymodel" aria-hidden="false">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h3 class="pull-left">Cancel Policy</h3>
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                    <img src="~/images/close-icon.png" />
                                </button>
                            </div>
                            <div class="modal-body">
                                <p style="margin-bottom: 5px;">Are you sure cancelling this policy. Action can not be reversed.</p>
                                <p style="margin-bottom: 5px;">Please enter reason for cancellation <input name="cancelreason" class="cancelpol form-control form-inline" type="text" /></p>
                                <p style="margin-bottom: 5px;">
                                    Cancellation Date <input name="pCanDate" id="pCanDate" class="form-control form-inline datePicker" data-inputmask-alias="date" data-inputmask-inputformat="dd/mm/yyyy" />
                                    <label id="pCanDate-error" class="error" for="pCanDate" style="display:none;"></label>
                                </p>
                            </div>
                            <div class="modal-footer">
                                <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                                <button class="btn btn-default no-border" id="cancelpo" aria-hidden="true"> Confirm </button>
                            </div>
                        </div>
                    </div>
                    <script src="~/js/jquery.inputmask.bundle.js"></script>
                    <script src="~/js/inputmask.date.extensions.js"></script>
                    <script type="text/javascript">
                        $(".datePicker").inputmask("99/99/9999", { "placeholder": "dd/mm/yyyy" });
                    </script>
                </div>
                <div id="Bindcovermodel" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="Bindcovermodel" aria-hidden="false">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h3 class="pull-left">Bind Quotation</h3>
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                    <img src="~/images/close-icon.png" />
                                </button>
                            </div>
                            <div class="modal-body">
                                <p>If all the inclustions are completed then you can continue and bind the cover and complete the policy.</p>
                            </div>
                            <div class="modal-footer">
                                <button class="btn btn-default no-border" id="bindcover" aria-hidden="true"> Bind </button>
                                <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="endorsepolicys" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="endorsepolicys" aria-hidden="false">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h3 class="pull-left">Endorse Policy</h3>
                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                    <img src="~/images/close-icon.png" />
                                </button>
                            </div>
                            <div class="modal-body">
                                <p></p>

                                <p><B>Cover Period:</B> <span>@Model.PolicyData.CoverPeriod &nbsp;@Model.PolicyData.CoverPeriodUnit </span></p>
                                <p>
                                    <B>Status:</B> @if (Model.PolicyData.PolicyStatus != null)
                                    {
                                        if (Model.PolicyData.PolicyStatus == "AP")
                                        { <span> Endorsed Policy</span> }
                                        else if (Model.PolicyData.PolicyStatus == "AQ")
                                        { <span> Endorsement Quotation</span> }
                                        else if (Model.PolicyData.PolicyStatus == "CP")
                                        { <span> Cancelled Policy</span> }
                                        else if (Model.PolicyData.PolicyStatus == "CQ")
                                        { <span> Cancellation Quotation</span> }
                                        else if (Model.PolicyData.PolicyStatus == "DQ")
                                        { <span> Discarded Quotation</span> }
                                        else if (Model.PolicyData.PolicyStatus == "NP")
                                        { <span> New Policy</span> }
                                        else if (Model.PolicyData.PolicyStatus == "NQ")
                                        { <span> Quotation</span> }
                                        else if (Model.PolicyData.PolicyStatus == "RP")
                                        { <span> Renewed Policy</span> }
                                        else if (Model.PolicyData.PolicyStatus == "RQ")
                                        { <span> Renewal Invitation</span> }
                                        else if (Model.PolicyData.PolicyStatus == "XP")
                                        { <span> Cancelled Policy</span> }
                                        else if (Model.PolicyData.PolicyStatus == "XQ")
                                        { <span> Cancellation Quotation</span> }
                                    }
                                </p>
                                <p><B>From what date would you like these changes to occur? </B><span> <input name="effectivedate" id="effectivedate" type="text" class="form-control col-sm-2 form-border-bottom datePicker vlidationInsure commondataDDMMYYYlocal" data-inputmask-alias="date" data-inputmask-inputformat="dd/mm/yyyy" /></span></p>
                                <label id="effectivedate-error" class="error" for="effectivedate"></label>
                                <p>Please note that you cannot change the start date of your policy. </p>
                            </div>
                            <div class="modal-footer">
                                <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                                <button class="btn btn-default no-border" id="endorsecover" aria-hidden="true"> Endorse </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div class="error"></div>
<div class="row content">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-full-head">
        <div class="row content policy-full-view">
            <div id="screens" class="col-lg-9 col-md-9 col-sm-9 col-xs-12">
                <div class="deletedsuccess"></div>
                @if (Model.PolicyData != null)
                {
                    using (Html.BeginForm("ActionName", "PolicyDetails", FormMethod.Get, new { cid = @ViewBag.cid, PcId = @Model.PolicyData.PcId }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <div class="well">
                            @Html.HiddenFor(p => p.CustomerId, new { @id = "ciid" })
                            @Html.HiddenFor(p => p.PcId, new { id = "pcidd" })
                            @Html.HiddenFor(p => p.PolicyData.TrId, new { @id = "tridd" })
                            <h3 class="col-md-9 col-sm-9 col-xs-12">HOME BUILDING DETAILS</h3>
                            @if (Model.ReferralList != "")
                            {
                                <div class="col-md-3 col-sm-3 col-xs-12">
                                    <div class="pull-right">
                                        <button type="button" href="#referralListModel" role="button" data-target="#referralListModel" data-toggle="modal" class="button-3d nomargin tab-linker" id="referralList" style="width:auto;border:none;background-color:#000000;color:#FFFFFF;margin-top:10px;line-height:22px;">Referral List</button>
                                    </div>
                                </div>
                                <div id="referralListModel" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="referralListModel" aria-hidden="false">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h3 class="pull-left">Referral List</h3>
                                                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                                    <img src="~/images/close-icon.png" />
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <p>@Html.Raw(HttpUtility.HtmlDecode(Model.ReferralList));</p>
                                            </div>
                                            <div class="modal-footer">
                                                <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-12 col-sm-12 col-xs-12 alert alert-info"><strong>Home Description</strong></p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-8 col-sm-8 col-xs-12">I want to insure a property at</p>
                                <p class="col-md-4 col-sm-4 col-xs-12 text-right xs-text-left">
                                    @if (Model.SectionData != null && Model.SectionData.AddressData != null)
                                    {
                                        <span>@Model.SectionData.AddressData.AddressLine1,&nbsp;@Model.SectionData.AddressData.Suburb,&nbsp;@Model.SectionData.AddressData.State,&nbsp;@Model.SectionData.AddressData.Postcode</span>
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">The building sits on a property size of  </p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60009) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60009).Value != ""))
                                    {
                                        @Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60009).Value <label>Hectares</label>
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Is <B>your Home Building within 100 meters</B> from<b> Uncleared Natural Bushland</b>, a State or National Forest or a commercial plantation of trees?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60013) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60013).Value == "1"))
                                    {
                                        <span>Yes</span>
                                    }
                                    else
                                    {
                                        <span>No</span>
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Description of this building at this location</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60007) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60007).Value == "1"))
                                    {
                                        <span>Main Home</span>
                                    }
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60007) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60007).Value == "2"))
                                    {
                                        <span>Managers Home</span>
                                    }
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60007) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60007).Value == "3"))
                                    {
                                        <span>Gate Home</span>
                                    }
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60007) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60007).Value == "4"))
                                    {
                                        <span>Guest Home</span>
                                    }
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60007) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60007).Value == "5"))
                                    {
                                        <span>Pool Home</span>
                                    }
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60007) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60007).Value == "6"))
                                    {
                                        <span>Summer Home</span>
                                    }
                                </p>
                            </div>
                            @*<div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Is your Home Building located on farm?</p>
                                <p class="col-md-2 col-sm-2 col-xs-2 text-right">
                                    @if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60015) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60015).Value == "1"))
                                    {
                                        <span>Yes</span>
                                    }
                                    else
                                    {
                                        <span>No</span>
                                    }
                                </p>
                            </div>*@
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-12 col-sm-12 col-xs-12 alert alert-info"><strong>Construction Details</strong></p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">What are the external walls made of?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "9"))
                                        {
                                            <span>Asbestos cement sheet or plank</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "2"))
                                        {
                                            <span>Brick Veneer</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "10"))
                                        {
                                            <span>Cladding</span>
                                            if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60031) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60031).Value == null))
                                            {
                                                @Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60031).Value
                                            }
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "5"))
                                        {
                                            <span>Concrete</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "13"))
                                        {
                                            <span>Concrete Block</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "3"))
                                        {
                                            <span>Double Brick</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "4"))
                                        {
                                            <span>Metel</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "8"))
                                        {
                                            <span>Mud Brick</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "12"))
                                        {
                                            <span>Fibre cement sheet or plank</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "11"))
                                        {
                                            <span>Other</span>
                                            if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60031) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60031).Value != null))
                                            {
                                                @Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60031).Value
                                            }
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "6"))
                                        {
                                            <span>Rock/Stone</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "7"))
                                        {
                                            <span>Rockcote</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60029) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60029).Value == "1"))
                                        {
                                            <span>Timber</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-8 col-sm-8 col-xs-8">What is the roof made of?</p>
                                <p class="col-md-4 col-sm-4 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60033) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60033).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60033) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60033).Value == "3"))
                                        {
                                            <span>Cement tiles</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60033) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60033).Value == "1"))
                                        {
                                            <span>Colourbond/zincalume</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60033) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60033).Value == "5"))
                                        {
                                            <span>Corrugated Iron</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60033) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60033).Value == "6"))
                                        {
                                            <span>Fibro / asbestos cement – this will require approval before completion of the quote.</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60033) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60033).Value == "4"))
                                        {
                                            <span>Metel Tiles</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60033) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60033).Value == "7"))
                                        {
                                            <span>Other</span>
                                            if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60035) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60035).Value == null))
                                            {
                                                @Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60035).Value
                                            }
                                        }
                                        else if (Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60033) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60033).Value == "2"))
                                        {
                                            <span>Terracotta tiles</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Is the roof structurally sound and well maintained with no unrepaired rust damage or unsecured sheets? </p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60034) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60034).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60037).Value == "1")
                                        {
                                            <span>Yes</span>
                                        }
                                        else
                                        {
                                            <span>No</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">  In what year was the home built? </p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60037) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60037).Value != null))
                                    {
                                        <span>@Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60037).Value</span>
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">In what year was the building last rewired?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60039) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60039).Value != null))
                                    {
                                        <span>@Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60039).Value</span>
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">In what year was the building last replumbed?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60041) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60041).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60041).Value !="-1")
                                        {
                                            <span>@Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60041).Value</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Is the Home Building watertight, well maintained, structurally sound and secure?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60039) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60039).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60043).Value == "1")
                                        {
                                            <span>Yes</span>
                                        }
                                        else
                                        {
                                            <span>No</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Is the Home Building protected under heritage legislation other than a local council listing?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60045) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60045).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60045).Value == "1")
                                        {
                                            <span>Yes</span>
                                        }
                                        else
                                        {
                                            <span>No</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Is the Home Building under construction or undergoing renovation, alteration or extension?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60055) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60055).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60055).Value == "1")
                                        {
                                            <span>Yes</span>
                                        }
                                        else
                                        {
                                            <span>No</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Does your Home Building comply with the local council regulations regarding its fitness for occupancy as a domestic dwelling and as a Business?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60057) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60057).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60057).Value == "1")
                                        {
                                            <span>Yes</span>
                                        }
                                        else
                                        {
                                            <span>No</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-12 col-sm-12 col-xs-12 alert alert-info"><strong>Occupancy Details</strong></p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Who normally lives there?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60071) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60071).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60071).Value == "2")
                                        {
                                            <span>Tenants</span>
                                        }
                                        else
                                        {
                                            <span>You</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Is the Building?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60073) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60073).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60073).Value == "1")
                                        {
                                            <span>Occupied</span>
                                        }
                                        else if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60073).Value == "2")
                                        {
                                            <span>Unoccupied</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">In the next 12 months, will the home be unoccupied for 90 consecutive days or more? </p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60075) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60075).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60075).Value == "1")
                                        {
                                            <span>Yes</span>
                                        }
                                        else
                                        {
                                            <span>No</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Is the building used for business?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60077) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60077).Value != null))
                                    {
                                        if (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60077).Value == "1")
                                        {
                                            <span>Yes</span>
                                        }
                                        else
                                        {
                                            <span>No</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Describe the business</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData.Exists(p => p.Element.ElId == 60079) && (Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60079).Value != null))
                                    {
                                        <span>@Model.ProfileData.ValueData.Find(p => p.Element.ElId == 60079).Value</span>
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-12 col-sm-12 col-xs-12 alert alert-info"><strong>Interested Parties</strong></p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    <p class="col-md-12 col-sm-12 col-xs-12 text-left xs-text-center"><strong>Name of Institution</strong></p>
                                    <p class="col-md-12 col-sm-12 col-xs-12 text-left xs-text-center">
                                        @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData != null && (Model.ProfileData.ValueData.Count > 0))
                                        {
                                            for (int j = 0; j < Model.ProfileData.ValueData.Count; j++)
                                            {
                                                if (Model.ProfileData.ValueData[j].Element.ElId == 60131 && Model.ProfileData.ValueData[j].Value != "")
                                                {
                                                    <span>@Model.ProfileData.ValueData[j].Value</span>
                                                }
                                            }
                                        }
                                    </p>
                                </div>
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    <p class="col-md-12 col-sm-12 col-xs-12 text-right xs-text-center"><strong>Location of Institution</strong></p>
                                    <p class="col-md-12 col-sm-12 col-xs-12 text-right xs-text-center">
                                        @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.ProfileData.ValueData != null && (Model.ProfileData.ValueData.Count > 0))
                                        {
                                            for (int i = 0; i < Model.ProfileData.ValueData.Count; i++)
                                            {                                                 
                                                if (Model.ProfileData.ValueData[i].Element.ElId == 60133 && Model.ProfileData.ValueData[i].Value != "")
                                                {
                                                    <span>@Model.ProfileData.ValueData[i].Value</span>
                                                }
                                            }
                                        }
                                    </p>
                                </div>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-12 col-sm-12 col-xs-12 alert alert-info"><strong>Home Building</strong></p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-8 col-sm-8 col-xs-12">Location</p>
                                <p class="col-md-4 col-sm-4 col-xs-12 text-right xs-text-left">
                                    @if (Model.SectionData != null && Model.SectionData.AddressData != null)
                                    {
                                        <span>@Model.SectionData.AddressData.AddressLine1,&nbsp;@Model.SectionData.AddressData.Suburb,&nbsp;@Model.SectionData.AddressData.State,&nbsp;@Model.SectionData.AddressData.Postcode</span>
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-12">How much would it cost to replace your Home Building?</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.SectionData.ValueData.Exists(p => p.Element.ElId == 60187) && (Model.SectionData.ValueData.Find(p => p.Element.ElId == 60187).Value != ""))
                                    {
                                        <span>$@String.Format("{0:n}", Double.Parse(Model.SectionData.ValueData.Find(p => p.Element.ElId == 60187).Value))</span>
                                    }
                                </p>
                            </div>
                            @*<div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Cover for Home Building</p>
                                <p class="col-md-2 col-sm-2 col-xs-2 text-right">
                                    @if (Model.SectionData.ValueData.Exists(p => p.Element.ElId == 60187) && (Model.SectionData.ValueData.Find(p => p.Element.ElId == 60187).Value != ""))
                                    {
                                        <span>$@Model.SectionData.ValueData.Find(p => p.Element.ElId == 60187).Value</span>
                                    }
                                </p>
                            </div>*@
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Claim free period</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.SectionData.ValueData.Exists(p => p.Element.ElId == 60195) && (Model.SectionData.ValueData.Find(p => p.Element.ElId == 60195).Value != null))
                                    {
                                        if (Model.SectionData.ValueData.Find(p => p.Element.ElId == 60195).Value == "1")
                                        {
                                            <span>1 year</span>
                                        }
                                        else if (Model.SectionData.ValueData.Find(p => p.Element.ElId == 60195).Value == "2")
                                        {
                                            <span>2 or more years</span>
                                        }
                                        else
                                        {
                                            <span>0 years</span>
                                        }
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Excess</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.SectionData.ValueData.Exists(p => p.Element.ElId == 60197) && (Model.SectionData.ValueData.Find(p => p.Element.ElId == 60197).Value != null))
                                    {
                                        <span>$@String.Format("{0:n}", Double.Parse(Model.SectionData.ValueData.Find(p => p.Element.ElId == 60197).Value))</span>
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">No claim discount</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.SectionData.ValueData.Exists(p => p.Element.ElId == 60203) && (Model.SectionData.ValueData.Find(p => p.Element.ElId == 60203).Value != null))
                                    {
                                        <span>@Model.SectionData.ValueData.Find(p => p.Element.ElId == 60203).Value%</span>
                                    }
                                </p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Age discount</p>
                                <p class="col-md-2 col-sm-2 col-xs-12 text-right xs-text-left">
                                    @if (Model.ProfileData != null && Model.ProfileData.ValueData != null && Model.SectionData.ValueData.Exists(p => p.Element.ElId == 60215) && (Model.SectionData.ValueData.Find(p => p.Element.ElId == 60215).Value != null))
                                    {
                                        <span>@Model.SectionData.ValueData.Find(p => p.Element.ElId == 60215).Value%</span>
                                    }
                                </p>
                            </div>
                            @*<div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-10 col-sm-10 col-xs-10">Premium</p>
                                <p class="col-md-2 col-sm-2 col-xs-2 text-right">
                                    @if (Model.SectionData.ValueData.Exists(p => p.Element.ElId == 60215) && (Model.SectionData.ValueData.Find(p => p.Element.ElId == 60215).Value != null))
                                    {
                                        <span>@Model.SectionData.ValueData.Find(p => p.Element.ElId == 60215).Value</span>
                                    }
                                </p>
                            </div>*@
                            <div class="row mb-md-30 mt-10 mb-10">
                                <button type="submit" class="btn-primary btn pull-right" style="margin-top:5% !important;">NEXT</button>
                            </div>
                        </div>
                    }
                }
                else
                {
                    using (Html.BeginForm("ActionName", "PolicyDetails", FormMethod.Get, new { cid = @Model.CustomerId, PcId = @Model.PolicyData.PcId }))
                    {
                        <div class="well">
                            @Html.HiddenFor(p => p.CustomerId, new { @id = "ciid" })

                            @Html.HiddenFor(p => p.PcId, new { id = "pcidd" })
                            <h3>HOME BUILDING DETAILS</h3>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <p class="col-md-12 col-sm-12 col-xs-12 alert alert-info"><strong>No details</strong></p>
                            </div>
                            <div class="row mb-md-30 mt-10 mb-10">
                                <button type="submit" class="btn-primary btn pull-right" style="margin-top:5% !important;">NEXT</button>
                            </div>
                        </div>
                    }
                }
            </div>
            @if (Model.PolicyData.PolicyStatus == "NP" || Model.PolicyData.PolicyStatus == "RP" || Model.PolicyData.PolicyStatus == "AP")
            {
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 policy-side-wrap">
                    <button type="button" href="#endorsepolicys" role="button" data-target="#endorsepolicys" class="btn-primary width-480-100 btn col-md-12" data-toggle="modal">Endorse Policy</button>
                </div>
            }
            else
            {
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 policy-side-wrap">
                    <div class="well">
                        <h3>Policy Sections</h3>
                        @if (Model.PolicyData.PolicyStatus == "CQ" || Model.PolicyData.PolicyStatus == "CP")
                        {
                            if (Model.PolicyInclusion != null && Model.PolicyInclusion.Count() > 0)
                            {
                                for (int i = 0; i < Model.PolicyInclusion.Count(); i++)
                                {
                                    <div class="policy-loc-row">
                                        @Html.RadioButtonFor(m => m.SelectedInclusion, @Model.PolicyInclusion[i].Name, new { @class = "inclusions", @data_name = @Model.PolicyInclusion[i].Name, @data_nid = @i })<label for="radio1"><span><span></span></span><a class="viewsectn" data-policystatus="@Model.PolicyData.PolicyStatus" data-name="@Model.PolicyInclusion[i].Name" data-cid="@Model.CustomerId" data-trid="@Model.PolicyData.TrId" data-pcid="@Model.PcId" data-unid="@Model.PolicyInclusion[i].UnId" data-profileid="@Model.PolicyInclusion[i].ProfileUnId" data-unitid="@Model.PolicyInclusion[i].UnitId" href="javascript:void(0);">@Model.PolicyInclusion[i].Name</a></label>
                                    </div>
                                }
                            }
                        }
                        else
                        {
                            if (Model.PolicyInclusion != null && Model.PolicyInclusion.Count() > 0)
                            {
                                for (int i = 0; i < Model.PolicyInclusion.Count(); i++)
                                {
                                    <div class="policy-loc-row"  id="rightPannel-@i">
                                        @Html.RadioButtonFor(m => m.SelectedInclusion, @Model.PolicyInclusion[i].Name, new { @class = "inclusions", @data_name = @Model.PolicyInclusion[i].Name, @data_nid = @i })<label for="radio1"><span><span></span></span><a class="viewsectn" data-policystatus="@Model.PolicyData.PolicyStatus" data-name="@Model.PolicyInclusion[i].Name" data-cid="@Model.CustomerId" data-trid="@Model.PolicyData.TrId" data-pcid="@Model.PcId" data-unid="@Model.PolicyInclusion[i].UnId" data-profileid="@Model.PolicyInclusion[i].ProfileUnId" data-unitid="@Model.PolicyInclusion[i].UnitId" href="javascript:void(0);">@Model.PolicyInclusion[i].Name</a></label>
                                        <script type="text/javascript">
                                            $(document).ready(function () {
                                                $('.inclusions').click(function () {
                                                    var name = $(this).attr('data-name');
                                                    var nid = $(this).attr('data-nid');
                                                    $('.policy-ed-del-wrapper').hide();
                                                    $("#policy-ed-del-wrap-" + nid).show();
                                                });
                                            });
                                        </script>
                                        <div id="policy-ed-del-wrap-@i" class="policy-ed-del-wrapper" data style="display: none;">
                                            <a id="RPEdit-@i" class="btn color-bk-btn policy-edit-wrap" data-policystatus="@Model.PolicyData.PolicyStatus" data-name="@Model.PolicyInclusion[i].Name" data-cid="@Model.CustomerId" data-trid="@Model.PolicyData.TrId" data-pcid="@Model.PcId" data-unid="@Model.PolicyInclusion[i].UnId" data-profileid="@Model.PolicyInclusion[i].ProfileUnId" href="javascript:void(0);">Edit</a>&nbsp;
                                            <a id="RPDelete-@i" class="btn color-bk-btn policy-delet-wrap" data-policystatus="@Model.PolicyStatus" data-name="@Model.PolicyInclusion[i].Name" data-cid="@Model.CustomerId" data-trid="@Model.PolicyData.TrId" data-pcid="@Model.PcId" data-unid="@Model.PolicyInclusion[i].UnId" data-profileid="@Model.PolicyInclusion[i].ProfileUnId" data-unitid="@Model.PolicyInclusion[i].UnitId" href="javascript:void(0);">Delete</a>
                                        </div>
                                    </div>
                                }
                            }
                        }
                        <div class="clearfix"></div>
                        <div class="dropdown pc pc-in">
                            <a class="new-cover-policy" href="javascript:void(0);">New Section</a>
                            <ul class="dropdown-menu col-md-12 unit">
                                <li><a href="javascript:void(0);" class="Home Buildings">+  Home Buildings</a></li>
                                <li><a href="javascript:void(0);" class="Home Contents">+  Home Contents</a></li>
                                <li><a href="javascript:void(0);" class="Farm Property">+  Farm Property</a></li>
                                <li><a href="javascript:void(0);" class="Valuables">+  Valuables</a></li>
                                <li><a href="javascript:void(0);" class="Motor">+  Motor</a></li>
                                <li><a href="javascript:void(0);" class="Pet">+  Pet</a></li>
                                <li><a href="javascript:void(0);" class="Travel">+  Travel</a></li>
                                <li><a href="javascript:void(0);" class="Boat">+  Boat</a></li>
                            </ul>
                            <script type="text/javascript">
                                $(document).on('click', 'ul.unit > li', function () {
                                    var unitname = $(this).children("a").attr("class");
                                    var cid = $("#ciid").val();
                                    var pcid = $("#pcidd").val();
                                    var prid = 1029;
                                    $.ajax({
                                        type: "POST",
                                        url: "/Customer/AddUnit",
                                        data: { "unit": unitname, cid: cid, PcId: pcid, Prid: prid },
                                        success: function (responce) {
                                            if (responce.Status == false) {
                                                $(".error").css("color", "red").html("Failed to add section, there is a problem in core system.").show().delay(100000).fadeOut();
                                                $("html, body").animate({ scrollTop: 0 }, "slow");
                                            } else {
                                                window.location.href = responce;
                                            }
                                        }
                                    });
                                });
                            </script>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<script src="~/js/jquery.inputmask.bundle.js"></script>
<script src="~/js/inputmask.date.extensions.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".datePicker").inputmask("99/99/9999", { "placeholder": "dd/mm/yyyy" });
    });
    $(".viewsectn").click(function () {
        var selectedname = $(this).data('name');
        var selectedunid = $(this).data('unid');
        var selectedprofileid = $(this).data('profileid');
        var selectedcid = $(this).data('cid');
        var selectedTrId = $(this).data('trid');
        var unitid = $(this).data('unitid');
        var PcId = $(this).data('pcid');
        var policyStatus = $(this).data('policystatus');
        // var prId = $(this).data('prId');
        var prId = 1029;
        $.ajax({
            type: "POST",
            url: "/Customer/ViewSection",
            data: {
                "name": selectedname, "PcId": PcId, "cid": selectedcid, "trId": selectedTrId, "unid": selectedunid, "Profileid": selectedprofileid, "policyStatus": policyStatus, "prId": prId, "unitid": unitid
            },
            success: function (responce) {
                if (responce.Status == false) {
                    $(".error").css("color", "red").html("Failed to view section, there is a problem in core system.").show().delay(100000).fadeOut();
                    $("html, body").animate({ scrollTop: 0 }, "slow");
                } else {
                    window.location.href = responce;
                }
            }
        });
    });
    $(".policy-edit-wrap").click(function () {
        var selectedname = $(this).data('name');
        var selectedunid = $(this).data('unid');
        var selectedprofileid = $(this).data('profileid');
        var selectedcid = $(this).data('cid');
        var selectedTrId = $(this).data('trid');
        var PcId = $(this).data('pcid');
        var policyStatus = $(this).data('policystatus');
        // var prId = $(this).data('prId');
        var prId = 1029;
        $.ajax({
            type: "POST",
            url: "/Customer/EndorsePolicy",
            data: {
                "name": selectedname, "PcId": PcId, "cid": selectedcid, "trId": selectedTrId, "unid": selectedunid, "Profileid": selectedprofileid, "prId": prId, "policyStatus": policyStatus, "calltype": null, "effcdate": null
            },
            success: function (responce) {
                if (responce.Status == false) {
                    $(".error").css("color", "red").html("Failed to edit section, there is a problem in core system.").show().delay(100000).fadeOut();
                    $("html, body").animate({ scrollTop: 0 }, "slow");
                } else {
                    window.location.href = responce;
                }
            }
        });
    });
    $(".policy-delet-wrap").click(function () {
        var r = confirm("Are you sure you want to delete this section?");
        if (r == true) {
            var PcId = $("#pcidd").val();
            var selectedunid = $(this).data('unid');
            var selectedcid = $(this).data('cid');
            var PcId = $(this).data('pcid');
            var selectedname = $(this).data('name');
            var selectedprofileid = $(this).data('profileid');
            var selectedTrId = $(this).data('trid');
            var policyStatus = $(this).data('policystatus');
            var selectedunitid = $(this).data('unitid');
            var currId = $(this).attr("id");
            $.ajax({
                type: "POST",
                url: "/Customer/DeleteUnit",
                data: {
                    "unid": selectedunid, "cid": selectedcid, "pcid": PcId, "unit": selectedname, "profileid": selectedprofileid, "trid": selectedTrId, "policystatus": policyStatus, "unitid": selectedunitid
                },
                success: function (responce) {
                    if (responce.Status == true) {
                        var prentId = $('#' + currId).parent().parent().attr("id");
                        $('#' + prentId).remove();                       
                        $(".deletedsuccess").html('Section Deleted Succussfully.').addClass("alert alert-success").delay().fadeOut(10000);
                    }
                }
            });
        }
    });
    $("#bindcover").click(function () {
        $.ajax({
            type: "POST",
            url: "/Customer/BindCover",
            data: {},
            success: function (responce) {
            }
        });
    });
    $("#cancelpo").click(function () {
        var PcId = $("#pcidd").val();
        var selectedcid = $("#ciid").val();
        var selectedTrId = $("#tridd").val();
        var reson = $(".cancelpol").val();
        var date = $("#pCanDate").val();
        var PSDate = $("#pStartDate").text();
        var PEDate = $("#pEndDate").text();
        var valid = 1;
        var TextMsg = '';
        var regex = /^(0?[1-9]|[12][0-9]|3[01])[\/](0?[1-9]|1[012])[\/]\d{4}$/;
        var diffDateCalculatePets = true;
        var diffDateCalculatePets1 = true;
        if (PSDate != '' && regex.test(PSDate) && PEDate != '' && regex.test(PEDate) && date != '' && regex.test(date)) {
            var PSDaterVal = PSDate.split('/');
            var PSDaterValN = PSDaterVal[1] + '/' + PSDaterVal[0] + '/' + PSDaterVal[2];
            var PEDaterVal = PEDate.split('/');
            var PEDaterValN = PEDaterVal[1] + '/' + PEDaterVal[0] + '/' + PEDaterVal[2];
            var daterVal = date.split('/');
            var daterValN = daterVal[1] + '/' + daterVal[0] + '/' + daterVal[2];
            diffDateCalculatePets = diffDateCalculateE(daterValN, PSDaterValN);
            diffDateCalculatePets1 = diffDateCalculateE(PEDaterValN, daterValN);
            if (diffDateCalculatePets == false || diffDateCalculatePets1 == false) {
                valid = 0;
                TextMsg = 'Cancellation date should not be less then start date and geter then end date';
            }
        } else {
            valid = 0;
            TextMsg = 'Date format not valid';
        }
        if (valid == 0) {
            $("label[for='pCanDate']").text(TextMsg).css({ "display": "block" });
        } else {
            $("label[for='pCanDate']").text("").css({ "display": "none" });
            $.ajax({
                type: "POST",
                url: "/Customer/CancelPolicy",
                data: {
                    "PcId": PcId, "cid": selectedcid, "trId": selectedTrId, "Reson": reson, "cdate": date
                },
                success: function (responce) {
                }
            });
        }
    });
    $(".vwdoc").mouseover(function () {
        $(".dropdown ul").html('');
        $.ajax({
            type: "POST",
            url: "/Customer/ViewDocument",
            data: {
            }, success: function (data) {
                if (!$.isEmptyObject(data.dt) && data.dt.length > 0) {
                    var valuedata = data.dt;
                    if (valuedata != '' && valuedata != null) {
                        $.each(valuedata, function (index, value) {
                            $(".dropdown ul").append('<li><span class="printer" data-printid=' + value.PrintId + '>' + value.Name + '</span></li>');
                            ////$(".repalcedoc").html(replaceText);
                        });
                    }
                }
            }
        });
    });
    $(document).on('click','.printer',function () {
        var printid = $(this).attr('data-printid');      
        //var printid = data.printid;
        if (printid != '') {
            $.ajax({
                type: "GET",
                url: "/Customer/PrintDocument",
                data: {
                    "PrintId": printid
                }, success: function (data) {
                    if (data != '' && data.status == true) {
                        var win = window.open(data.result, '_blank');
                    }
                    else if (data != '' && data.status == false)
                    {
                        $(".error").html("This document is not available.").delay(10000).fadeOut();
                    }
                    //win.focus();
                    //window.open("data:text/html," + encodeURIComponent(data.result),
                    //    "_blank", "width=200,height=100");                  
                }
            });
        }
    });
    $("#endorsecover").click(function () {
        var selectedname = $(this).data('name');
        var selectedunid = $(this).data('unid');
        var selectedprofileid = $(this).data('profileid');
        var selectedTrId = $(this).data('trid');
        var selectedcid = $("#ciid").val();
        var PcId = $("#pcidd").val();
        var policyStatus = $(".policystus").val();
        var effcdate = $("#effectivedate").val();
        var prId = 1029;
        $.ajax({
            type: "POST",
            url: "/Customer/EndorsePolicy",
            data: {
                "name": selectedname, "PcId": PcId, "cid": selectedcid, "trId": selectedTrId, "unid": selectedunid, "Profileid": selectedprofileid, "prId": prId, "policyStatus": policyStatus, "calltype": null, "effcdate": effcdate
            },
            success: function (responce) {
                if (responce.Status == false) {
                    $(".error").css("color", "red").html("Failed to edit section, there is a problem in core system.").show().delay(100000).fadeOut();
                    $("html, body").animate({ scrollTop: 0 }, "slow");
                } else {
                    window.location.href = responce;
                }
            }
        });
    });
</script>
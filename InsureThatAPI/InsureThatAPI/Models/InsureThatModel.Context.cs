//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InsureThatAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MasterDataEntities : DbContext
    {
        public MasterDataEntities()
            : base("name=MasterDataEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int UpdateCustomerDetails(Nullable<int> customerId, string customerName)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("customerId", customerId) :
                new ObjectParameter("customerId", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCustomerDetails", customerIdParameter, customerNameParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_InsuredDisclosureDetails_Result> IT_CC_GET_InsuredDisclosureDetails(Nullable<int> insuredDisclosureID)
        {
            var insuredDisclosureIDParameter = insuredDisclosureID.HasValue ?
                new ObjectParameter("InsuredDisclosureID", insuredDisclosureID) :
                new ObjectParameter("InsuredDisclosureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_InsuredDisclosureDetails_Result>("IT_CC_GET_InsuredDisclosureDetails", insuredDisclosureIDParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_UserDetails_Result> IT_CC_GET_UserDetails(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_UserDetails_Result>("IT_CC_GET_UserDetails", userIDParameter);
        }
    
        public virtual int IT_CC_Insert_HomeBuildingAmountDetails(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, Nullable<decimal> homeBuildingSumInsured, Nullable<int> homeBuildingNoClaimPeriod, Nullable<decimal> homeBuildingExcess, Nullable<int> homeBuildingNoClaimDiscount, Nullable<int> homeBuildingAgeDiscount, Nullable<int> premiumID)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var homeBuildingSumInsuredParameter = homeBuildingSumInsured.HasValue ?
                new ObjectParameter("HomeBuildingSumInsured", homeBuildingSumInsured) :
                new ObjectParameter("HomeBuildingSumInsured", typeof(decimal));
    
            var homeBuildingNoClaimPeriodParameter = homeBuildingNoClaimPeriod.HasValue ?
                new ObjectParameter("HomeBuildingNoClaimPeriod", homeBuildingNoClaimPeriod) :
                new ObjectParameter("HomeBuildingNoClaimPeriod", typeof(int));
    
            var homeBuildingExcessParameter = homeBuildingExcess.HasValue ?
                new ObjectParameter("HomeBuildingExcess", homeBuildingExcess) :
                new ObjectParameter("HomeBuildingExcess", typeof(decimal));
    
            var homeBuildingNoClaimDiscountParameter = homeBuildingNoClaimDiscount.HasValue ?
                new ObjectParameter("HomeBuildingNoClaimDiscount", homeBuildingNoClaimDiscount) :
                new ObjectParameter("HomeBuildingNoClaimDiscount", typeof(int));
    
            var homeBuildingAgeDiscountParameter = homeBuildingAgeDiscount.HasValue ?
                new ObjectParameter("HomeBuildingAgeDiscount", homeBuildingAgeDiscount) :
                new ObjectParameter("HomeBuildingAgeDiscount", typeof(int));
    
            var premiumIDParameter = premiumID.HasValue ?
                new ObjectParameter("PremiumID", premiumID) :
                new ObjectParameter("PremiumID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Insert_HomeBuildingAmountDetails", pcIdParameter, trIdParameter, homeIDParameter, homeBuildingSumInsuredParameter, homeBuildingNoClaimPeriodParameter, homeBuildingExcessParameter, homeBuildingNoClaimDiscountParameter, homeBuildingAgeDiscountParameter, premiumIDParameter);
        }
    
        public virtual int IT_CC_Insert_HomeContentsDetails(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, Nullable<decimal> homeContentsUnspecifiedSumInsured, Nullable<int> homeContentsNoClaimPeriod, Nullable<decimal> homeContentsExcess, Nullable<int> homeContentsNoClaimDiscount, Nullable<int> homeContentsAgeDiscount, Nullable<int> premiumID, Nullable<int> homeContentsDetailID)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var homeContentsUnspecifiedSumInsuredParameter = homeContentsUnspecifiedSumInsured.HasValue ?
                new ObjectParameter("HomeContentsUnspecifiedSumInsured", homeContentsUnspecifiedSumInsured) :
                new ObjectParameter("HomeContentsUnspecifiedSumInsured", typeof(decimal));
    
            var homeContentsNoClaimPeriodParameter = homeContentsNoClaimPeriod.HasValue ?
                new ObjectParameter("HomeContentsNoClaimPeriod", homeContentsNoClaimPeriod) :
                new ObjectParameter("HomeContentsNoClaimPeriod", typeof(int));
    
            var homeContentsExcessParameter = homeContentsExcess.HasValue ?
                new ObjectParameter("HomeContentsExcess", homeContentsExcess) :
                new ObjectParameter("HomeContentsExcess", typeof(decimal));
    
            var homeContentsNoClaimDiscountParameter = homeContentsNoClaimDiscount.HasValue ?
                new ObjectParameter("HomeContentsNoClaimDiscount", homeContentsNoClaimDiscount) :
                new ObjectParameter("HomeContentsNoClaimDiscount", typeof(int));
    
            var homeContentsAgeDiscountParameter = homeContentsAgeDiscount.HasValue ?
                new ObjectParameter("HomeContentsAgeDiscount", homeContentsAgeDiscount) :
                new ObjectParameter("HomeContentsAgeDiscount", typeof(int));
    
            var premiumIDParameter = premiumID.HasValue ?
                new ObjectParameter("PremiumID", premiumID) :
                new ObjectParameter("PremiumID", typeof(int));
    
            var homeContentsDetailIDParameter = homeContentsDetailID.HasValue ?
                new ObjectParameter("HomeContentsDetailID", homeContentsDetailID) :
                new ObjectParameter("HomeContentsDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Insert_HomeContentsDetails", pcIdParameter, trIdParameter, homeIDParameter, homeContentsUnspecifiedSumInsuredParameter, homeContentsNoClaimPeriodParameter, homeContentsExcessParameter, homeContentsNoClaimDiscountParameter, homeContentsAgeDiscountParameter, premiumIDParameter, homeContentsDetailIDParameter);
        }
    
        public virtual int IT_CC_Insert_HomeContentsItems(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, string homeContentsItemDescription, Nullable<decimal> homeContentsItemSumInsured)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var homeContentsItemDescriptionParameter = homeContentsItemDescription != null ?
                new ObjectParameter("HomeContentsItemDescription", homeContentsItemDescription) :
                new ObjectParameter("HomeContentsItemDescription", typeof(string));
    
            var homeContentsItemSumInsuredParameter = homeContentsItemSumInsured.HasValue ?
                new ObjectParameter("HomeContentsItemSumInsured", homeContentsItemSumInsured) :
                new ObjectParameter("HomeContentsItemSumInsured", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Insert_HomeContentsItems", pcIdParameter, trIdParameter, homeIDParameter, homeContentsItemDescriptionParameter, homeContentsItemSumInsuredParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_CC_Insert_InsuredDetails(Nullable<int> insuredID, string policyIds, Nullable<int> clientType, string title, string firstName, string lastName, string middleName, string companyBusinessName, string tradingName, string aBN, Nullable<int> addressID, Nullable<int> postalAddressID, string phoneNo, string mobileNo, Nullable<System.DateTime> dOB, string emailID)
        {
            var insuredIDParameter = insuredID.HasValue ?
                new ObjectParameter("InsuredID", insuredID) :
                new ObjectParameter("InsuredID", typeof(int));
    
            var policyIdsParameter = policyIds != null ?
                new ObjectParameter("PolicyIds", policyIds) :
                new ObjectParameter("PolicyIds", typeof(string));
    
            var clientTypeParameter = clientType.HasValue ?
                new ObjectParameter("ClientType", clientType) :
                new ObjectParameter("ClientType", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var companyBusinessNameParameter = companyBusinessName != null ?
                new ObjectParameter("CompanyBusinessName", companyBusinessName) :
                new ObjectParameter("CompanyBusinessName", typeof(string));
    
            var tradingNameParameter = tradingName != null ?
                new ObjectParameter("TradingName", tradingName) :
                new ObjectParameter("TradingName", typeof(string));
    
            var aBNParameter = aBN != null ?
                new ObjectParameter("ABN", aBN) :
                new ObjectParameter("ABN", typeof(string));
    
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var postalAddressIDParameter = postalAddressID.HasValue ?
                new ObjectParameter("PostalAddressID", postalAddressID) :
                new ObjectParameter("PostalAddressID", typeof(int));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_CC_Insert_InsuredDetails", insuredIDParameter, policyIdsParameter, clientTypeParameter, titleParameter, firstNameParameter, lastNameParameter, middleNameParameter, companyBusinessNameParameter, tradingNameParameter, aBNParameter, addressIDParameter, postalAddressIDParameter, phoneNoParameter, mobileNoParameter, dOBParameter, emailIDParameter);
        }
    
        public virtual int IT_CC_Insert_InsuredDisclosureDetails(Nullable<int> pcId, Nullable<int> trId, Nullable<int> previousInsurer, string rDBValue1, string rDBValue2, string rDBValue3, string rDBValue4, string rDBValue5, string rDBValue6, string rDBValue7, Nullable<System.DateTime> dischargeDate, string description)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var previousInsurerParameter = previousInsurer.HasValue ?
                new ObjectParameter("PreviousInsurer", previousInsurer) :
                new ObjectParameter("PreviousInsurer", typeof(int));
    
            var rDBValue1Parameter = rDBValue1 != null ?
                new ObjectParameter("RDBValue1", rDBValue1) :
                new ObjectParameter("RDBValue1", typeof(string));
    
            var rDBValue2Parameter = rDBValue2 != null ?
                new ObjectParameter("RDBValue2", rDBValue2) :
                new ObjectParameter("RDBValue2", typeof(string));
    
            var rDBValue3Parameter = rDBValue3 != null ?
                new ObjectParameter("RDBValue3", rDBValue3) :
                new ObjectParameter("RDBValue3", typeof(string));
    
            var rDBValue4Parameter = rDBValue4 != null ?
                new ObjectParameter("RDBValue4", rDBValue4) :
                new ObjectParameter("RDBValue4", typeof(string));
    
            var rDBValue5Parameter = rDBValue5 != null ?
                new ObjectParameter("RDBValue5", rDBValue5) :
                new ObjectParameter("RDBValue5", typeof(string));
    
            var rDBValue6Parameter = rDBValue6 != null ?
                new ObjectParameter("RDBValue6", rDBValue6) :
                new ObjectParameter("RDBValue6", typeof(string));
    
            var rDBValue7Parameter = rDBValue7 != null ?
                new ObjectParameter("RDBValue7", rDBValue7) :
                new ObjectParameter("RDBValue7", typeof(string));
    
            var dischargeDateParameter = dischargeDate.HasValue ?
                new ObjectParameter("DischargeDate", dischargeDate) :
                new ObjectParameter("DischargeDate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Insert_InsuredDisclosureDetails", pcIdParameter, trIdParameter, previousInsurerParameter, rDBValue1Parameter, rDBValue2Parameter, rDBValue3Parameter, rDBValue4Parameter, rDBValue5Parameter, rDBValue6Parameter, rDBValue7Parameter, dischargeDateParameter, descriptionParameter);
        }
    
        public virtual int IT_CC_Insert_PolicyLogDetails(Nullable<int> policyNumber, Nullable<int> policyLogID, string details, Nullable<int> userID, Nullable<System.DateTime> timestamp)
        {
            var policyNumberParameter = policyNumber.HasValue ?
                new ObjectParameter("PolicyNumber", policyNumber) :
                new ObjectParameter("PolicyNumber", typeof(int));
    
            var policyLogIDParameter = policyLogID.HasValue ?
                new ObjectParameter("PolicyLogID", policyLogID) :
                new ObjectParameter("PolicyLogID", typeof(int));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var timestampParameter = timestamp.HasValue ?
                new ObjectParameter("Timestamp", timestamp) :
                new ObjectParameter("Timestamp", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Insert_PolicyLogDetails", policyNumberParameter, policyLogIDParameter, detailsParameter, userIDParameter, timestampParameter);
        }
    
        public virtual int IT_CC_Insert_ValuablesDetails(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, Nullable<decimal> valuablesUnspecifiedSumInsured, Nullable<decimal> valuablesExcess, Nullable<int> premiumID)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var valuablesUnspecifiedSumInsuredParameter = valuablesUnspecifiedSumInsured.HasValue ?
                new ObjectParameter("ValuablesUnspecifiedSumInsured", valuablesUnspecifiedSumInsured) :
                new ObjectParameter("ValuablesUnspecifiedSumInsured", typeof(decimal));
    
            var valuablesExcessParameter = valuablesExcess.HasValue ?
                new ObjectParameter("ValuablesExcess", valuablesExcess) :
                new ObjectParameter("ValuablesExcess", typeof(decimal));
    
            var premiumIDParameter = premiumID.HasValue ?
                new ObjectParameter("PremiumID", premiumID) :
                new ObjectParameter("PremiumID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Insert_ValuablesDetails", pcIdParameter, trIdParameter, homeIDParameter, valuablesUnspecifiedSumInsuredParameter, valuablesExcessParameter, premiumIDParameter);
        }
    
        public virtual int IT_CC_Insert_ValuablesItems(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, Nullable<int> valuablesItemID, string valuablesDescription, Nullable<decimal> valuablesSumInsured)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var valuablesItemIDParameter = valuablesItemID.HasValue ?
                new ObjectParameter("ValuablesItemID", valuablesItemID) :
                new ObjectParameter("ValuablesItemID", typeof(int));
    
            var valuablesDescriptionParameter = valuablesDescription != null ?
                new ObjectParameter("ValuablesDescription", valuablesDescription) :
                new ObjectParameter("ValuablesDescription", typeof(string));
    
            var valuablesSumInsuredParameter = valuablesSumInsured.HasValue ?
                new ObjectParameter("ValuablesSumInsured", valuablesSumInsured) :
                new ObjectParameter("ValuablesSumInsured", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Insert_ValuablesItems", pcIdParameter, trIdParameter, homeIDParameter, valuablesItemIDParameter, valuablesDescriptionParameter, valuablesSumInsuredParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_CC_InsertAddressDetails(Nullable<int> addressID, string addressLine1, string addressLine2, string suburb, string state, string postcode)
        {
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var addressLine1Parameter = addressLine1 != null ?
                new ObjectParameter("AddressLine1", addressLine1) :
                new ObjectParameter("AddressLine1", typeof(string));
    
            var addressLine2Parameter = addressLine2 != null ?
                new ObjectParameter("AddressLine2", addressLine2) :
                new ObjectParameter("AddressLine2", typeof(string));
    
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_CC_InsertAddressDetails", addressIDParameter, addressLine1Parameter, addressLine2Parameter, suburbParameter, stateParameter, postcodeParameter);
        }
    
        public virtual int IT_CC_InsertConstructionDetails(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, Nullable<int> externalWallDetails, string wallDescription, Nullable<int> roofDetails, string roofDescription, Nullable<System.DateTime> buildYear, string rDBValue1, string rDBValue2, string rDBValue3, string rDBValue4)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var externalWallDetailsParameter = externalWallDetails.HasValue ?
                new ObjectParameter("ExternalWallDetails", externalWallDetails) :
                new ObjectParameter("ExternalWallDetails", typeof(int));
    
            var wallDescriptionParameter = wallDescription != null ?
                new ObjectParameter("WallDescription", wallDescription) :
                new ObjectParameter("WallDescription", typeof(string));
    
            var roofDetailsParameter = roofDetails.HasValue ?
                new ObjectParameter("RoofDetails", roofDetails) :
                new ObjectParameter("RoofDetails", typeof(int));
    
            var roofDescriptionParameter = roofDescription != null ?
                new ObjectParameter("RoofDescription", roofDescription) :
                new ObjectParameter("RoofDescription", typeof(string));
    
            var buildYearParameter = buildYear.HasValue ?
                new ObjectParameter("BuildYear", buildYear) :
                new ObjectParameter("BuildYear", typeof(System.DateTime));
    
            var rDBValue1Parameter = rDBValue1 != null ?
                new ObjectParameter("RDBValue1", rDBValue1) :
                new ObjectParameter("RDBValue1", typeof(string));
    
            var rDBValue2Parameter = rDBValue2 != null ?
                new ObjectParameter("RDBValue2", rDBValue2) :
                new ObjectParameter("RDBValue2", typeof(string));
    
            var rDBValue3Parameter = rDBValue3 != null ?
                new ObjectParameter("RDBValue3", rDBValue3) :
                new ObjectParameter("RDBValue3", typeof(string));
    
            var rDBValue4Parameter = rDBValue4 != null ?
                new ObjectParameter("RDBValue4", rDBValue4) :
                new ObjectParameter("RDBValue4", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_InsertConstructionDetails", pcIdParameter, trIdParameter, homeIDParameter, externalWallDetailsParameter, wallDescriptionParameter, roofDetailsParameter, roofDescriptionParameter, buildYearParameter, rDBValue1Parameter, rDBValue2Parameter, rDBValue3Parameter, rDBValue4Parameter);
        }
    
        public virtual int IT_CC_InsertHomeLocationDetails(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, Nullable<int> addressID, string buildingDescription, string propertyArea, Nullable<bool> within100MetresOfNaturalBushland)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var buildingDescriptionParameter = buildingDescription != null ?
                new ObjectParameter("BuildingDescription", buildingDescription) :
                new ObjectParameter("BuildingDescription", typeof(string));
    
            var propertyAreaParameter = propertyArea != null ?
                new ObjectParameter("PropertyArea", propertyArea) :
                new ObjectParameter("PropertyArea", typeof(string));
    
            var within100MetresOfNaturalBushlandParameter = within100MetresOfNaturalBushland.HasValue ?
                new ObjectParameter("Within100MetresOfNaturalBushland", within100MetresOfNaturalBushland) :
                new ObjectParameter("Within100MetresOfNaturalBushland", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_InsertHomeLocationDetails", pcIdParameter, trIdParameter, homeIDParameter, addressIDParameter, buildingDescriptionParameter, propertyAreaParameter, within100MetresOfNaturalBushlandParameter);
        }
    
        public virtual int IT_CC_InsertInterestedParties(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, Nullable<int> partyID, string name, Nullable<int> locationID)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var partyIDParameter = partyID.HasValue ?
                new ObjectParameter("PartyID", partyID) :
                new ObjectParameter("PartyID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_InsertInterestedParties", pcIdParameter, trIdParameter, homeIDParameter, partyIDParameter, nameParameter, locationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_CC_InsertNewPolicyDetails(Nullable<int> pcId, Nullable<int> trId, string policyNumber, string broker, Nullable<int> accountManagerID, Nullable<int> policyStatus, Nullable<int> coverPeriod, string coverPeriodUnit, Nullable<System.DateTime> inceptionDate, Nullable<System.DateTime> expiryDate, Nullable<System.DateTime> effectiveDate, Nullable<int> productID, Nullable<int> floodCover, string is_claimed, string removeStampDuty, string reason_for_cancelletion, string alterdByUserID)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var policyNumberParameter = policyNumber != null ?
                new ObjectParameter("PolicyNumber", policyNumber) :
                new ObjectParameter("PolicyNumber", typeof(string));
    
            var brokerParameter = broker != null ?
                new ObjectParameter("Broker", broker) :
                new ObjectParameter("Broker", typeof(string));
    
            var accountManagerIDParameter = accountManagerID.HasValue ?
                new ObjectParameter("AccountManagerID", accountManagerID) :
                new ObjectParameter("AccountManagerID", typeof(int));
    
            var policyStatusParameter = policyStatus.HasValue ?
                new ObjectParameter("PolicyStatus", policyStatus) :
                new ObjectParameter("PolicyStatus", typeof(int));
    
            var coverPeriodParameter = coverPeriod.HasValue ?
                new ObjectParameter("CoverPeriod", coverPeriod) :
                new ObjectParameter("CoverPeriod", typeof(int));
    
            var coverPeriodUnitParameter = coverPeriodUnit != null ?
                new ObjectParameter("CoverPeriodUnit", coverPeriodUnit) :
                new ObjectParameter("CoverPeriodUnit", typeof(string));
    
            var inceptionDateParameter = inceptionDate.HasValue ?
                new ObjectParameter("InceptionDate", inceptionDate) :
                new ObjectParameter("InceptionDate", typeof(System.DateTime));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var floodCoverParameter = floodCover.HasValue ?
                new ObjectParameter("FloodCover", floodCover) :
                new ObjectParameter("FloodCover", typeof(int));
    
            var is_claimedParameter = is_claimed != null ?
                new ObjectParameter("Is_claimed", is_claimed) :
                new ObjectParameter("Is_claimed", typeof(string));
    
            var removeStampDutyParameter = removeStampDuty != null ?
                new ObjectParameter("RemoveStampDuty", removeStampDuty) :
                new ObjectParameter("RemoveStampDuty", typeof(string));
    
            var reason_for_cancelletionParameter = reason_for_cancelletion != null ?
                new ObjectParameter("Reason_for_cancelletion", reason_for_cancelletion) :
                new ObjectParameter("Reason_for_cancelletion", typeof(string));
    
            var alterdByUserIDParameter = alterdByUserID != null ?
                new ObjectParameter("alterdByUserID", alterdByUserID) :
                new ObjectParameter("alterdByUserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_CC_InsertNewPolicyDetails", pcIdParameter, trIdParameter, policyNumberParameter, brokerParameter, accountManagerIDParameter, policyStatusParameter, coverPeriodParameter, coverPeriodUnitParameter, inceptionDateParameter, expiryDateParameter, effectiveDateParameter, productIDParameter, floodCoverParameter, is_claimedParameter, removeStampDutyParameter, reason_for_cancelletionParameter, alterdByUserIDParameter);
        }
    
        public virtual int IT_CC_InsertOccupancyDetails(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, string rDBValue1, string rDBValue2, string rDBValue3, string rDBValue4, string description, Nullable<int> occupancyDetailsID)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var rDBValue1Parameter = rDBValue1 != null ?
                new ObjectParameter("RDBValue1", rDBValue1) :
                new ObjectParameter("RDBValue1", typeof(string));
    
            var rDBValue2Parameter = rDBValue2 != null ?
                new ObjectParameter("RDBValue2", rDBValue2) :
                new ObjectParameter("RDBValue2", typeof(string));
    
            var rDBValue3Parameter = rDBValue3 != null ?
                new ObjectParameter("RDBValue3", rDBValue3) :
                new ObjectParameter("RDBValue3", typeof(string));
    
            var rDBValue4Parameter = rDBValue4 != null ?
                new ObjectParameter("RDBValue4", rDBValue4) :
                new ObjectParameter("RDBValue4", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var occupancyDetailsIDParameter = occupancyDetailsID.HasValue ?
                new ObjectParameter("OccupancyDetailsID", occupancyDetailsID) :
                new ObjectParameter("OccupancyDetailsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_InsertOccupancyDetails", pcIdParameter, trIdParameter, homeIDParameter, rDBValue1Parameter, rDBValue2Parameter, rDBValue3Parameter, rDBValue4Parameter, descriptionParameter, occupancyDetailsIDParameter);
        }
    
        public virtual int IT_CC_InsertPolicyInsured(Nullable<int> pcId, Nullable<int> trId, Nullable<int> insuredId)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var insuredIdParameter = insuredId.HasValue ?
                new ObjectParameter("InsuredId", insuredId) :
                new ObjectParameter("InsuredId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_InsertPolicyInsured", pcIdParameter, trIdParameter, insuredIdParameter);
        }
    
        public virtual int IT_CC_InsertSecurityDetailsFireSafetyDetails(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, string rDBValue1, string rDBValue2, string rDBValue3, string rDBValue4, string rDBValue5, string rDBValue6, string rDBValue7, string rDBValue8, Nullable<int> securityDetailsFireSafetyDetailsID)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var rDBValue1Parameter = rDBValue1 != null ?
                new ObjectParameter("RDBValue1", rDBValue1) :
                new ObjectParameter("RDBValue1", typeof(string));
    
            var rDBValue2Parameter = rDBValue2 != null ?
                new ObjectParameter("RDBValue2", rDBValue2) :
                new ObjectParameter("RDBValue2", typeof(string));
    
            var rDBValue3Parameter = rDBValue3 != null ?
                new ObjectParameter("RDBValue3", rDBValue3) :
                new ObjectParameter("RDBValue3", typeof(string));
    
            var rDBValue4Parameter = rDBValue4 != null ?
                new ObjectParameter("RDBValue4", rDBValue4) :
                new ObjectParameter("RDBValue4", typeof(string));
    
            var rDBValue5Parameter = rDBValue5 != null ?
                new ObjectParameter("RDBValue5", rDBValue5) :
                new ObjectParameter("RDBValue5", typeof(string));
    
            var rDBValue6Parameter = rDBValue6 != null ?
                new ObjectParameter("RDBValue6", rDBValue6) :
                new ObjectParameter("RDBValue6", typeof(string));
    
            var rDBValue7Parameter = rDBValue7 != null ?
                new ObjectParameter("RDBValue7", rDBValue7) :
                new ObjectParameter("RDBValue7", typeof(string));
    
            var rDBValue8Parameter = rDBValue8 != null ?
                new ObjectParameter("RDBValue8", rDBValue8) :
                new ObjectParameter("RDBValue8", typeof(string));
    
            var securityDetailsFireSafetyDetailsIDParameter = securityDetailsFireSafetyDetailsID.HasValue ?
                new ObjectParameter("SecurityDetailsFireSafetyDetailsID", securityDetailsFireSafetyDetailsID) :
                new ObjectParameter("SecurityDetailsFireSafetyDetailsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_InsertSecurityDetailsFireSafetyDetails", pcIdParameter, trIdParameter, homeIDParameter, rDBValue1Parameter, rDBValue2Parameter, rDBValue3Parameter, rDBValue4Parameter, rDBValue5Parameter, rDBValue6Parameter, rDBValue7Parameter, rDBValue8Parameter, securityDetailsFireSafetyDetailsIDParameter);
        }
    
        public virtual int IT_CC_Update_InsuredDetails(string lastName, string middleName, string mobileNo, string emailID, Nullable<int> insuredID)
        {
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var insuredIDParameter = insuredID.HasValue ?
                new ObjectParameter("InsuredID", insuredID) :
                new ObjectParameter("InsuredID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Update_InsuredDetails", lastNameParameter, middleNameParameter, mobileNoParameter, emailIDParameter, insuredIDParameter);
        }
    
        public virtual int IT_CC_Update_InsuredDisclosureDetails(Nullable<int> previousInsurer, Nullable<System.DateTime> dischargeDate, string description, Nullable<int> insuredDisclosureID)
        {
            var previousInsurerParameter = previousInsurer.HasValue ?
                new ObjectParameter("PreviousInsurer", previousInsurer) :
                new ObjectParameter("PreviousInsurer", typeof(int));
    
            var dischargeDateParameter = dischargeDate.HasValue ?
                new ObjectParameter("DischargeDate", dischargeDate) :
                new ObjectParameter("DischargeDate", typeof(System.DateTime));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var insuredDisclosureIDParameter = insuredDisclosureID.HasValue ?
                new ObjectParameter("InsuredDisclosureID", insuredDisclosureID) :
                new ObjectParameter("InsuredDisclosureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Update_InsuredDisclosureDetails", previousInsurerParameter, dischargeDateParameter, descriptionParameter, insuredDisclosureIDParameter);
        }
    
        public virtual int IT_CC_Update_UserDetails(string userName, string lastName, string firstName, string mobileNo, string emailID, Nullable<int> userID)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Update_UserDetails", userNameParameter, lastNameParameter, firstNameParameter, mobileNoParameter, emailIDParameter, userIDParameter);
        }
    
        public virtual int IT_IDC_Insert_FeeDetails(Nullable<int> pcId, Nullable<int> trId, Nullable<decimal> agencyFee, Nullable<decimal> brokerFee, Nullable<decimal> feeGST, Nullable<int> feeDetailID)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var agencyFeeParameter = agencyFee.HasValue ?
                new ObjectParameter("AgencyFee", agencyFee) :
                new ObjectParameter("AgencyFee", typeof(decimal));
    
            var brokerFeeParameter = brokerFee.HasValue ?
                new ObjectParameter("BrokerFee", brokerFee) :
                new ObjectParameter("BrokerFee", typeof(decimal));
    
            var feeGSTParameter = feeGST.HasValue ?
                new ObjectParameter("FeeGST", feeGST) :
                new ObjectParameter("FeeGST", typeof(decimal));
    
            var feeDetailIDParameter = feeDetailID.HasValue ?
                new ObjectParameter("FeeDetailID", feeDetailID) :
                new ObjectParameter("FeeDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_IDC_Insert_FeeDetails", pcIdParameter, trIdParameter, agencyFeeParameter, brokerFeeParameter, feeGSTParameter, feeDetailIDParameter);
        }
    
        public virtual int IT_IDC_Insert_PremiumDetails(Nullable<int> pcId, Nullable<int> trId, Nullable<int> premiumID, Nullable<decimal> basePremium, Nullable<decimal> fSL, Nullable<decimal> gST, Nullable<bool> stampDuty, Nullable<decimal> grossPremium, Nullable<decimal> adjustmentPercentage)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var premiumIDParameter = premiumID.HasValue ?
                new ObjectParameter("PremiumID", premiumID) :
                new ObjectParameter("PremiumID", typeof(int));
    
            var basePremiumParameter = basePremium.HasValue ?
                new ObjectParameter("BasePremium", basePremium) :
                new ObjectParameter("BasePremium", typeof(decimal));
    
            var fSLParameter = fSL.HasValue ?
                new ObjectParameter("FSL", fSL) :
                new ObjectParameter("FSL", typeof(decimal));
    
            var gSTParameter = gST.HasValue ?
                new ObjectParameter("GST", gST) :
                new ObjectParameter("GST", typeof(decimal));
    
            var stampDutyParameter = stampDuty.HasValue ?
                new ObjectParameter("StampDuty", stampDuty) :
                new ObjectParameter("StampDuty", typeof(bool));
    
            var grossPremiumParameter = grossPremium.HasValue ?
                new ObjectParameter("GrossPremium", grossPremium) :
                new ObjectParameter("GrossPremium", typeof(decimal));
    
            var adjustmentPercentageParameter = adjustmentPercentage.HasValue ?
                new ObjectParameter("AdjustmentPercentage", adjustmentPercentage) :
                new ObjectParameter("AdjustmentPercentage", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_IDC_Insert_PremiumDetails", pcIdParameter, trIdParameter, premiumIDParameter, basePremiumParameter, fSLParameter, gSTParameter, stampDutyParameter, grossPremiumParameter, adjustmentPercentageParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_IDC_Insert_UserDetails(Nullable<int> userID, string userName, string firstName, string lastName, Nullable<int> addressID, Nullable<int> postalAddressID, string phoneNo, string mobileNo, string emailID, string memberOf, string membershipNumber)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var postalAddressIDParameter = postalAddressID.HasValue ?
                new ObjectParameter("PostalAddressID", postalAddressID) :
                new ObjectParameter("PostalAddressID", typeof(int));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var mobileNoParameter = mobileNo != null ?
                new ObjectParameter("MobileNo", mobileNo) :
                new ObjectParameter("MobileNo", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("EmailID", emailID) :
                new ObjectParameter("EmailID", typeof(string));
    
            var memberOfParameter = memberOf != null ?
                new ObjectParameter("MemberOf", memberOf) :
                new ObjectParameter("MemberOf", typeof(string));
    
            var membershipNumberParameter = membershipNumber != null ?
                new ObjectParameter("MembershipNumber", membershipNumber) :
                new ObjectParameter("MembershipNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_IDC_Insert_UserDetails", userIDParameter, userNameParameter, firstNameParameter, lastNameParameter, addressIDParameter, postalAddressIDParameter, phoneNoParameter, mobileNoParameter, emailIDParameter, memberOfParameter, membershipNumberParameter);
        }
    
        public virtual ObjectResult<GetCustomerDetails_Result> IT_CC_GET_InsuredDetails1(Nullable<int> insuredID)
        {
            var insuredIDParameter = insuredID.HasValue ?
                new ObjectParameter("InsuredID", insuredID) :
                new ObjectParameter("InsuredID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCustomerDetails_Result>("IT_CC_GET_InsuredDetails1", insuredIDParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_HomeBuildingAmountDetails_Result> IT_CC_GET_HomeBuildingAmountDetails(Nullable<int> homeBuildingAmountDetailID)
        {
            var homeBuildingAmountDetailIDParameter = homeBuildingAmountDetailID.HasValue ?
                new ObjectParameter("HomeBuildingAmountDetailID", homeBuildingAmountDetailID) :
                new ObjectParameter("HomeBuildingAmountDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_HomeBuildingAmountDetails_Result>("IT_CC_GET_HomeBuildingAmountDetails", homeBuildingAmountDetailIDParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_HomeContentsDetails_Result> IT_CC_GET_HomeContentsDetails(Nullable<int> homeContentsDetailID)
        {
            var homeContentsDetailIDParameter = homeContentsDetailID.HasValue ?
                new ObjectParameter("HomeContentsDetailID", homeContentsDetailID) :
                new ObjectParameter("HomeContentsDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_HomeContentsDetails_Result>("IT_CC_GET_HomeContentsDetails", homeContentsDetailIDParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_HomeContentsItemDetails_Result> IT_CC_GET_HomeContentsItemDetails(Nullable<int> homeContentsItemID)
        {
            var homeContentsItemIDParameter = homeContentsItemID.HasValue ?
                new ObjectParameter("HomeContentsItemID", homeContentsItemID) :
                new ObjectParameter("HomeContentsItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_HomeContentsItemDetails_Result>("IT_CC_GET_HomeContentsItemDetails", homeContentsItemIDParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_HomeLocationDetails_Result> IT_CC_GET_HomeLocationDetails(Nullable<int> addressID)
        {
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_HomeLocationDetails_Result>("IT_CC_GET_HomeLocationDetails", addressIDParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_InsuredDetails_Result1> IT_CC_GET_InsuredDetails(string emailid, string customername, string phonenumber)
        {
            var emailidParameter = emailid != null ?
                new ObjectParameter("emailid", emailid) :
                new ObjectParameter("emailid", typeof(string));
    
            var customernameParameter = customername != null ?
                new ObjectParameter("customername", customername) :
                new ObjectParameter("customername", typeof(string));
    
            var phonenumberParameter = phonenumber != null ?
                new ObjectParameter("phonenumber", phonenumber) :
                new ObjectParameter("phonenumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_InsuredDetails_Result1>("IT_CC_GET_InsuredDetails", emailidParameter, customernameParameter, phonenumberParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_NewPolicyDetails_Result> IT_CC_GET_NewPolicyDetails(Nullable<int> pcId)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_NewPolicyDetails_Result>("IT_CC_GET_NewPolicyDetails", pcIdParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_PolicyInsured_Result> IT_CC_GET_PolicyInsured(Nullable<int> pcId)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_PolicyInsured_Result>("IT_CC_GET_PolicyInsured", pcIdParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_PolicyLogDetails_Result> IT_CC_GET_PolicyLogDetails(Nullable<int> policyLogID)
        {
            var policyLogIDParameter = policyLogID.HasValue ?
                new ObjectParameter("PolicyLogID", policyLogID) :
                new ObjectParameter("PolicyLogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_PolicyLogDetails_Result>("IT_CC_GET_PolicyLogDetails", policyLogIDParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_ValuablesDetails_Result> IT_CC_GET_ValuablesDetails(Nullable<int> valuablesDetailID)
        {
            var valuablesDetailIDParameter = valuablesDetailID.HasValue ?
                new ObjectParameter("ValuablesDetailID", valuablesDetailID) :
                new ObjectParameter("ValuablesDetailID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_ValuablesDetails_Result>("IT_CC_GET_ValuablesDetails", valuablesDetailIDParameter);
        }
    
        public virtual ObjectResult<IT_CC_GET_ValuablesItemDetails_Result> IT_CC_GET_ValuablesItemDetails(Nullable<int> valuablesItemID)
        {
            var valuablesItemIDParameter = valuablesItemID.HasValue ?
                new ObjectParameter("ValuablesItemID", valuablesItemID) :
                new ObjectParameter("ValuablesItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_CC_GET_ValuablesItemDetails_Result>("IT_CC_GET_ValuablesItemDetails", valuablesItemIDParameter);
        }
    
        public virtual int IT_CC_UPDATE_HomeBuildingAmountDetails(Nullable<int> homeBuildingAmountDetailID, Nullable<decimal> homeBuildingSumInsured, Nullable<int> homeBuildingNoClaimPeriod, Nullable<decimal> homeBuildingExcess, Nullable<int> homeBuildingNoClaimDiscount, Nullable<int> homeBuildingAgeDiscount, Nullable<int> premiumID)
        {
            var homeBuildingAmountDetailIDParameter = homeBuildingAmountDetailID.HasValue ?
                new ObjectParameter("HomeBuildingAmountDetailID", homeBuildingAmountDetailID) :
                new ObjectParameter("HomeBuildingAmountDetailID", typeof(int));
    
            var homeBuildingSumInsuredParameter = homeBuildingSumInsured.HasValue ?
                new ObjectParameter("HomeBuildingSumInsured", homeBuildingSumInsured) :
                new ObjectParameter("HomeBuildingSumInsured", typeof(decimal));
    
            var homeBuildingNoClaimPeriodParameter = homeBuildingNoClaimPeriod.HasValue ?
                new ObjectParameter("HomeBuildingNoClaimPeriod", homeBuildingNoClaimPeriod) :
                new ObjectParameter("HomeBuildingNoClaimPeriod", typeof(int));
    
            var homeBuildingExcessParameter = homeBuildingExcess.HasValue ?
                new ObjectParameter("HomeBuildingExcess", homeBuildingExcess) :
                new ObjectParameter("HomeBuildingExcess", typeof(decimal));
    
            var homeBuildingNoClaimDiscountParameter = homeBuildingNoClaimDiscount.HasValue ?
                new ObjectParameter("HomeBuildingNoClaimDiscount", homeBuildingNoClaimDiscount) :
                new ObjectParameter("HomeBuildingNoClaimDiscount", typeof(int));
    
            var homeBuildingAgeDiscountParameter = homeBuildingAgeDiscount.HasValue ?
                new ObjectParameter("HomeBuildingAgeDiscount", homeBuildingAgeDiscount) :
                new ObjectParameter("HomeBuildingAgeDiscount", typeof(int));
    
            var premiumIDParameter = premiumID.HasValue ?
                new ObjectParameter("PremiumID", premiumID) :
                new ObjectParameter("PremiumID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_UPDATE_HomeBuildingAmountDetails", homeBuildingAmountDetailIDParameter, homeBuildingSumInsuredParameter, homeBuildingNoClaimPeriodParameter, homeBuildingExcessParameter, homeBuildingNoClaimDiscountParameter, homeBuildingAgeDiscountParameter, premiumIDParameter);
        }
    
        public virtual int IT_CC_UPDATE_HomeContentDetails(Nullable<int> homeContentsDetailID, Nullable<int> homeContentsAgeDiscount, Nullable<int> homeContentsNoClaimDiscount, Nullable<decimal> homeContentsExcess, Nullable<int> homeContentsNoClaimPeriod, Nullable<decimal> homeContentsUnspecifiedSumInsured)
        {
            var homeContentsDetailIDParameter = homeContentsDetailID.HasValue ?
                new ObjectParameter("HomeContentsDetailID", homeContentsDetailID) :
                new ObjectParameter("HomeContentsDetailID", typeof(int));
    
            var homeContentsAgeDiscountParameter = homeContentsAgeDiscount.HasValue ?
                new ObjectParameter("HomeContentsAgeDiscount", homeContentsAgeDiscount) :
                new ObjectParameter("HomeContentsAgeDiscount", typeof(int));
    
            var homeContentsNoClaimDiscountParameter = homeContentsNoClaimDiscount.HasValue ?
                new ObjectParameter("HomeContentsNoClaimDiscount", homeContentsNoClaimDiscount) :
                new ObjectParameter("HomeContentsNoClaimDiscount", typeof(int));
    
            var homeContentsExcessParameter = homeContentsExcess.HasValue ?
                new ObjectParameter("HomeContentsExcess", homeContentsExcess) :
                new ObjectParameter("HomeContentsExcess", typeof(decimal));
    
            var homeContentsNoClaimPeriodParameter = homeContentsNoClaimPeriod.HasValue ?
                new ObjectParameter("HomeContentsNoClaimPeriod", homeContentsNoClaimPeriod) :
                new ObjectParameter("HomeContentsNoClaimPeriod", typeof(int));
    
            var homeContentsUnspecifiedSumInsuredParameter = homeContentsUnspecifiedSumInsured.HasValue ?
                new ObjectParameter("HomeContentsUnspecifiedSumInsured", homeContentsUnspecifiedSumInsured) :
                new ObjectParameter("HomeContentsUnspecifiedSumInsured", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_UPDATE_HomeContentDetails", homeContentsDetailIDParameter, homeContentsAgeDiscountParameter, homeContentsNoClaimDiscountParameter, homeContentsExcessParameter, homeContentsNoClaimPeriodParameter, homeContentsUnspecifiedSumInsuredParameter);
        }
    
        public virtual int IT_CC_Update_HomeContentsItems(Nullable<int> pcId, Nullable<int> trId, Nullable<int> homeID, string homeContentsItemDescription, Nullable<decimal> homeContentsItemSumInsured, Nullable<int> homeContentsItemID)
        {
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var homeIDParameter = homeID.HasValue ?
                new ObjectParameter("HomeID", homeID) :
                new ObjectParameter("HomeID", typeof(int));
    
            var homeContentsItemDescriptionParameter = homeContentsItemDescription != null ?
                new ObjectParameter("HomeContentsItemDescription", homeContentsItemDescription) :
                new ObjectParameter("HomeContentsItemDescription", typeof(string));
    
            var homeContentsItemSumInsuredParameter = homeContentsItemSumInsured.HasValue ?
                new ObjectParameter("HomeContentsItemSumInsured", homeContentsItemSumInsured) :
                new ObjectParameter("HomeContentsItemSumInsured", typeof(decimal));
    
            var homeContentsItemIDParameter = homeContentsItemID.HasValue ?
                new ObjectParameter("HomeContentsItemID", homeContentsItemID) :
                new ObjectParameter("HomeContentsItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_Update_HomeContentsItems", pcIdParameter, trIdParameter, homeIDParameter, homeContentsItemDescriptionParameter, homeContentsItemSumInsuredParameter, homeContentsItemIDParameter);
        }
    
        public virtual int IT_CC_UPDATE_HomeLocationDetails(Nullable<int> addressID, string buildingDescription, string propertyArea)
        {
            var addressIDParameter = addressID.HasValue ?
                new ObjectParameter("AddressID", addressID) :
                new ObjectParameter("AddressID", typeof(int));
    
            var buildingDescriptionParameter = buildingDescription != null ?
                new ObjectParameter("BuildingDescription", buildingDescription) :
                new ObjectParameter("BuildingDescription", typeof(string));
    
            var propertyAreaParameter = propertyArea != null ?
                new ObjectParameter("PropertyArea", propertyArea) :
                new ObjectParameter("PropertyArea", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_UPDATE_HomeLocationDetails", addressIDParameter, buildingDescriptionParameter, propertyAreaParameter);
        }
    
        public virtual int IT_CC_UPDATE_NEWHomeContentDetails(Nullable<int> homeContentsDetailID, Nullable<int> homeContentsAgeDiscount, Nullable<int> homeContentsNoClaimDiscount, Nullable<decimal> homeContentsExcess, Nullable<int> homeContentsNoClaimPeriod, Nullable<decimal> homeContentsUnspecifiedSumInsured)
        {
            var homeContentsDetailIDParameter = homeContentsDetailID.HasValue ?
                new ObjectParameter("HomeContentsDetailID", homeContentsDetailID) :
                new ObjectParameter("HomeContentsDetailID", typeof(int));
    
            var homeContentsAgeDiscountParameter = homeContentsAgeDiscount.HasValue ?
                new ObjectParameter("HomeContentsAgeDiscount", homeContentsAgeDiscount) :
                new ObjectParameter("HomeContentsAgeDiscount", typeof(int));
    
            var homeContentsNoClaimDiscountParameter = homeContentsNoClaimDiscount.HasValue ?
                new ObjectParameter("HomeContentsNoClaimDiscount", homeContentsNoClaimDiscount) :
                new ObjectParameter("HomeContentsNoClaimDiscount", typeof(int));
    
            var homeContentsExcessParameter = homeContentsExcess.HasValue ?
                new ObjectParameter("HomeContentsExcess", homeContentsExcess) :
                new ObjectParameter("HomeContentsExcess", typeof(decimal));
    
            var homeContentsNoClaimPeriodParameter = homeContentsNoClaimPeriod.HasValue ?
                new ObjectParameter("HomeContentsNoClaimPeriod", homeContentsNoClaimPeriod) :
                new ObjectParameter("HomeContentsNoClaimPeriod", typeof(int));
    
            var homeContentsUnspecifiedSumInsuredParameter = homeContentsUnspecifiedSumInsured.HasValue ?
                new ObjectParameter("HomeContentsUnspecifiedSumInsured", homeContentsUnspecifiedSumInsured) :
                new ObjectParameter("HomeContentsUnspecifiedSumInsured", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_UPDATE_NEWHomeContentDetails", homeContentsDetailIDParameter, homeContentsAgeDiscountParameter, homeContentsNoClaimDiscountParameter, homeContentsExcessParameter, homeContentsNoClaimPeriodParameter, homeContentsUnspecifiedSumInsuredParameter);
        }
    
        public virtual int IT_CC_UPDATE_NewPolicyDetails(Nullable<int> policyDetailsID, Nullable<System.DateTime> effectiveDate, string reason_for_cancelletion, Nullable<int> floodCover)
        {
            var policyDetailsIDParameter = policyDetailsID.HasValue ?
                new ObjectParameter("PolicyDetailsID", policyDetailsID) :
                new ObjectParameter("PolicyDetailsID", typeof(int));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var reason_for_cancelletionParameter = reason_for_cancelletion != null ?
                new ObjectParameter("Reason_for_cancelletion", reason_for_cancelletion) :
                new ObjectParameter("Reason_for_cancelletion", typeof(string));
    
            var floodCoverParameter = floodCover.HasValue ?
                new ObjectParameter("floodCover", floodCover) :
                new ObjectParameter("floodCover", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_UPDATE_NewPolicyDetails", policyDetailsIDParameter, effectiveDateParameter, reason_for_cancelletionParameter, floodCoverParameter);
        }
    
        public virtual int IT_CC_UPDATE_PolicyInsured(Nullable<int> insuredId, Nullable<int> pcId, Nullable<int> trId)
        {
            var insuredIdParameter = insuredId.HasValue ?
                new ObjectParameter("InsuredId", insuredId) :
                new ObjectParameter("InsuredId", typeof(int));
    
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_UPDATE_PolicyInsured", insuredIdParameter, pcIdParameter, trIdParameter);
        }
    
        public virtual int IT_CC_UPDATE_PolicyLogDetails(Nullable<int> policyLogID, Nullable<int> policyNumber, string details, Nullable<System.DateTime> timestamp)
        {
            var policyLogIDParameter = policyLogID.HasValue ?
                new ObjectParameter("PolicyLogID", policyLogID) :
                new ObjectParameter("PolicyLogID", typeof(int));
    
            var policyNumberParameter = policyNumber.HasValue ?
                new ObjectParameter("PolicyNumber", policyNumber) :
                new ObjectParameter("PolicyNumber", typeof(int));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            var timestampParameter = timestamp.HasValue ?
                new ObjectParameter("Timestamp", timestamp) :
                new ObjectParameter("Timestamp", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_UPDATE_PolicyLogDetails", policyLogIDParameter, policyNumberParameter, detailsParameter, timestampParameter);
        }
    
        public virtual int IT_CC_UPDATE_ValuablesDetails(Nullable<int> valuablesDetailID, Nullable<decimal> valuablesUnspecifiedSumInsured, Nullable<decimal> valuablesExcess)
        {
            var valuablesDetailIDParameter = valuablesDetailID.HasValue ?
                new ObjectParameter("ValuablesDetailID", valuablesDetailID) :
                new ObjectParameter("ValuablesDetailID", typeof(int));
    
            var valuablesUnspecifiedSumInsuredParameter = valuablesUnspecifiedSumInsured.HasValue ?
                new ObjectParameter("ValuablesUnspecifiedSumInsured", valuablesUnspecifiedSumInsured) :
                new ObjectParameter("ValuablesUnspecifiedSumInsured", typeof(decimal));
    
            var valuablesExcessParameter = valuablesExcess.HasValue ?
                new ObjectParameter("ValuablesExcess", valuablesExcess) :
                new ObjectParameter("ValuablesExcess", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_UPDATE_ValuablesDetails", valuablesDetailIDParameter, valuablesUnspecifiedSumInsuredParameter, valuablesExcessParameter);
        }
    
        public virtual int IT_CC_UPDATE_ValuablesItemDetails(Nullable<int> valuablesItemID, string valuablesDescription)
        {
            var valuablesItemIDParameter = valuablesItemID.HasValue ?
                new ObjectParameter("ValuablesItemID", valuablesItemID) :
                new ObjectParameter("ValuablesItemID", typeof(int));
    
            var valuablesDescriptionParameter = valuablesDescription != null ?
                new ObjectParameter("ValuablesDescription", valuablesDescription) :
                new ObjectParameter("ValuablesDescription", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_CC_UPDATE_ValuablesItemDetails", valuablesItemIDParameter, valuablesDescriptionParameter);
        }
    
        public virtual ObjectResult<IT_IDC_Get_CustomerLogInDetails_Result> IT_IDC_Get_CustomerLogInDetails(string userName, Nullable<int> password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("userName", userName) :
                new ObjectParameter("userName", typeof(string));
    
            var passwordParameter = password.HasValue ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_IDC_Get_CustomerLogInDetails_Result>("IT_IDC_Get_CustomerLogInDetails", userNameParameter, passwordParameter);
        }
    
        public virtual int IT_IDC_UPDATE_UserPasswordDetails(Nullable<int> userID, Nullable<int> password, Nullable<int> newPassword)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var passwordParameter = password.HasValue ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(int));
    
            var newPasswordParameter = newPassword.HasValue ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_IDC_UPDATE_UserPasswordDetails", userIDParameter, passwordParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<IT_GetCustomerMasterDetails_Result> IT_GetCustomerMasterDetails(Nullable<decimal> customerId, string email)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(decimal));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_GetCustomerMasterDetails_Result>("IT_GetCustomerMasterDetails", customerIdParameter, emailParameter);
        }
    
        public virtual ObjectResult<IT_GetCustomerQnsDetails_Result> IT_GetCustomerQnsDetails(Nullable<decimal> customerId, Nullable<int> sectionId, Nullable<int> policyType, string policyId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(decimal));
    
            var sectionIdParameter = sectionId.HasValue ?
                new ObjectParameter("SectionId", sectionId) :
                new ObjectParameter("SectionId", typeof(int));
    
            var policyTypeParameter = policyType.HasValue ?
                new ObjectParameter("PolicyType", policyType) :
                new ObjectParameter("PolicyType", typeof(int));
    
            var policyIdParameter = policyId != null ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_GetCustomerQnsDetails_Result>("IT_GetCustomerQnsDetails", customerIdParameter, sectionIdParameter, policyTypeParameter, policyIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_InsertCustomerMaster(string email, Nullable<int> insureId, string policyNumber, Nullable<int> policyType, string customerName, Nullable<int> tRID)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var insureIdParameter = insureId.HasValue ?
                new ObjectParameter("InsureId", insureId) :
                new ObjectParameter("InsureId", typeof(int));
    
            var policyNumberParameter = policyNumber != null ?
                new ObjectParameter("PolicyNumber", policyNumber) :
                new ObjectParameter("PolicyNumber", typeof(string));
    
            var policyTypeParameter = policyType.HasValue ?
                new ObjectParameter("PolicyType", policyType) :
                new ObjectParameter("PolicyType", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var tRIDParameter = tRID.HasValue ?
                new ObjectParameter("TRID", tRID) :
                new ObjectParameter("TRID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_InsertCustomerMaster", emailParameter, insureIdParameter, policyNumberParameter, policyTypeParameter, customerNameParameter, tRIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_InsertCustomerQnsData(Nullable<decimal> customerId, Nullable<int> sectionId, Nullable<int> questionId, string answer, Nullable<int> policyType, string policyId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(decimal));
    
            var sectionIdParameter = sectionId.HasValue ?
                new ObjectParameter("SectionId", sectionId) :
                new ObjectParameter("SectionId", typeof(int));
    
            var questionIdParameter = questionId.HasValue ?
                new ObjectParameter("QuestionId", questionId) :
                new ObjectParameter("QuestionId", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var policyTypeParameter = policyType.HasValue ?
                new ObjectParameter("PolicyType", policyType) :
                new ObjectParameter("PolicyType", typeof(int));
    
            var policyIdParameter = policyId != null ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_InsertCustomerQnsData", customerIdParameter, sectionIdParameter, questionIdParameter, answerParameter, policyTypeParameter, policyIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_InsertForgetPasswordCode(string guid, Nullable<int> status)
        {
            var guidParameter = guid != null ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_InsertForgetPasswordCode", guidParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_GetForgetPasswordStatus(string guid)
        {
            var guidParameter = guid != null ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_GetForgetPasswordStatus", guidParameter);
        }
    
        public virtual ObjectResult<IT_Master_GetSuburbDetails_Result> IT_Master_GetSuburbDetails(string suburb, string postcode)
        {
            var suburbParameter = suburb != null ?
                new ObjectParameter("Suburb", suburb) :
                new ObjectParameter("Suburb", typeof(string));
    
            var postcodeParameter = postcode != null ?
                new ObjectParameter("Postcode", postcode) :
                new ObjectParameter("Postcode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_Master_GetSuburbDetails_Result>("IT_Master_GetSuburbDetails", suburbParameter, postcodeParameter);
        }
    
        public virtual ObjectResult<string> IT_Master_GetSuburbList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("IT_Master_GetSuburbList");
        }
    
        public virtual ObjectResult<IT_GetPolicyInclusions_Result> IT_GetPolicyInclusions(Nullable<decimal> customerId, string policyId, Nullable<int> policyType)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(decimal));
    
            var policyIdParameter = policyId != null ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(string));
    
            var policyTypeParameter = policyType.HasValue ?
                new ObjectParameter("PolicyType", policyType) :
                new ObjectParameter("PolicyType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IT_GetPolicyInclusions_Result>("IT_GetPolicyInclusions", customerIdParameter, policyIdParameter, policyTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_InsertPolicyInclusions(Nullable<decimal> customerId, string policyInclusions, string policyId, Nullable<int> policyType, Nullable<int> unId, Nullable<int> unitNumber, string unitStatus)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(decimal));
    
            var policyInclusionsParameter = policyInclusions != null ?
                new ObjectParameter("PolicyInclusions", policyInclusions) :
                new ObjectParameter("PolicyInclusions", typeof(string));
    
            var policyIdParameter = policyId != null ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(string));
    
            var policyTypeParameter = policyType.HasValue ?
                new ObjectParameter("PolicyType", policyType) :
                new ObjectParameter("PolicyType", typeof(int));
    
            var unIdParameter = unId.HasValue ?
                new ObjectParameter("UnId", unId) :
                new ObjectParameter("UnId", typeof(int));
    
            var unitNumberParameter = unitNumber.HasValue ?
                new ObjectParameter("UnitNumber", unitNumber) :
                new ObjectParameter("UnitNumber", typeof(int));
    
            var unitStatusParameter = unitStatus != null ?
                new ObjectParameter("UnitStatus", unitStatus) :
                new ObjectParameter("UnitStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_InsertPolicyInclusions", customerIdParameter, policyInclusionsParameter, policyIdParameter, policyTypeParameter, unIdParameter, unitNumberParameter, unitStatusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_dt_Insert_PolicyDetails(string policyNumber, Nullable<int> insureId, string transactionNumber, Nullable<int> pcId, Nullable<int> trId, Nullable<int> termNumber, string accountManagerID, string policyStatus, Nullable<int> coverPeriod, string coverPeriodUnit, Nullable<System.DateTime> inceptionDate, Nullable<System.DateTime> expiryDate, Nullable<System.DateTime> effectiveDate, Nullable<int> prId, Nullable<int> iyId, string insuredName, Nullable<bool> removeStampDuty, Nullable<int> createdByUserID, string timeCreated, Nullable<bool> isFloodCoverRequired, Nullable<bool> hasMadeAClaim, string reason, string status)
        {
            var policyNumberParameter = policyNumber != null ?
                new ObjectParameter("PolicyNumber", policyNumber) :
                new ObjectParameter("PolicyNumber", typeof(string));
    
            var insureIdParameter = insureId.HasValue ?
                new ObjectParameter("InsureId", insureId) :
                new ObjectParameter("InsureId", typeof(int));
    
            var transactionNumberParameter = transactionNumber != null ?
                new ObjectParameter("TransactionNumber", transactionNumber) :
                new ObjectParameter("TransactionNumber", typeof(string));
    
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            var trIdParameter = trId.HasValue ?
                new ObjectParameter("TrId", trId) :
                new ObjectParameter("TrId", typeof(int));
    
            var termNumberParameter = termNumber.HasValue ?
                new ObjectParameter("TermNumber", termNumber) :
                new ObjectParameter("TermNumber", typeof(int));
    
            var accountManagerIDParameter = accountManagerID != null ?
                new ObjectParameter("AccountManagerID", accountManagerID) :
                new ObjectParameter("AccountManagerID", typeof(string));
    
            var policyStatusParameter = policyStatus != null ?
                new ObjectParameter("PolicyStatus", policyStatus) :
                new ObjectParameter("PolicyStatus", typeof(string));
    
            var coverPeriodParameter = coverPeriod.HasValue ?
                new ObjectParameter("CoverPeriod", coverPeriod) :
                new ObjectParameter("CoverPeriod", typeof(int));
    
            var coverPeriodUnitParameter = coverPeriodUnit != null ?
                new ObjectParameter("CoverPeriodUnit", coverPeriodUnit) :
                new ObjectParameter("CoverPeriodUnit", typeof(string));
    
            var inceptionDateParameter = inceptionDate.HasValue ?
                new ObjectParameter("InceptionDate", inceptionDate) :
                new ObjectParameter("InceptionDate", typeof(System.DateTime));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var prIdParameter = prId.HasValue ?
                new ObjectParameter("PrId", prId) :
                new ObjectParameter("PrId", typeof(int));
    
            var iyIdParameter = iyId.HasValue ?
                new ObjectParameter("IyId", iyId) :
                new ObjectParameter("IyId", typeof(int));
    
            var insuredNameParameter = insuredName != null ?
                new ObjectParameter("InsuredName", insuredName) :
                new ObjectParameter("InsuredName", typeof(string));
    
            var removeStampDutyParameter = removeStampDuty.HasValue ?
                new ObjectParameter("RemoveStampDuty", removeStampDuty) :
                new ObjectParameter("RemoveStampDuty", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            var timeCreatedParameter = timeCreated != null ?
                new ObjectParameter("TimeCreated", timeCreated) :
                new ObjectParameter("TimeCreated", typeof(string));
    
            var isFloodCoverRequiredParameter = isFloodCoverRequired.HasValue ?
                new ObjectParameter("IsFloodCoverRequired", isFloodCoverRequired) :
                new ObjectParameter("IsFloodCoverRequired", typeof(bool));
    
            var hasMadeAClaimParameter = hasMadeAClaim.HasValue ?
                new ObjectParameter("HasMadeAClaim", hasMadeAClaim) :
                new ObjectParameter("HasMadeAClaim", typeof(bool));
    
            var reasonParameter = reason != null ?
                new ObjectParameter("Reason", reason) :
                new ObjectParameter("Reason", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_dt_Insert_PolicyDetails", policyNumberParameter, insureIdParameter, transactionNumberParameter, pcIdParameter, trIdParameter, termNumberParameter, accountManagerIDParameter, policyStatusParameter, coverPeriodParameter, coverPeriodUnitParameter, inceptionDateParameter, expiryDateParameter, effectiveDateParameter, prIdParameter, iyIdParameter, insuredNameParameter, removeStampDutyParameter, createdByUserIDParameter, timeCreatedParameter, isFloodCoverRequiredParameter, hasMadeAClaimParameter, reasonParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_dt_Insert_Unit(Nullable<int> policyId, string component, string name, Nullable<int> unId, Nullable<int> unitNumber, string unitStatus, Nullable<int> profileUnId, string referralList, string status)
        {
            var policyIdParameter = policyId.HasValue ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(int));
    
            var componentParameter = component != null ?
                new ObjectParameter("Component", component) :
                new ObjectParameter("Component", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var unIdParameter = unId.HasValue ?
                new ObjectParameter("UnId", unId) :
                new ObjectParameter("UnId", typeof(int));
    
            var unitNumberParameter = unitNumber.HasValue ?
                new ObjectParameter("UnitNumber", unitNumber) :
                new ObjectParameter("UnitNumber", typeof(int));
    
            var unitStatusParameter = unitStatus != null ?
                new ObjectParameter("UnitStatus", unitStatus) :
                new ObjectParameter("UnitStatus", typeof(string));
    
            var profileUnIdParameter = profileUnId.HasValue ?
                new ObjectParameter("ProfileUnId", profileUnId) :
                new ObjectParameter("ProfileUnId", typeof(int));
    
            var referralListParameter = referralList != null ?
                new ObjectParameter("ReferralList", referralList) :
                new ObjectParameter("ReferralList", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_dt_Insert_Unit", policyIdParameter, componentParameter, nameParameter, unIdParameter, unitNumberParameter, unitStatusParameter, profileUnIdParameter, referralListParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_dt_Insert_UnitDetails(Nullable<int> unitId, string component_Type, string unit_Type, Nullable<int> unId, Nullable<int> elementId, string rowSourceData, string valueData, string stateData, string referralList, string status, Nullable<int> addressId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var component_TypeParameter = component_Type != null ?
                new ObjectParameter("Component_Type", component_Type) :
                new ObjectParameter("Component_Type", typeof(string));
    
            var unit_TypeParameter = unit_Type != null ?
                new ObjectParameter("Unit_Type", unit_Type) :
                new ObjectParameter("Unit_Type", typeof(string));
    
            var unIdParameter = unId.HasValue ?
                new ObjectParameter("UnId", unId) :
                new ObjectParameter("UnId", typeof(int));
    
            var elementIdParameter = elementId.HasValue ?
                new ObjectParameter("ElementId", elementId) :
                new ObjectParameter("ElementId", typeof(int));
    
            var rowSourceDataParameter = rowSourceData != null ?
                new ObjectParameter("RowSourceData", rowSourceData) :
                new ObjectParameter("RowSourceData", typeof(string));
    
            var valueDataParameter = valueData != null ?
                new ObjectParameter("ValueData", valueData) :
                new ObjectParameter("ValueData", typeof(string));
    
            var stateDataParameter = stateData != null ?
                new ObjectParameter("StateData", stateData) :
                new ObjectParameter("StateData", typeof(string));
    
            var referralListParameter = referralList != null ?
                new ObjectParameter("ReferralList", referralList) :
                new ObjectParameter("ReferralList", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_dt_Insert_UnitDetails", unitIdParameter, component_TypeParameter, unit_TypeParameter, unIdParameter, elementIdParameter, rowSourceDataParameter, valueDataParameter, stateDataParameter, referralListParameter, statusParameter, addressIdParameter);
        }
    
        public virtual ObjectResult<usp_dt_GetPolicyDetails_Result> usp_dt_GetPolicyDetails(Nullable<int> policyId, Nullable<int> pcId)
        {
            var policyIdParameter = policyId.HasValue ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(int));
    
            var pcIdParameter = pcId.HasValue ?
                new ObjectParameter("PcId", pcId) :
                new ObjectParameter("PcId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_dt_GetPolicyDetails_Result>("usp_dt_GetPolicyDetails", policyIdParameter, pcIdParameter);
        }
    
        public virtual ObjectResult<usp_GetUnit_Result> usp_GetUnit(Nullable<int> unitId, Nullable<int> policyId, string name)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var policyIdParameter = policyId.HasValue ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUnit_Result>("usp_GetUnit", unitIdParameter, policyIdParameter, nameParameter);
        }
    
        public virtual ObjectResult<usp_GetUnitDetails_Result> usp_GetUnitDetails(Nullable<int> unitId, Nullable<int> unitDetailsId, Nullable<int> unId)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var unitDetailsIdParameter = unitDetailsId.HasValue ?
                new ObjectParameter("UnitDetailsId", unitDetailsId) :
                new ObjectParameter("UnitDetailsId", typeof(int));
    
            var unIdParameter = unId.HasValue ?
                new ObjectParameter("UnId", unId) :
                new ObjectParameter("UnId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetUnitDetails_Result>("usp_GetUnitDetails", unitIdParameter, unitDetailsIdParameter, unIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> IT_dt_Insert_Local_Element_UnitDetails(string component_Type, string unit_Type, Nullable<int> unId, string sectionName, Nullable<int> elementId, string rowSourceData, string valueData, string stateData, string referralList, string status, Nullable<int> addressId)
        {
            var component_TypeParameter = component_Type != null ?
                new ObjectParameter("Component_Type", component_Type) :
                new ObjectParameter("Component_Type", typeof(string));
    
            var unit_TypeParameter = unit_Type != null ?
                new ObjectParameter("Unit_Type", unit_Type) :
                new ObjectParameter("Unit_Type", typeof(string));
    
            var unIdParameter = unId.HasValue ?
                new ObjectParameter("UnId", unId) :
                new ObjectParameter("UnId", typeof(int));
    
            var sectionNameParameter = sectionName != null ?
                new ObjectParameter("SectionName", sectionName) :
                new ObjectParameter("SectionName", typeof(string));
    
            var elementIdParameter = elementId.HasValue ?
                new ObjectParameter("ElementId", elementId) :
                new ObjectParameter("ElementId", typeof(int));
    
            var rowSourceDataParameter = rowSourceData != null ?
                new ObjectParameter("RowSourceData", rowSourceData) :
                new ObjectParameter("RowSourceData", typeof(string));
    
            var valueDataParameter = valueData != null ?
                new ObjectParameter("ValueData", valueData) :
                new ObjectParameter("ValueData", typeof(string));
    
            var stateDataParameter = stateData != null ?
                new ObjectParameter("StateData", stateData) :
                new ObjectParameter("StateData", typeof(string));
    
            var referralListParameter = referralList != null ?
                new ObjectParameter("ReferralList", referralList) :
                new ObjectParameter("ReferralList", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var addressIdParameter = addressId.HasValue ?
                new ObjectParameter("AddressId", addressId) :
                new ObjectParameter("AddressId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("IT_dt_Insert_Local_Element_UnitDetails", component_TypeParameter, unit_TypeParameter, unIdParameter, sectionNameParameter, elementIdParameter, rowSourceDataParameter, valueDataParameter, stateDataParameter, referralListParameter, statusParameter, addressIdParameter);
        }
    
        public virtual ObjectResult<usp_GetLocalElement_UnitDetails_Result> usp_GetLocalElement_UnitDetails(Nullable<int> unitDetailsId, string sectionName, Nullable<int> unId)
        {
            var unitDetailsIdParameter = unitDetailsId.HasValue ?
                new ObjectParameter("UnitDetailsId", unitDetailsId) :
                new ObjectParameter("UnitDetailsId", typeof(int));
    
            var sectionNameParameter = sectionName != null ?
                new ObjectParameter("SectionName", sectionName) :
                new ObjectParameter("SectionName", typeof(string));
    
            var unIdParameter = unId.HasValue ?
                new ObjectParameter("UnId", unId) :
                new ObjectParameter("UnId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetLocalElement_UnitDetails_Result>("usp_GetLocalElement_UnitDetails", unitDetailsIdParameter, sectionNameParameter, unIdParameter);
        }
    
        public virtual int IT_dt_Delete_Unit(Nullable<int> unitId, Nullable<int> policyId, string component, string name, Nullable<int> unId, Nullable<int> unitNumber, string unitStatus, Nullable<int> profileUnId, string status)
        {
            var unitIdParameter = unitId.HasValue ?
                new ObjectParameter("UnitId", unitId) :
                new ObjectParameter("UnitId", typeof(int));
    
            var policyIdParameter = policyId.HasValue ?
                new ObjectParameter("PolicyId", policyId) :
                new ObjectParameter("PolicyId", typeof(int));
    
            var componentParameter = component != null ?
                new ObjectParameter("Component", component) :
                new ObjectParameter("Component", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var unIdParameter = unId.HasValue ?
                new ObjectParameter("UnId", unId) :
                new ObjectParameter("UnId", typeof(int));
    
            var unitNumberParameter = unitNumber.HasValue ?
                new ObjectParameter("UnitNumber", unitNumber) :
                new ObjectParameter("UnitNumber", typeof(int));
    
            var unitStatusParameter = unitStatus != null ?
                new ObjectParameter("UnitStatus", unitStatus) :
                new ObjectParameter("UnitStatus", typeof(string));
    
            var profileUnIdParameter = profileUnId.HasValue ?
                new ObjectParameter("ProfileUnId", profileUnId) :
                new ObjectParameter("ProfileUnId", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("IT_dt_Delete_Unit", unitIdParameter, policyIdParameter, componentParameter, nameParameter, unIdParameter, unitNumberParameter, unitStatusParameter, profileUnIdParameter, statusParameter);
        }
    }
}

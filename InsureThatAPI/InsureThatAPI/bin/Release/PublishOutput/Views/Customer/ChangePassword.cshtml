@model InsureThatAPI.Models.ChangePasswordDetails
@{
    Layout = "~/Views/Shared/_Layout.cshtml"; ;
}
<div style="margin-top:40px;"></div>

<div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 text-right">
</div>
<div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 text-right">
    <a style="padding: 5px 15px;" class="btn color-bk-btn col-md-4 margin-right-10 leftmargin-sm pull-right" href="@Url.Action("AdvancedCustomerSearch", "Customer")">ADVANCED SEARCH</a>
    <a class="btn color-bk-btn col-sm-4 margin-left-5 pull-right" href="@Url.Action("NewPolicy", "Customer", new { cid = @ViewBag.cid})">Add Policy</a>
</div>
<div class="clearfix"></div>
@using (Ajax.BeginForm("ChangePassword", "Customer", null, new AjaxOptions()
{
    HttpMethod = "POST"

}, new { @id = "changepswd", @name = "changepswd" }))
{
    @Html.AntiForgeryToken()
    if (ViewBag.ErrorMessage != null)
    {
        <div class="" style="color:red;">@ViewBag.ErrorMessage</div>
    }
    <div class="row content">
        <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12 text-center login-head-1">
            <h1>Password</h1>
        </div>
        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
            <div class="col-lg-12 login-head-2">
                <div class="col-md-3 col-sm-12 col-xs-12 text-center">
                    <img src="~/images/agent-login-icon.png" class="agent-icon" />
                </div>
                <div class="col-md-9 col-sm-12 col-xs-12"><h3>Change Password</h3></div>
            </div>
            <form>
                <div class="col-md-12 form-group">
                    <label class="col-lg-5 col-md-5 col-sm-4 col-xs-12">OLD PASSWORD</label>
                    <div class="col-lg-7 col-md-7 col-sm-8 col-xs-12">
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control form-border-bottom", @id = "password" })
                        @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 form-group">
                    <label class="col-lg-5 col-md-5 col-sm-4 col-xs-12">NEW PASSWORD</label>
                    <div class="col-lg-7 col-md-7 col-sm-8 col-xs-12">

                        @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control form-border-bottom", @id = "newpassword" })
                        @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="col-md-12 form-group">
                    <label class="col-lg-5 col-md-5 col-sm-4 col-xs-12">CONFIRM PASSWORD</label>
                    <div class="col-lg-7 col-md-7 col-sm-8 col-xs-12">
                        @Html.PasswordFor(model => model.RePassword, new { @class = "form-control form-border-bottom", @id = "repassword" })
                        @Html.ValidationMessageFor(m => m.RePassword, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="clearfix">&nbsp;</div>
                <div class="col-md-12">
                    <button type="submit" class="btn-primary btn pull-right">Save</button>
                </div>
            </form>
        </div>
    </div>

}
<script type="text/javascript" src="~/js/jquery.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.validate.js"></script>
<script>
    $(document).ready(function () {
        $.validator.addMethod("regex", function (value, element, regexp) {
            if (regexp.constructor != RegExp)
                regexp = new RegExp(regexp);
            else if (regexp.global)
                regexp.lastIndex = 0;
            return this.optional(element) || regexp.test(value);
        }, "Please check your input.");
        $("form[name='changepswd']").validate({
            rules: {
                "Password": {
                    required: true,

                },
                "NewPassword": {
                    required: true,
                    minlength: 6,

                },
                "RePassword": {
                    required: true,
                    minlength: 6,
                    equalTo: "#newpassword"
                },
            },
            messages: {
                "Password": {
                    required: "Please enter Password",
                },
                "NewPassword": {
                    required: "Please enter New Password",

                },
                "RePassword": {
                    required: "Please enter Confirm Password",
                },
            },
            onfocusout: function (element) {
                this.element(element);
            },
            submitHandler: function (form) {
                form.submit();
            }
        });
    });
</script>

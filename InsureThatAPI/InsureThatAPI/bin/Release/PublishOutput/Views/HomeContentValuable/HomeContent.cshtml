@model InsureThatAPI.Models.HomeContent
@{
    ViewBag.Title = "Home Content";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<SelectListItem> listsStates = new List<SelectListItem>();
    listsStates.Add(new SelectListItem { Text = "NSW", Value = "NSW" });
    listsStates.Add(new SelectListItem { Text = "QLD", Value = "QLD", });
    listsStates.Add(new SelectListItem { Text = "SA", Value = "SA" });
    listsStates.Add(new SelectListItem { Text = "TAS", Value = "TAS" });
    listsStates.Add(new SelectListItem { Text = "VIC", Value = "VIC" });
    listsStates.Add(new SelectListItem { Text = "WA", Value = "WA" });
    List<SelectListItem> listsExcess = new List<SelectListItem>();
    listsExcess.Add(new SelectListItem { Value = "500", Text = "$500" });
    listsExcess.Add(new SelectListItem { Value = "600", Text = "$600" });
    listsExcess.Add(new SelectListItem { Value = "700", Text = "$700" });
    listsExcess.Add(new SelectListItem { Value = "850", Text = "$850" });
    listsExcess.Add(new SelectListItem { Value = "1200", Text = "$1,200" });
    listsExcess.Add(new SelectListItem { Value = "2200", Text = "$2,200" });
    var CountTotal = 0;
    var jCount = 0;
}
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 policy-indiv-head">
    <h4><span>RURAL LIFESTYLE POLICY</span> / HOME CONTENTS</h4>
</div>
<div class="col-lg-9 col-md-9 col-sm-9 col-xs-12 endorsmentview">
    <div class="col-lg-7 col-md-7 col-sm-7 col-xs-12 policy-full-head">
        <h2>HOME CONTENTS</h2>
        @if (Session["PolicyNo"] != null)
        {
            <h5>Policy Number: @Session["PolicyNo"].ToString()</h5>
        }
    </div>
    <div class="col-md-5 col-sm-5 col-xs-12 pull-right">
        <div class="pull-right">
            <button type="button" href="#savepolicy" role="button" data-target="#savepolicy" data-toggle="modal" class="button-3d nomargin tab-linker" id="savepolicyP" style="width:auto;border:none;background-color:#000000;color:#FFFFFF;margin-top:10px;line-height:22px;">Save Policy</button>
            <button type="button" href="#referralListModel" role="button" data-target="#referralListModel" data-toggle="modal" class="button-3d nomargin tab-linker" id="referralList" style="width:auto;border:none;background-color:#000000;color:#FFFFFF;margin-top:10px;line-height:22px;">Referral List</button>
            <button type="button" href="#premiumModel" role="button" data-target="#premiumModel" data-toggle="modal" class="button-3d nomargin tab-linker" id="premium" style="width:auto;border:none;background-color:#000000;color:#FFFFFF;margin-top:10px;line-height:22px;">Premium</button>
            @if (Model.PcId != null)
            { <a type="button" href="/Disclosure/DisclosureDetails?cid=@Model.CustomerId&PcId=@Model.PcId" role="button" class="button-3d nomargin tab-linker" style="width:auto;border:none;background-color:#000000;color:#FFFFFF;margin-top:15px;line-height:29px;padding: 3.73px 10.5px;">Disclosure</a>
            }
            else
            {
                <a type="button" href="/Disclosure/DisclosureDetails?cid=@Model.CustomerId" role="button" class="button-3d nomargin tab-linker" style="width:auto;border:none;background-color:#000000;color:#FFFFFF;margin-top:15px;line-height:29px;padding: 3.73px 10.5px;">Disclosure</a>
            }  
        </div>
    </div>
    <div id="referralListModel" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="referralListModel" aria-hidden="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h3 class="pull-left">Referral List</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        <img src="~/images/close-icon.png" />
                    </button>
                </div>
                <div class="modal-body">
                    @if (Model.Referels != null && Model.Referels.Count() > 0)
                    {
                        for (int j = 0; j < Model.Referels.Count(); j++)
                        {
                            @Model.Referels[j]<br />
                        }
                    }
                    else
                    {
                        <p>No Referral List</p>
                    }
                    <p id="referralList-p"></p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                </div>
            </div>
        </div>
    </div>
    <div id="savepolicy" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="savepolicy" aria-hidden="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header" style="padding: 15px 26px 0px;">
                    <h3 class="pull-left">Save Policy</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        <img src="~/images/close-icon.png" />
                    </button>
                </div>
                <div class="modal-body">
                    <p>Do you wish to save the answers you have completed and continue later?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                    <button class="btn btn-default no-border savepolicyP" data-dismiss="modal" aria-hidden="true"> Save </button>
                </div>
            </div>
        </div>
    </div>
    <div id="premiumModel" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="premiumModel" aria-hidden="false">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header" style="padding: 15px 26px 0px;">
                    <h3 class="pull-left">Premium Details</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                        <img src="~/images/close-icon.png" />
                    </button>
                </div>
                <div class="modal-body">
                    <table class="table" style=" width: 100%; ">
                        <thead>
                            <tr>
                                <th class="space_left">Section Name</th>
                                <th class="space_left">Base</th>
                                <th class="space_left">FSL</th>
                                <th class="space_left">GST</th>
                                <th class="space_left">Stamp Duty</th>
                                <th class="space_right">Gross</th>
                            </tr>
                        </thead>
                        <tbody id="premiumModel-p-b">
                            <tr>
                                <td colspan="6">No Premium Details</td>
                            </tr>
                        </tbody>
                        <tfoot id="premiumModel-p-f">
                            <tr>
                                <td colspan="6">No Premium Details</td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                </div>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>
    <div id="errorContainer"></div>
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 success savepolicyresult"></div>
    @using (Ajax.BeginForm("HomeContent", "HomeContentValuable", new { cid = @ViewBag.cid }, new AjaxOptions()
    {
        HttpMethod = "POST"

    }, new { @id = "homeContent", @name = "homeContent" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(p => p.CustomerId, new { @id = "ciid" })
        @Html.HiddenFor(p => p.PcId, new { id = "pcidd" })
        <div class="error"></div>
        <div class="col-md-12 mt-10 mb-10">
            <p class="col-md-12"><a href="#homecontensModel" role="button" data-target="#homecontensModel" data-toggle="modal"><strong>What is considered Home Contents?</strong></a></p>
            <p class="col-md-12"><a href="#homecontensModel1" role="button" data-target="#homecontensModel1" data-toggle="modal"><strong>What is covered under this section?</strong></a></p>
        </div>
        <div class="col-md-12 mt-10 mb-10">
            <div class="col-md-4"><p>Location</p></div>
            <div class="col-md-8">
                <div class="col-md-12" @*style="padding:0px 1px;"*@>
                    @Html.TextBoxFor(p => p.AddressObj.Address, new { @class = "col-sm-2 form-control form-inline field-length-xs vlidationInsure", @placeholder = "location", @id = "addresshome", @style = "width: 100%;", @readonly = "readonly" })
                    <label id="AddressObj.Address-error" class="error" for="AddressObj.Address"></label>
                </div>
            </div>
        </div>
        <div class="col-md-12 mt-10 mb-10">
            <div class="col-md-4"><p>How much would it cost to replace your unspecified contents?</p></div>
            <div class="col-md-8">
                $@Html.TextBoxFor(p => p.CosttoreplaceObj.Costtoreplaces, new { @autocomplete = "off", @maxlength = "13", @class = "form-control form-border-bottom vlidationInsure commondatatestComma commondatatestPriceChangeNewOne commondatatestPriceChangenew", @data_eiid = @Model.CosttoreplaceObj.EiId, @id = "costtoreplaces", @style = "display:inline-block;width:95%", @data_regex = "N", @data_min = "100000" })<br />
                <p class="mini-text">(The minimum is $100,000)</p>
                @Html.HiddenFor(p => p.CosttoreplaceObj.EiId)
                <label id="CosttoreplaceObj.Costtoreplaces-error" class="error" for="CosttoreplaceObj.Costtoreplaces"></label>
            </div>
        </div>
        <div id="homecontensModel1" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="homecontensModel1" aria-hidden="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="pull-left">Home Contents cover</h3>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                            <img src="~/images/close-icon.png" />
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Your household goods and personal effects that You own or which are in Your care and for which You are legally responsible including:</p>
                        <ul style="list-style:none">
                            <li>(1) Carpets, curtains or internal blinds;</li>
                            <li>(2) Mobile phone, laptop and tablet computers or global positioning systems valued up to $3,000 per item. (Please refer to Extra Benefit – Temporary Removal of Home Contents (Worldwide Cover) for cover away from the Location);</li>
                            <li>(3) Furniture and furnishings;</li>
                            <li>(4) Home and garden appliances;</li>
                            <li>(5) Remote controlled model aircraft but not drones, and their accessories where the current replacement value is not more than $5,000;</li>
                            <li>(6) Remote controlled model watercraft and its accessories where the current replacement value is not more than $1,000;</li>
                            <li>(7) Motorised golf buggies, ride on lawn mowers, wheelchairs and mobility scooters;</li>
                            <li>(8) Motorcycles up to 250cc capacity, which do not require to be registered, and are not used for racing or farm purposes;</li>
                            <li>(9) Bicycles with current replacement value up to $5,000;</li>
                            <li>(10) Home office equipment other than mobile phones, laptops or tablet computers and global positioning systems;</li>
                            <li>(11) Portable spas, portable saunas and above-ground swimming pools including their accessories;</li>
                            <li>(12) Tools of trade;</li>
                            <li>(13) Computer software and media purchased online, e.g. music, software and videos;</li>
                            <li>(14) Surfboards, surf-skis and sail boards but not jet skis;</li>
                            <li>(15) Watercraft up to 4 metres long that is unpowered or powered by a motor less than 10hp and with current replacement value up to $2,000, and its accessories;</li>
                            <li>(16) Jewellery, gold silver and precious metal articles or furs and watches where the individual item, pair or set is valued at less than $5,000;</li>
                            <li>(17) Cameras, video cameras and other photographic equipment where the item and its accessories together are valued at less than $5,000.</li>
                        </ul>
                        <p> It does not mean any:</p>
                        <ul style="list-style:none">
                            <li>(1) Mobile phone, laptop and tablet computers or global positioning systems valued over $3,000 per item (cover available under the Valuables section);</li>
                            <li>(2) Aircraft, balloon, drone, craft that travels on a cushion of air or a rocket, and their accessories other than a remote controlled model aircraft with current replacement value less than $1,000;</li>
                            <li>(3) Caravan, mobile home, motor vehicle, motorcycle or motor scooter above 250cc capacity, trailer, horse float or an accessory to these items;</li>
                            <li>(4) Fixture, fitting or fixed appliance at the Location if You own:</li>
                            <ul>
                                <li>[a] The building that contains them; or</li>
                                <li> [b] The Strata or Group Title unit that contains them and it is the Governing Body’s duty to insure them.</li>
                            </ul>
                            <li>(5) Living creature;</li>
                            <li>(6) Hearing aid(cover available under the Valuables section);</li>
                            <li>(7) Loose or unset gemstones;</li>
                            <li>(8) Stock used in a business, trade or profession;</li>
                            <li>(9) Loose or compacted soil, earth, gravel, pebbles, rocks or granular rubber;</li>
                            <li>(10) Unfixed home building materials and uninstalled home fixtures or fittings;</li>
                            <li>(11) Watercraft which is more than 4 metres long or with current replacement value greater than $2,000, and its accessories;</li>
                            <li>(12) Jewellery, gold silver and precious metal articles or furs and watches where the individual item, pair or Set is valued at more than $5,000(cover available under the Valuables section);</li>
                            <li>(13) Cameras, video cameras and other photographic equipment where the item and its accessories together are valued at less than $5,000(cover available under the Valuables section);</li>
                        </ul>
                        <p>*Please refer to the policy wording for full details</p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                    </div>
                </div>
            </div>
        </div>
        <div id="homecontensModel" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="homecontensModel" aria-hidden="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="pull-left">Home Contents</h3>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                            <img src="~/images/close-icon.png" />
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Your Home Contents that are at the Location. They are covered against accidental loss or damage during the period of cover.</p>
                        <p>Your household goods and personal effects that You own or which are in Your care and for which You are legally responsible including:</p>
                        <ul style="list-style:none">
                            <li>(1) Carpets, curtains or internal blinds;</li>
                            <li>(2) Mobile phone, laptop and tablet computers or global positioning systems valued up to $3,000 per item. (Please refer to Extra Benefit – Temporary Removal of Home Contents (Worldwide Cover) for cover away from the Location);</li>
                            <li>(3) Furniture and furnishings;</li>
                            <li>(4) Home and garden appliances;</li>
                            <li>(5) Remote controlled model aircraft but not drones, and their accessories where the current replacement value is not more than $5,000;</li>
                            <li>(6) Remote controlled model watercraft and its accessories where the current replacement value is not more than $1,000;</li>
                            <li>(7) Motorised golf buggies, ride on lawn mowers, wheelchairs and mobility scooters;</li>
                            <li>(8) Motorcycles up to 250cc capacity, which do not require to be registered, and are not used for racing or farm purposes;</li>
                            <li>(9) Bicycles with current replacement value up to $5,000;</li>
                            <li>(10) Home office equipment other than mobile phones, laptops or tablet computers and global positioning systems;</li>
                            <li>(11) Portable spas, portable saunas and above-ground swimming pools including their accessories;</li>
                            <li>(12) Tools of trade;</li>
                            <li>(13) Computer software and media purchased online, e.g. music, software and videos;</li>
                            <li>(14) Surfboards, surf-skis and sail boards but not jet skis;</li>
                            <li>(15) Watercraft up to 4 metres long that is unpowered or powered by a motor less than 10hp and with current replacement value up to $2,000, and its accessories;</li>
                            <li>(16) Jewellery, gold silver and precious metal articles or furs and watches where the individual item, pair or set is valued at less than $5,000;</li>
                            <li>(17) Cameras, video cameras and other photographic equipment where the item and its accessories together are valued at less than $5,000.</li>
                        </ul>
                        <p>It does not mean any:</p>
                        <ul style="list-style:none">
                            <li>(1) Mobile phone, laptop and tablet computers or global positioning systems valued over $3,000 per item (cover available under the Valuables section);</li>
                            <li>(2) Aircraft, balloon, drone, craft that travels on a cushion of air or a rocket, and their accessories other than a remote controlled model aircraft with current replacement value less than $1,000;</li>
                            <li>(3) Caravan, mobile home, motor vehicle, motorcycle or motor scooter above 250cc capacity, trailer, horse float or an accessory to these items;</li>
                            <li>
                                (4) Fixture, fitting or fixed appliance at the Location if You own:
                                <ul style="list-style:none">
                                    <li>[a] The building that contains them; or</li>
                                    <li>[b] The Strata or Group Title unit that contains them and it is the Governing Body’s duty to insure them.</li>
                                </ul>
                            </li>
                            <li>(5) Living creature;</li>
                            <li>(6) Hearing aid (cover available under the Valuables section);</li>
                            <li>(7) Loose or unset gemstones;</li>
                            <li>(8) Stock used in a business, trade or profession;</li>
                            <li>(9) Loose or compacted soil, earth, gravel, pebbles, rocks or granular rubber;</li>
                            <li>(10) Unfixed home building materials and uninstalled home fixtures or fittings;</li>
                            <li>(11) Watercraft which is more than 4 metres long or with current replacement value greater than $2,000, and its accessories;</li>
                            <li>(12) Jewellery, gold silver and precious metal articles or furs and watches where the individual item, pair or Set is valued at more than $5,000 (cover available under the Valuables section);</li>
                            <li>(13) Cameras, video cameras and other photographic equipment where the item and its accessories together are valued at less than $5,000 (cover available under the Valuables section);</li>
                        </ul>
                        <p>*Please refer to the policy wording for full details</p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12 mt-10 mb-10">
            <div class="col-md-12">
                <p class="mini-text">If the following items, pairs, Collections or Sets are valued at more than $10,000 they need to be listed separately:</p>
                <p class="mini-text">a watch, a curio, a work of art, a fur, a coin or collection of coins, a medal or collection of medals, a stamp or collection of stamps, a document or set of documents, an item or set of jewellery or a gold, silver or platinum object.</p>
            </div>
        </div>
        <div class="col-md-12 mt-10 mb-10">
            <p class="col-md-12"><strong>If the following items, pairs, Collections or Sets are valued at more than $10,000 they need to be listed separately as <a href="#SpecifiedValuablesModel" role="button" data-target="#SpecifiedValuablesModel" data-toggle="modal">Specified Contents</a>.</strong></p>
            <div class="col-md-12 table-8">
                <table class="table homeContant" style="width:100%;">
                    <thead>
                        <tr>
                            <th class="space_left">Description</th>
                            <th class="space_left">Sum Insured</th>
                            <th class="space_right">&nbsp;</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.DescriptionObjList != null && Model.DescriptionObjList.Count() > 0)
                        {
                            CountTotal = Model.DescriptionObjList.Count();
                            for (int i = 0; i < Model.DescriptionObjList.Count(); i++)
                            {
                                jCount = i + 1;
                                <tr id="tname-tr-@jCount">
                                    @if (jCount == CountTotal)
                                    {
                                        <td>
                                            @Html.TextBoxFor(p => p.DescriptionObj.Description, Model.DescriptionObjList[i].Value, new { @autocomplete = "off", @class = "form-control form-inline field-length-lg no-border vlidationInsure commondatatest", @data_eiid = @Model.DescriptionObj.EiId, @id = "description", @style = "width:100%;", @data_itid = jCount, @data_regex = "ANS" })
                                            @Html.HiddenFor(p => p.DescriptionObj.EiId)
                                        </td>
                                        <td class="price stotal">
                                            $@Html.TextBoxFor(p => p.SuminsuredObj.Suminsured, Model.SuminsuredObjList[i].Value, new { @autocomplete = "off", @maxlength = "13", @class = "form-control form-inline field-length-xs no-border vlidationInsure  sumoftotalcover commondatatestComma commondatatestPrice", @data_eiid = @Model.SuminsuredObj.EiId, @id = "suminsured", @data_itid = jCount, @style = "width: 89%;", @data_regex = "N" })
                                            @Html.HiddenFor(p => p.SuminsuredObj.EiId)
                                        </td>
                                        <td class="no-border" id="tname-@jCount"><a href="javascript:void(0)" onclick="tnameAdd(@jCount)" class="button-3d">+</a></td>
                                    }
                                    else
                                    {
                                        <td>
                                            @Html.TextBoxFor(p => p.DescriptionObj.Description, Model.DescriptionObjList[i].Value, new { @autocomplete = "off", @class = "form-control form-inline field-length-lg no-border vlidationInsure commondatatest", @data_eiid = @Model.DescriptionObj.EiId, @id = "description", @style = "width:100%;", @data_itid = jCount, @data_regex = "ANS" })
                                            @Html.HiddenFor(p => p.DescriptionObj.EiId)
                                        </td>
                                        <td class="price stotal">
                                            $@Html.TextBoxFor(p => p.SuminsuredObj.Suminsured, Model.SuminsuredObjList[i].Value, new { @autocomplete = "off", @maxlength = "13", @class = "form-control form-inline field-length-xs no-border vlidationInsure  sumoftotalcover commondatatestComma commondatatestPrice", @data_eiid = @Model.SuminsuredObj.EiId, @id = "suminsured", @data_itid = jCount, @style = "width: 89%;", @data_regex = "N" })
                                            @Html.HiddenFor(p => p.SuminsuredObj.EiId)
                                        </td>
                                        <td class="no-border" id="tname-@jCount"><a href="javascript:void(0)" onclick="tnameRemove(@jCount)" class="button-3d">-</a></td>
                                    }
                                </tr>
                            }
                        }
                        else
                        {
                            <tr id="tname-tr-1">
                                <td>
                                    @Html.TextBoxFor(p => p.DescriptionObj.Description, new { @autocomplete = "off", @class = "form-control form-inline field-length-lg no-border vlidationInsure commondatatest", @data_eiid = @Model.DescriptionObj.EiId, @id = "description", @style = "width:100%;", @data_itid = "0", @data_regex = "ANS" })
                                    @Html.HiddenFor(p => p.DescriptionObj.EiId)
                                </td>
                                <td class="price stotal">
                                    $@Html.TextBoxFor(p => p.SuminsuredObj.Suminsured, new { @autocomplete = "off", @maxlength = "13", @class = "form-control form-inline field-length-xs no-border vlidationInsure  sumoftotalcover commondatatestComma commondatatestPrice", @data_eiid = @Model.SuminsuredObj.EiId, @id = "suminsured", @data_itid = "0", @style = "width: 89%;", @data_regex = "N" })
                                    @Html.HiddenFor(p => p.SuminsuredObj.EiId)
                                </td>
                                <td class="no-border" id="tname-1"><a href="javascript:void(0)" onclick="tnameAdd(1)" class="button-3d">+</a></td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td class="no-border" style="border: 1px solid #fff;"><label id="DescriptionObj.Description-error" class="error" for="DescriptionObj.Description"></label></td>
                            <td class="no-border" style="border: 1px solid #fff;"><label id="SuminsuredObj.Suminsured-error" class="error" for="SuminsuredObj.Suminsured"></label></td>
                            <td class="no-border" style="border: 1px solid #fff;">&nbsp;</td>
                        </tr>
                        <tr>
                            <td class="data_right text-right">Total Sum Insured</td>
                            <td class="price" id="tPrice" colspan="2">
                                $<span id="totalcoves">0</span>
                                @Html.HiddenFor(p => p.TotalcoverObj.Totalcover, new { @id = "totalcoverTotal", @class = "commondatatest commondatatestPriceChangenew", @data_eiid = @Model.TotalcoverObj.EiId })
                                @Html.HiddenFor(p => p.TotalcoverObj.EiId)
                                <label id="TotalcoverObj.Totalcover-error" class="error" for="TotalcoverObj.Totalcover"></label>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
        <div id="SpecifiedValuablesModel" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="SpecifiedValuablesModel" aria-hidden="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="pull-left">Specified Contents</h3>
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                            <img src="~/images/close-icon.png" />
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Those contents that will be listed separately on Your Certificate.</p>
                    </div>
                    <div class="modal-footer">
                        <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-12 mt-10 mb-10 ">
            <p class="col-md-12 col-sm-12 col-xs-12 policy-loc-row">How many years is it since you last made an insurance claim on your home contents?</p>
            <div class="col-md-12 col-sm-12 col-xs-12">
                @if (@Model.YearclaimObj.Yearclaim == "1")
                {
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '0', new { @id = "yearclaim0", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim0"><span><span></span></span>0 years</label></div>
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '1', new { @id = "yearclaim1", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @checked = "checked", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim1"><span><span></span></span>1 year</label></div>
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '2', new { @id = "yearclaim2", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim2"><span><span></span></span>2 or more years</label></div>
                }
                else if (@Model.YearclaimObj.Yearclaim == "2")
                {
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '0', new { @id = "yearclaim0", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim0"><span><span></span></span>0 years</label></div>
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '1', new { @id = "yearclaim1", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim1"><span><span></span></span>1 year</label></div>
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '2', new { @id = "yearclaim2", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @checked = "checked", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim2"><span><span></span></span>2 or more years</label></div>
                }
                else if (@Model.YearclaimObj.Yearclaim == "0")
                {
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '0', new { @id = "yearclaim0", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @checked = "checked", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim0"><span><span></span></span>0 years</label></div>
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '1', new { @id = "yearclaim1", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim1"><span><span></span></span>1 year</label></div>
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '2', new { @id = "yearclaim2", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim2"><span><span></span></span>2 or more years</label></div>
                }
                else
                {
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '0', new { @id = "yearclaim0", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim0"><span><span></span></span>0 years</label></div>
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '1', new { @id = "yearclaim1", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim1"><span><span></span></span>1 year</label></div>
                    <div class="col-md-4 col-sm-6 col-xs-12 policy-loc-row">@Html.RadioButtonFor(m => m.YearclaimObj.Yearclaim, '2', new { @id = "yearclaim2", @class = "yearclaim vlidationInsure commondataradio dispountFreeperiod", @data_eiid = @Model.YearclaimObj.EiId })<label for="yearclaim2"><span><span></span></span>2 or more years</label></div>
                }
                @Html.HiddenFor(p => p.YearclaimObj.EiId)
                <label id="YearclaimObj.Yearclaim-error" class="error" for="YearclaimObj.Yearclaim"></label>
            </div>
            @if (@Model.YearclaimObj.Yearclaim == "1")
            {
                <div class="col-md-12"><p id="dispountFreeperiodew">Congratulations your "No Claim" discount is <i id="dispountFreeperiod">10%</i>!!</p></div>
            }
            else if (@Model.YearclaimObj.Yearclaim == "2")
            {
                <div class="col-md-12"><p id="dispountFreeperiodew">Congratulations your "No Claim" discount is <i id="dispountFreeperiod">15%</i>!!</p></div>
            }
            else if (@Model.YearclaimObj.Yearclaim == "0")
            {
                <div class="col-md-12"><p id="dispountFreeperiodew">Your "No Claim" discount is  <i id="dispountFreeperiod">0%</i></p></div>
            }
            else
            {
                <div class="col-md-12"><p id="dispountFreeperiodew"></p></div>
            }
        </div>
        <div class="mt-10 mb-10 col-md-12 ">
            <div class="col-md-6"><p>Please select the <a href="#ExcesshomeBuildingModel" role="button" data-target="#ExcesshomeBuildingModel" data-toggle="modal">Excess</a></p></div>
            <div class="col-md-3">
                @Html.DropDownListFor(Model => Model.ExcesspayObj.Excess, listsExcess, new { @class = "gray-bg-underline form-control form-border-bottom field-length-sm vlidationInsure commondataselection", @data_eiid = @Model.ExcesspayObj.EiId, @id = "excess" })
                @Html.HiddenFor(p => p.ExcesspayObj.EiId)
                <label id="ExcesspayObj.Excess-error" class="error" for="ExcesspayObj.Excess"></label>
            </div>
            <div id="ExcesshomeBuildingModel" class="modal" data-easein="fadeIn" tabindex="-1" role="dialog" aria-labelledby="ExcesshomeBuildingModel" aria-hidden="false">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3 class="pull-left">Excess</h3>
                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                                <img src="~/images/close-icon.png" />
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>The amount that We will deduct from a claims settlement. This amount is shown in the Certificate.</p>
                            <p>Please Note</p>
                            <ul style="list-style:none">
                                <li>(A) If more than one claim arises out of the same event We will only apply the largest Excess.</li>
                                <li>(B) We will not deduct a young driver's Excess if the event that caused the claim happened when Your Vehicle was with a business for service, repair or parking.</li>
                            </ul>
                        </div>
                        <div class="modal-footer">
                            <button class="btn btn-default no-border" data-dismiss="modal" aria-hidden="true"> Back </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6 pull-right text-right">
            <button type="submit" class="button-3d nomargin tab-linker quot-next-btn" id="ptabbtnFHC">Save & Continue</button>
        </div>
    }
</div>
<link href="~/css/select2.min.css" rel="stylesheet" />
<script src="~/Scripts/select2.js"></script>
<div class="col-lg-3 col-md-3 col-sm-3 col-xs-12 policy-side-wrap">
    <h3>Policy Sections</h3>
    <div class="well">
        <h3 style="font-size: 11px;margin-bottom: 2px;">Edit or delete previous sections here</h3>
        @if (Model.PolicyInclusion != null && Model.PolicyInclusion.Count() > 0)
        {
            for (int i = 0; i < Model.PolicyInclusion.Count(); i++)
            {
                <div class="policy-loc-row" id="rightPannel-@i">
                    @Html.RadioButtonFor(m => m.SelectedInclusion, @Model.PolicyInclusion[i].Name, new { @class = "inclusions", @data_name = @Model.PolicyInclusion[i].Name, @data_nid = @i })<label for="radio1"><span><span></span></span>@Model.PolicyInclusion[i].Name</label>
                    <script type="text/javascript">
                        $(document).ready(function () {
                            $('.inclusions').click(function () {
                                var name = $(this).attr('data-name');
                                var nid = $(this).attr('data-nid');
                                $('.policy-ed-del-wrapper').hide();
                                $("#policy-ed-del-wrap-" + nid).show();

                            });
                        });
                    </script>
                    <div id="policy-ed-del-wrap-@i" class="policy-ed-del-wrapper" data style="display: none;">
                        <a id="RPEdit-@i" class="btn color-bk-btn policy-edit-wrap" data-pcid="@Model.PcId" data-policystatus="@Model.PolicyStatus" data-name="@Model.PolicyInclusion[i].Name" data-cid="@Model.CustomerId" data-unid="@Model.PolicyInclusion[i].UnId" data-profileid="@Model.PolicyInclusion[i].ProfileUnId" href="javascript:void(0);">Edit</a>&nbsp;
                        <a id="RPDelete-@i" class="btn color-bk-btn policy-delet-wrap" data-pcid="@Model.PcId" data-policystatus="@Model.PolicyStatus" data-name="@Model.PolicyInclusion[i].Name" data-cid="@Model.CustomerId" data-unid="@Model.PolicyInclusion[i].UnId" data-profileid="@Model.PolicyInclusion[i].ProfileUnId" href="javascript:void(0);">Delete</a>
                    </div>
                </div>
            }
            <script>
                        $(".policy-edit-wrap").click(function () {
                            var selectedname = $(this).data('name');
                            var selectedunid = $(this).data('unid');
                            var selectedprofileid = $(this).data('profileid');
                            var selectedcid = $(this).data('cid');
                            var selectedTrId = $(this).data('trid');
                            var PcId = $(this).data('pcid');
                            var policyStatus = $(this).data('policystatus');
                            // var prId = $(this).data('prId');
                            var prId = 1029;
                            $.ajax({
                                type: "POST",
                                url: "/Customer/EndorsePolicy",
                                data: {
                                    "name": selectedname, "PcId": PcId, "cid": selectedcid, "trId": selectedTrId, "unid": selectedunid, "Profileid": selectedprofileid, "prId": prId, "policyStatus": policyStatus, "effcdate": null
                                },
                                success: function (responce) {
                                    if (responce.Status == false) {
                                        $(".error").css("color", "red").html("Failed to edit section, there is a problem in core system.").show().delay(100000).fadeOut();
                                        $("html, body").animate({ scrollTop: 0 }, "slow");
                                    } else {
                                        window.location.href = responce;
                                    }
                                }
                            });
                        });
                        $(".policy-delet-wrap").click(function () {
                            var r = confirm("Are you sure you want to delete this section?");
                            if (r == true) {
                                var PcId = $("#pcidd").val();
                                var selectedunid = $(this).data('unid');
                                var selectedcid = $(this).data('cid');
                                var PcId = $(this).data('pcid');
                                var selectedname = $(this).data('name');
                                var selectedprofileid = $(this).data('profileid');
                                var selectedTrId = $(this).data('trid');
                                var policyStatus = $(this).data('policystatus');
                                var currId = $(this).attr("id");
                                $.ajax({
                                    type: "POST",
                                    url: "/Customer/DeleteUnit",
                                    data: { "unid": selectedunid, "cid": selectedcid, "pcid": PcId, "unit": selectedname, "profileid": selectedprofileid, "trid": selectedTrId, "policystatus": policyStatus },
                                    success: function (responce) {
                                        if (responce.Status == true) {
                                            var prentId = $('#' + currId).parent().parent().attr("id");
                                            $('#' + prentId).remove();
                                        }
                                    }
                                });
                            }
                        });
                        $("#bindcover").click(function () {
                            $.ajax({
                                type: "POST",
                                url: "/Customer/BindCover",
                                data: {},
                                success: function (responce) {
                                }
                            });
                        });
            </script>
        }
        else
        {
            if (Model.PolicyInclusions != null && Model.PolicyInclusions.Count() > 0)
            {
                for (int i = 0; i < Model.PolicyInclusions.Count(); i++)
                {
                    <div class="policy-loc-row" id="rightPannel-@i">
                        @Html.RadioButtonFor(m => m.SelectedInclusion, @i, new { @class = "inclusions", @data_name = @i, @data_nid = @i, @title = "Home Building should be filled first." })<label for="radio1"><span><span></span></span>@Model.PolicyInclusions[i].name</label>
                        <script type="text/javascript">
                            $(document).ready(function () {
                                $('.inclusions').click(function () {
                                    var name = $(this).attr('data-name');
                                    var nid = $(this).attr('data-nid');
                                    $('.policy-ed-del-wrapper').hide();
                                    $("#policy-ed-del-wrap-" + nid).show();

                                });
                            });
                        </script>
                        <div id="policy-ed-del-wrap-@i" class="policy-ed-del-wrapper" data style="display: none;">
                            <a id="RPEdit-@i" class="btn color-bk-btn policy-edit-wrap" data-pcid="@Model.PcId" data-policystatus="@Model.PolicyStatus" data-name="@Model.PolicyInclusions[i].name" data-cid="@Model.CustomerId" data-unid="@Model.PolicyInclusions[i].UnitId" data-profileid="@Model.PolicyInclusions[i].ProfileId" href="javascript:void(0);">Edit</a>&nbsp;
                            <a id="RPDelete-@i" class="btn color-bk-btn policy-delet-wrap" data-pcid="@Model.PcId" data-policystatus="@Model.PolicyStatus" data-name="@Model.PolicyInclusions[i].name" data-cid="@Model.CustomerId" data-unid="@Model.PolicyInclusions[i].UnitId" data-profileid="@Model.PolicyInclusions[i].ProfileId" href="javascript:void(0);">Delete</a>
                        </div>
                    </div>
                    <script>
                            $(".policy-edit-wrap").click(function () {
                                var selectedname = $(this).data('name');
                                var selectedunid = $(this).data('unid');
                                var selectedprofileid = $(this).data('profileid');
                                var selectedcid = $(this).data('cid');
                                var selectedTrId = $(this).data('trid');
                                var PcId = $(this).data('pcid');
                                var policyStatus = $(this).data('policystatus');
                                // var prId = $(this).data('prId');
                                var prId = 1029;
                                $.ajax({
                                    type: "POST",
                                    url: "/Customer/EndorsePolicy",
                                    data: {
                                        "name": selectedname, "PcId": PcId, "cid": selectedcid, "trId": selectedTrId, "unid": selectedunid, "Profileid": selectedprofileid, "prId": prId, "policyStatus": policyStatus, "calltype": 1, "effcdate": null
                                    },
                                    success: function (responce) {
                                        if (responce.Status == false) {
                                            $(".error").css("color", "red").html("Failed to edit section, there is a problem in core system.").show().delay(100000).fadeOut();
                                            $("html, body").animate({ scrollTop: 0 }, "slow");
                                        } else {
                                            window.location.href = responce;
                                        }
                                    }
                                });
                            });
                            $(".policy-delet-wrap").click(function () {
                                var r = confirm("Are you sure you want to delete this section?");
                                if (r == true) {
                                    var PcId = $("#pcidd").val();
                                    var selectedunid = $(this).data('unid');
                                    var selectedcid = $(this).data('cid');
                                    var PcId = $(this).data('pcid');
                                    var selectedname = $(this).data('name');
                                    var selectedprofileid = $(this).data('profileid');
                                    var selectedTrId = $(this).data('trid');
                                    var policyStatus = $(this).data('policystatus');
                                    var currId = $(this).attr("id");
                                    $.ajax({
                                        type: "POST",
                                        url: "/Customer/DeleteUnit",
                                        data: { "unid": selectedunid, "cid": selectedcid, "pcid": PcId, "unit": selectedname, "profileid": selectedprofileid, "trid": selectedTrId, "policystatus": policyStatus },
                                        success: function (responce) {
                                            if (responce.Status == true) {
                                                var prentId = $('#' + currId).parent().parent().attr("id");
                                                $('#' + prentId).remove();
                                            }
                                        }
                                    });
                                }
                            });
                    </script>
                }
            }

        }
        <div class="clearfix"></div>
        <div class="dropdown pc pc-in">
            <a class="new-cover-policy" href="javascript:void(0);">New Section</a>
            <ul class="dropdown-menu col-md-12 unit">
                @if (Model.NewSections != null && Model.NewSections.Count() > 0)
                {
                    for (int i = 0; i < Model.NewSections.Count(); i++)
                    {
                        if (Model.NewSections[i] == "HomeBuildings")
                        {
                            <li>
                                <a href="javascript:void(0);" class=@Model.NewSections[i]>
                                    + Home Buildings
                                </a>
                            </li>
                        }
                        else if (Model.NewSections[i] == "HomeContents")
                        {
                            <li>
                                <a href="javascript:void(0);" class=@Model.NewSections[i]>
                                    + Home Contents
                                </a>
                            </li>

                        }
                        else if (Model.NewSections[i] == "FarmProperty")
                        {
                            <li>
                                <a href="javascript:void(0);" class=@Model.NewSections[i]>
                                    + Farm Property
                                </a>
                            </li>
                        }
                        else
                        {
                            <li>
                                <a href="javascript:void(0);" class=@Model.NewSections[i]>
                                    + @Model.NewSections[i]
                                </a>
                            </li>
                        }
                    }
                }
            </ul>
            <script type="text/javascript">
                            $(document).on('click', 'ul.unit > li', function () {
                                var unitname = $(this).children("a").attr("class");
                                var cid = $("#ciid").val();
                                var pcid = $("#pcidd").val();
                                var prid = 1029;
                                $.ajax({
                                    type: "POST",
                                    url: "/Customer/AddUnit",
                                    data: { "unit": unitname, cid: cid, PcId: pcid, Prid: prid },
                                    success: function (responce) {
                                        if (responce.Status == false) {
                                            $(".error").css("color", "red").html("Failed to add section, there is a problem in core system.").show().delay(100000).fadeOut();
                                            $("html, body").animate({ scrollTop: 0 }, "slow");
                                        } else {
                                            window.location.href = responce;
                                        }
                                    }
                                });
                            });
            </script>
        </div>
    </div>
</div>
<script type="text/javascript">
                            $(document).ready(function () {
                                $("tr td .vlidationInsure").each(function () {
                                    var id = $(this).attr('id');
                                    var prid1 = $(this).parent().parent().attr('id');
                                    var prid = prid1.replace(/\D/g, '');
                                    var itid = $(this).data('itid');
                                    var nItid = itid + 1;
                                    $(this).attr('id', id + '' + prid);;
                                });
                            });
</script>
<script type="text/javascript">
    var allResData = '';
    var allResPostCode = '';
    $(document).on('focusout','.sumoftotalcover',function () {
        var sum = 0;
        $(".sumoftotalcover").each(function () {
            var Value = $(this).val();
            var rVal = Value.replace(/,/g, '');
            if (rVal!='0'){
                sum += +rVal;
            }
        });
        var newval = commaReplace(sum);
        $("#totalcoves").text(newval);
        $("#totalcoverTotal").val(newval);
    });
    $(document).ready(function () {
        var sum = 0;
        $(".sumoftotalcover").each(function () {
            var Value = $(this).val();
            var rVal = Value.replace(/,/g, '');
            if (rVal != '0') {
                sum += +rVal;
            }
        });
        var newval = commaReplace(sum);
        $("#totalcoves").text(newval);
        $("#totalcoverTotal").val(newval);
    });
    function tnameAdd(id) {
        var countId = id + 1;
        //var i = 0;
        //$(".table tbody tr").each(function () {
        //    var RowId = $(this).attr('id');
        //    $("#" + RowId + " .form-control").removeAttr("data-itid");
        //    $("#" + RowId + " .form-control").attr("data-itid", i);
        //    i++;
        //});
        var replaceA = '<a href="javascript:void(0)" onclick="tnameRemove(' + id + ')" class="button-3d">-</a>';
        var html = '<tr id="tname-tr-' + countId + '"><td>@Html.TextBoxFor(p => p.DescriptionObj.Description, new { @autocomplete = "off", @class = "form-control form-inline field-length-lg no-border vlidationInsure commondatatest", @data_eiid = @Model.DescriptionObj.EiId, @id = "description",@style="width:100%;", @data_itid = "", @data_regex = "ANS" })@Html.HiddenFor(p => p.DescriptionObj.EiId)</td><td class="price stotal">$@Html.TextBoxFor(p => p.SuminsuredObj.Suminsured, new { @autocomplete = "off", @maxlength = "13", @class = "form-control form-inline field-length-xs no-border vlidationInsure sumoftotalcover commondatatestComma commondatatestPrice", @data_eiid = @Model.SuminsuredObj.EiId, @id = "suminsured", @data_itid = "", @style = "width: 82%;", @data_regex = "AN" })@Html.HiddenFor(p => p.SuminsuredObj.EiId)</td><td class="no-border" id="tname-' + countId + '"><a href="javascript:void(0)" onclick="tnameAdd(' + countId + ')" class="button-3d">+</a></td></tr>';
        $("#tname-" + id).html(replaceA);
        $("#tname-tr-" + id).after(html);
        $("#tname-tr-" + countId + " .form-control").attr("data-itid", 0);
        $("#tname-tr-" + countId + " .form-control").val('');
        $("#tname-tr-" + countId + ' #description').attr('id', "description" + countId);
        $("#tname-tr-" + countId + ' #suminsured').attr('id', "suminsured" + countId);
    }
    function tnameRemove(id) {
        if (confirm('Are you sure? You want to delete this row?')) {
            var elidAll = new Array();
            var itid = '';
            $("#tname-tr-" + id + " td .vlidationInsure").each(function () {
                elidAll.push($(this).attr('data-eiid'));
                itid = $(this).attr('data-itid');
              });
            $.ajax({
                url: '/Customer/DeleteRow',
                type: "POST",
                crossOrigin: true,
                data: { "profileid": "1029", "ElId": elidAll, "unid": '@Session["UnitId"]', "ItId": itid },
                success: function (response) {
                    if (response.status == true) {
                        $("#tname-tr-" + id).remove();
                        var rowCount = $('.homeContant tbody tr').length;
                        var i = 1;
                        $(".homeContant tbody tr").each(function () {
                            var RowId = $(this).attr('id');
                            if (i <= rowCount) {
                                $("#" + RowId + " .form-control").attr("data-itid", i);
                            } else {
                                $("#" + RowId + " .form-control").attr("data-itid", 0);
                            }
                            i++;
                        });
                    }
                }
            });
        }
        var sum = 0;
        $(".sumoftotalcover").each(function () {
            var Value = $(this).val();
            var rVal = Value.replace(/,/g, '');
            if (rVal != '0') {
                sum += +rVal;
            }
        });
        var newval = commaReplace(sum);
        $("#totalcoves").text(newval);
        $("#totalcoverTotal").val(newval);
    }
</script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#ptabbtnFHC").click(function (e) {
            e.preventDefault();
            var valid = 1;
            $(".vlidationInsure").each(function () {
                var id = $(this).attr('id');
                var nameAttr = $(this).attr('name');
                var lastChar = id.substr(id.length - 1);
                var newval = $(this).val();
                //if (nameAttr == "AddressObj.Address") {
                //    var regex = /^[a-zA-Z0-9,/ ]*$/;
                //    if (newval=='') {
                //        $('#' + id).css({ "border": "1px solid #ff0000" });
                //        $("label[for='" + nameAttr + "']").text('Plese enter address').css({ "display": "block" });
                //        valid = 0;
                //    } else {
                //        $('#' + id).css({ "border": "" });
                //        $("label[for='" + nameAttr + "']").text("");
                //    }
                //}
                if (nameAttr == "CosttoreplaceObj.Costtoreplaces") {
                    var regex = /^[0-9]*$/;
                    var newValHc1 = newval.replace(/,/g, '');
                    var newvalTCN = $('#totalcoverTotal').val();
                    var newvalTC = newvalTCN.replace(/,/g, '');
                    var newValHc = parseInt(newValHc1) + parseInt(newvalTC);
                    if (newValHc == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please enter unspecified contents').css({ "display": "block" });
                        valid = 0;
                    } else if (newValHc != '' && !regex.test(newValHc)) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Only numeric are allowed').css({ "display": "block" });
                        valid = 0;
                    } else if (newValHc != '' && newValHc < 100000) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please enter a value greater than or equal to $100,000.').css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
                if (nameAttr == "DescriptionObj.Description") {
                    //var regex = /^[a-zA-Z0-9 ]*$/;
                    //if ($('#suminsured' + lastChar).val() != '' && newval == '') {
                    //    $('#' + id).css({ "border": "1px solid #ff0000" });
                    //    $("label[for='" + nameAttr + "']").text('Please enter description').css({ "display": "block" });
                    //    valid = 0;
                    //} else {
                    //    $('#' + id).css({ "border": "" });
                    //    $("label[for='" + nameAttr + "']").text("");
                    //}
                }
                if (nameAttr == "SuminsuredObj.Suminsured") {
                    var regex = /^[0-9]*$/;
                    var newValHcS = newval.replace(/,/g, '');
                    if ($('#description' + lastChar).val() != '' && newValHcS == '') {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please enter sum insured').css({ "display": "block" });
                        valid = 0;
                    } else if ($('#description' + lastChar).val() != '' && !regex.test(newValHcS)) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Only numeric are allowed').css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
                if (nameAttr == "YearclaimObj.Yearclaim") {
                    if ($("input[name='" + nameAttr + "']:checked").val() == undefined) {
                        $('#' + id).css({ "border": "1px solid #ff0000" });
                        $("label[for='" + nameAttr + "']").text('Please select, you may be missing out on a discount').css({ "display": "block" });
                        valid = 0;
                    } else {
                        $('#' + id).css({ "border": "" });
                        $("label[for='" + nameAttr + "']").text("");
                    }
                }
            });
            if (valid == 1) {
                $("form[name='homeContent']").submit();
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).on('focusout', ".commondatatest", function () {
        var Value = $(this).val();
        var id = $(this).attr('id');
        var EIId = $(this).data('eiid');
        var ItIdN = $(this).attr('data-itid');
        var Nregex = $(this).data('regex');
        var name = $(this).attr('name');
        var strID = id.replace(/\D/g, '');
        if (ItIdN == undefined || ItIdN == "") {
            var ItId = "0";
        } else {
            var ItId = ItIdN;
        }
        var regex = "";
        var text = "";
        if (Nregex == 'N') {
            regex = /^[0-9]*$/;
            text = "Only numeric are allowed";
            Value = Value.replace(/,/g, '');
        } else if (Nregex == 'A') {
            //regex = /^[a-zA-Z ]*$/;
            //text = "Special character & numeric are not allowed";
        } else if (Nregex == 'AN') {
            //regex = /^[a-zA-Z0-9 ]*$/;
            //text = "Special character are not allowed";
        } else if (Nregex == 'AS') {
            regex = /^[a-zA-Z/ ]*$/;
            text = "Numeric are not allowed";
        }
        if (Value != '' && regex != '' && !regex.test(Value)) {
            $('#' + id).css({ "border": "1px solid #ff0000" });
            $("label[for='" + name + "']").text(text).css({ "display": "block" });
        } else if (Value != "") {
            $('#' + id).css({ "border": "" });
            $("label[for='" + name + "']").text('').css({ "display": "none" });
            elementAjaxCall(Value, EIId, ItId, strID);
        }
    });
    function elementAjaxCall(Value, EIId, ItId, strID) {
        if (Value != '' && EIId != '') {
            $.ajax({
                url: '/Customer/ElementDetails',
                type: "POST",
                crossOrigin: true,
                data: { "PrId": "1029", "ElId": EIId, "Value": Value, "ItId": ItId },
                success: function (data) {
                    if (!$.isEmptyObject(data.valuedata) && data.valuedata.length > 0) {
                        var valuedata = data.valuedata;
                        if (valuedata != '' && valuedata != null) {
                            $.each(valuedata, function (index, value) {
                                var StateIdNewOne = $("[data-eiid=" + value.Element.ElId + "]").attr('id');
                                if (!$.isEmptyObject(data.identifiers) && data.identifiers.length > 0) {
                                    var identifiers = data.identifiers;
                                    $.each(identifiers, function (index2, value2) {
                                        if ((value.Element.ElId == 60285 || value.Element.ElId == 60287) && strID != '') {
                                            $("#tname-tr-" + strID + " .form-control").attr("data-itid", value2.NewId);
                                        }
                                    });
                                }
                                if (!$.isEmptyObject(data.stateData) && data.stateData.length > 0) {
                                    var statedata = data.stateData;
                                    if (statedata != '' && statedata != null) {
                                        $.each(statedata, function (index1, value1) {
                                            var StateIdNew = $("[data-eiid=" + value1.Element.ElId + "]").attr('id');
                                            if (value1.Value == 'Invisible') {
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'none' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Disabled') {
                                                $('#' + StateIdNew).attr('disabled', 'disabled');
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'none' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Read Only') {
                                                $('#' + StateIdNew).attr('readonly', 'readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Strike Through') {
                                                $('#' + StateIdNew).css({ 'text-decoration': 'line-through' });
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            } else if (value1.Value == 'Required') {
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).attr('required', 'required');
                                            } else if (value1.Value == '"Not Rendered') {
                                                $('#' + StateIdNew).css({ 'text-decoration': '' });
                                                $('#' + StateIdNew).removeAttr('readonly');
                                                $('#' + StateIdNew).removeAttr('disabled');
                                                $('.cl-' + value1.Element.ElId).css({ 'display': 'block' });
                                                $('#' + StateIdNew).removeAttr('required', 'required');
                                            }
                                        });
                                    }
                                }
                            });
                        }
                    }
                    else {
                        if (!$.isEmptyObject(data.identifiers) && data.identifiers.length > 0) {
                            var identifiers = data.identifiers;
                            $.each(identifiers, function (index2, value2) {
                                if ((EIId == 60285 || EIId == 60287) && strID != '') {
                             
                                            $("#tname-tr-" + strID + " .form-control").attr("data-itid", value2.NewId);
                                        }
                               });
                        }
                    }
                    if (!$.isEmptyObject(data.rowsorcedata) && data.rowsorcedata.length > 0) {
                        var rowsorcedata = data.rowsorcedata;
                        if (rowsorcedata != '' && rowsorcedata != null) {
                            $.each(rowsorcedata, function (index, value) {
                                var rowsorcedataIdNewOne = $("[data-eiid=" + value.Element.ElId + "]").attr('id');
                                var rowsorcedataType = $("[data-eiid=" + value.Element.ElId + "]").attr('type');
                                var rowsorcedataName = $("[data-eiid=" + value.Element.ElId + "]").attr('name');
                                var rowsorcedataEIID = $("[data-eiid=" + value.Element.ElId + "]").data('eiid');
                                var rowsorcedataOption = value.Options;
                                if (!$.isEmptyObject(rowsorcedataOption) && rowsorcedataOption.length > 0) {
                                    var html = '<option value="">--Select--</option>';
                                    $.each(rowsorcedataOption, function (index1, value1) {
                                        if (value1.DataValue == 0) {
                                        } else {
                                            html += '<option value="' + value1.DataValue + '">' + value1.DataText + '</option>';
                                        }
                                    });
                                    if (rowsorcedataType == undefined) {
                                        $('#' + rowsorcedataIdNewOne).html(html);
                                    } else {
                                        var NewHtml = '<select class="form-control vlidationInsure form-border-bottom commondataselection" data-eiid="' + rowsorcedataEIID + '" id="' + rowsorcedataIdNewOne + '" name="' + rowsorcedataName + '"></select>';
                                        $('#' + rowsorcedataIdNewOne).replaceWith(NewHtml);
                                        $('#' + rowsorcedataIdNewOne).html(html);
                                    }
                                }
                            });
                        }
                    }
                    if (data.status == "Decline") {
                        var StateNameNewOne = $("[data-eiid=" + EIId + "]").attr('name');
                        var StateNameNewOne1 = StateNameNewOne.split('.').join("");
                        $("#" + StateNameNewOne1 + "error").val('Decline');
                    } else {
                        var StateNameNewOne = $("[data-eiid=" + EIId + "]").attr('name');
                        var StateNameNewOne1 = StateNameNewOne.split('.').join("");
                        $("#" + StateNameNewOne1 + "error").val('');
                    }
                    if (data.referrallists == "") {
                        $('#referralList-p').html('No Referral List');
                    } else {
                        $('#referralList-p').html(data.referrallists);
                    }
                    if (data.usermessage == "" || typeof (data.usermessage) == "undefined") {
                        var newIDforCurrentElement = $("[data-eiid=" + EIId + "]").attr('id');
                        var newNameforCurrentElement = $("[data-eiid=" + EIId + "]").attr('name');
                        var newIDforCurrentElementTypes = $("[data-eiid=" + EIId + "]").attr('type');
                        if (newIDforCurrentElementTypes == 'radio') {
                            var labelid = $('#' + newIDforCurrentElement).parent().parent().siblings('.error').attr("for");
                        } else if (newIDforCurrentElementTypes == 'checkbox') {
                            var labelid = $('#' + newIDforCurrentElement).parent().parent().siblings('.error').attr("for");
                        } else {
                            var labelid = $('#' + newIDforCurrentElement).siblings('.error').attr("for");
                        }
                        if (labelid == undefined) {
                            $("label[for='" + newNameforCurrentElement + "']").html('');
                            $("label[for='" + newNameforCurrentElement + "']").css({ "display": "none" });
                        } else {
                            $("label[for='" + labelid + "']").html('');
                            $("label[for='" + labelid + "']").css({ "display": "none" });
                        }
                    } else {
                        var newIDforCurrentElement = $("[data-eiid=" + EIId + "]").attr('id');
                        var newNameforCurrentElement = $("[data-eiid=" + EIId + "]").attr('name');
                        var newIDforCurrentElementTypes = $("[data-eiid=" + EIId + "]").attr('type');
                        if (newIDforCurrentElementTypes == 'radio') {
                            var labelid = $('#' + newIDforCurrentElement).parent().parent().siblings('.error').attr("for");
                        } else if (newIDforCurrentElementTypes == 'checkbox') {
                            var labelid = $('#' + newIDforCurrentElement).parent().parent().siblings('.error').attr("for");
                        } else {
                            var labelid = $('#' + newIDforCurrentElement).siblings('.error').attr("for");
                        }
                        if (labelid == undefined) {
                            $("label[for='" + newNameforCurrentElement + "']").html(data.usermessage);
                            $("label[for='" + newNameforCurrentElement + "']").css({ "display": "block" });
                        } else {
                            $("label[for='" + labelid + "']").html(data.usermessage);
                            $("label[for='" + labelid + "']").css({ "display": "block" });
                        }
                    }
                }
            });
        }
    }
    $(document).on('click', '.savepolicyP', function () {
        $.ajax({
            type: "POST",
            url: "/Customer/SavePolicy",
            data: { "PrId": 1029 },
            success: function (res) {
                if (res.status == true) {
                    var html = '<div class="alert alert-success"><strong>' + res.result + '</strong></div>';
                    $('.savepolicyresult').html(html).delay(10000).fadeOut();
                } else {
                    var html = '<div class="alert alert-danger"><strong>' + res.result + '</strong></div>';
                    $('.savepolicyresult').html(html).delay(10000).fadeOut();
                }
            }
        });
    });
</script>
<script type="text/javascript">
    $(document).on('change', '.dispountFreeperiod', function () {
        var Value = $(this).val();
        var dis = "";
        if (Value == 0) {
            dis = 'Your "No Claim" discount is <i id="dispountFreeperiod">0%</i>';
        } else if (Value == 1) {
            dis = 'Congratulations your "No Claim" discount is <i id="dispountFreeperiod">10%</i>!!';
        } else if (Value > 1) {
            dis = 'Congratulations your "No Claim" discount is <i id="dispountFreeperiod">15%</i>!!';
        } else {
            dis = '';
        }
        $('#dispountFreeperiodew').html(dis);
    });
    $(document).on('focusout', ".commondatatestPriceChangeNewOne", function () {
        var Value = $(this).val();
        var EIId = $(this).data('eiid');
        var Nregex = $(this).data('regex');
        var name = $(this).attr('name');
        var ItIdN = $(this).attr('data-itid');
        var minm = $(this).data('min');
        var id = $(this).attr('id');
        var newval = $(this).val();
        var rVal = newval.replace(/,/g, '');
        var newvalTCN = $('#totalcoverTotal').val();
        var newvalTC = newvalTCN.replace(/,/g, '');
        var rVal1 = parseInt(rVal) + parseInt(newvalTC);
        var text = '';
        if (ItIdN == undefined || ItIdN == "") {
            var ItId = "0";
        } else {
            var ItId = ItIdN;
        }
        if (minm == undefined || minm == "") {
            var min = "0";
        } else {
            var min = minm;

        }
        if (rVal1 < min) {
            var newval = commaReplace(min);
            $(this).val(newval);
            $("label[id='" + name + "-error']").text('This has been adjusted to the minimum sum insured.').css({ "display": "block" });
            rVal = min;
        }
        var regex = /^[0-9]*$/;
        if (rVal != '' && !regex.test(rVal)) {
            $('#' + id).css({ "border": "1px solid #ff0000" });
            $("label[id='" + name + "-error']").text('Only numeric are allowed').css({ "display": "block" });
        } else if (min != '0' && rVal1 < min) {
            $('#' + id).css({ "border": "1px solid #ff0000" });
            $("label[id='" + name + "-error']").text(text).css({ "display": "block" });
        } else if (rVal != "") {
            $('#' + id).css({ "border": "" });
            $("label[id='" + name + "-error']").text('').css({ "display": "none" });
            elementAjaxCall(rVal, EIId, ItId);
        }
    });
</script>